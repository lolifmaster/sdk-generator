{
  "openapi": "3.0.3",
  "info": {
    "title": "Eden AI",
    "version": "2.0",
    "description": "Your project description"
  },
  "paths": {
    "/text/ai_detection": {
      "post": {
        "operationId": "text_text_ai_detection_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**originalityai**|`v1`|0.01 (per 400 char)|400 char\n|**sapling**|`v1`|5.0 (per 1000000 char)|1000 char\n|**winstonai**|`v2`|14.0 (per 1000000 char)|1 char\n\n\n</details>\n\n<details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n\n</details>",
        "summary": "AI Content Detection",
        "tags": [
          "Ai Detection"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textai_detectionAiDetectionRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "sapling,winstonai,originalityai",
                    "text": "The panther, also known as the black panther, is a magnificent and enigmatic creature that captivates the imagination of many. It is not a distinct species itself, but rather a melanistic variant of leopards and jaguars. The mesmerizing black coat of the panther is a result of a genetic mutation that increases the production of dark pigment, melanin.         Panthers are highly adaptable predators, found primarily in dense forests and jungles across Africa, Asia, and the Americas. Their stealthy nature and exceptional agility make them formidable hunters. They are solitary creatures, preferring to roam alone in their vast territories, which can span over a hundred square miles.         Equipped with incredible strength and sharp retractable claws, panthers are skilled climbers and swimmers. Their keen senses, including sharp vision and acute hearing, aid them in locating prey, often stalking their victims from the cover of trees or thick underbrush before launching a precise and powerful attack.         The diet of a panther consists mainly of deer, wild boar, and smaller mammals. However, they are opportunistic hunters and can also target livestock and domestic animals in areas where their habitats overlap with human settlements. Unfortunately, this sometimes leads to conflicts with humans, resulting in the panther being perceived as a threat.         Despite their association with darkness and mystery, panthers play a vital role in maintaining the balance of ecosystems. As apex predators, they help control populations of herbivores, preventing overgrazing and maintaining healthy prey dynamics.         Conservation efforts are crucial to the survival of panther populations worldwide. Habitat loss, poaching, and illegal wildlife trade pose significant threats to their existence. Various organizations and governments are working tirelessly to protect these magnificent creatures through initiatives such as establishing protected areas, promoting sustainable land use practices, and raising awareness about their importance in the natural world."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textai_detectionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "sapling": {
                        "ai_score": 0.970070276931997,
                        "items": [
                          {
                            "text": "The panther, also known as the black panther, is a magnificent and enigmatic creature that captivates the imagination of many.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9990817176020741,
                            "ai_score_detail": 0.9990817176020741
                          },
                          {
                            "text": "It is not a distinct species itself, but rather a melanistic variant of leopards and jaguars.",
                            "prediction": "ai-generated",
                            "ai_score": 0.7623477056593153,
                            "ai_score_detail": 0.7623477056593153
                          },
                          {
                            "text": "The mesmerizing black coat of the panther is a result of a genetic mutation that increases the production of dark pigment, melanin.",
                            "prediction": "original",
                            "ai_score": 0.012890975241315883,
                            "ai_score_detail": 0.012890975241315883
                          },
                          {
                            "text": "Panthers are highly adaptable predators, found primarily in dense forests and jungles across Africa, Asia, and the Americas.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9241208913655489,
                            "ai_score_detail": 0.9241208913655489
                          },
                          {
                            "text": "Their stealthy nature and exceptional agility make them formidable hunters.",
                            "prediction": "original",
                            "ai_score": 3.0645117310434955e-07,
                            "ai_score_detail": 3.0645117310434955e-07
                          },
                          {
                            "text": "They are solitary creatures, preferring to roam alone in their vast territories, which can span over a hundred square miles.",
                            "prediction": "ai-generated",
                            "ai_score": 0.98354284228347,
                            "ai_score_detail": 0.98354284228347
                          },
                          {
                            "text": "Equipped with incredible strength and sharp retractable claws, panthers are skilled climbers and swimmers.",
                            "prediction": "original",
                            "ai_score": 0.2026922923822072,
                            "ai_score_detail": 0.2026922923822072
                          },
                          {
                            "text": "Their keen senses, including sharp vision and acute hearing, aid them in locating prey, often stalking their victims from the cover of trees or thick underbrush before launching a precise and powerful attack.",
                            "prediction": "original",
                            "ai_score": 0.2140626025123451,
                            "ai_score_detail": 0.2140626025123451
                          },
                          {
                            "text": "The diet of a panther consists mainly of deer, wild boar, and smaller mammals.",
                            "prediction": "original",
                            "ai_score": 0.37921425697733424,
                            "ai_score_detail": 0.37921425697733424
                          },
                          {
                            "text": "However, they are opportunistic hunters and can also target livestock and domestic animals in areas where their habitats overlap with human settlements.",
                            "prediction": "ai-generated",
                            "ai_score": 0.5961050762132343,
                            "ai_score_detail": 0.5961050762132343
                          }
                        ]
                      },
                      "winstonai": {
                        "ai_score": 0.9999,
                        "items": [
                          {
                            "text": "The panther, also known as the black panther, is a magnificent and enigmatic creature that captivates the imagination of many. It is not a distinct species itself, but rather a melanistic variant of leopards and jaguars. The mesmerizing black coat of the panther is a result of a genetic mutation that increases the production of dark pigment, melanin.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9968,
                            "ai_score_detail": 0.9968
                          },
                          {
                            "text": "Panthers are highly adaptable predators, found primarily in dense forests and jungles across Africa, Asia, and the Americas. Their stealthy nature and exceptional agility make them formidable hunters. They are solitary creatures, preferring to roam alone in their vast territories, which can span over a hundred square miles.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9997,
                            "ai_score_detail": 0.9997
                          },
                          {
                            "text": "Equipped with incredible strength and sharp retractable claws, panthers are skilled climbers and swimmers. Their keen senses, including sharp vision and acute hearing, aid them in locating prey, often stalking their victims from the cover of trees or thick underbrush before launching a precise and powerful attack. The diet of a panther consists mainly of deer, wild boar, and smaller mammals.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9998,
                            "ai_score_detail": 0.9998
                          },
                          {
                            "text": "However, they are opportunistic hunters and can also target livestock and domestic animals in areas where their habitats overlap with human settlements. Unfortunately, this sometimes leads to conflicts with humans, resulting in the panther being perceived as a threat.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9994,
                            "ai_score_detail": 0.9994
                          },
                          {
                            "text": "Despite their association with darkness and mystery, panthers play a vital role in maintaining the balance of ecosystems. As apex predators, they help control populations of herbivores, preventing overgrazing and maintaining healthy prey dynamics. Conservation efforts are crucial to the survival of panther populations worldwide.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9999,
                            "ai_score_detail": 0.9999
                          },
                          {
                            "text": "Habitat loss, poaching, and illegal wildlife trade pose significant threats to their existence. Various organizations and governments are working tirelessly to protect these magnificent creatures through initiatives such as establishing protected areas, promoting sustainable land use practices, and raising awareness about their importance in the natural world.",
                            "prediction": "ai-generated",
                            "ai_score": 0.9999,
                            "ai_score_detail": 0.9999
                          }
                        ]
                      },
                      "originalityai": {
                        "ai_score": 1.0,
                        "items": [
                          {
                            "text": "The panther, also known as the black panther, is a magnificent and enigmatic creature that captivates the imagination of many. It is not a distinct species itself, but rather a melanistic variant of leopards and jaguars. The mesmerizing black coat of the panther is a result of a genetic mutation that increases the production of dark pigment, melanin.         Panthers are highly adaptable predators, found primarily in dense forests and jungles across Africa, Asia, and the Americas. Their stealthy nature and exceptional agility make them formidable hunters. They are solitary creatures, preferring to roam alone in their vast territories, which can span over a hundred square miles.         Equipped with incredible strength and sharp retractable claws, panthers are skilled climbers and swimmers. Their keen senses, including sharp vision and acute hearing, aid them in locating prey, often stalking their victims from the cover of trees or thick underbrush before launching a precise and powerful attack.         The diet of a panther consists mainly of deer, wild boar, and smaller mammals. However, they are opportunistic hunters and can also target livestock and domestic animals in areas where their habitats overlap with human settlements. Unfortunately, this sometimes leads to conflicts with humans, resulting in the panther being perceived as a threat.         Despite their association with darkness and mystery, panthers play a vital role in maintaining the balance of ecosystems. As apex predators, they help control populations of herbivores, preventing overgrazing and maintaining healthy prey dynamics.         Conservation efforts are crucial to the survival of panther populations worldwide. Habitat loss, poaching, and illegal wildlife trade pose significant threats to their existence. Various organizations and governments are working tirelessly to protect these magnificent creatures through initiatives such as establishing protected areas, promoting sustainable land use practices, and raising awareness about their importance in the natural world.",
                            "prediction": "ai-generated",
                            "ai_score": 1.0,
                            "ai_score_detail": 1.0
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/anonymization": {
      "post": {
        "operationId": "text_text_anonymization_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**emvista**|`v1.0`|3.0 (per 1000000 char)|1 char\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**microsoft**|`v3.1`|0.25 (per 1000000 char)|1000 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Arabic**|`ar`|\n|**Chinese**|`zh`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**Finnish**|`fi`|\n|**French**|`fr`|\n|**German**|`de`|\n|**Hindi**|`hi`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Korean**|`ko`|\n|**Modern Greek (1453-)**|`el`|\n|**Norwegian**|`no`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Russian**|`ru`|\n|**Spanish**|`es`|\n|**Swedish**|`sv`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Chinese (Simplified)**|`zh-Hans`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**Portuguese (Brazil)**|`pt-BR`|\n|**Portuguese (Portugal)**|`pt-PT`|\n\n</details>",
        "summary": "Anonymization",
        "tags": [
          "Anonymization"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "amazon,emvista,openai,microsoft",
                    "language": "en",
                    "text": "Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. First is the product reviews and pricing. There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). The second issue is they make it too difficult to get help when there's an issue with an order."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textanonymizationResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "amazon": {
                        "result": "The phone number of *** is the **************.",
                        "entities": [
                          {
                            "offset": 20,
                            "length": 3,
                            "category": "PersonalInformation",
                            "subcategory": "Name",
                            "original_label": "NAME",
                            "content": "Luc",
                            "confidence_score": 1.0
                          },
                          {
                            "offset": 31,
                            "length": 14,
                            "category": "DateAndTime",
                            "subcategory": "DateTime",
                            "original_label": "DATE_TIME",
                            "content": "06 21 32 43 54",
                            "confidence_score": 0.877
                          }
                        ]
                      },
                      "emvista": {
                        "result": "The phone number of *** is the 06 21 ** 43 54.",
                        "entities": [
                          {
                            "offset": 37,
                            "length": 12,
                            "category": "DateAndTime",
                            "subcategory": "Duration",
                            "original_label": "Thing/Abstract/Time",
                            "content": "the 06 21 32",
                            "confidence_score": null
                          },
                          {
                            "offset": 20,
                            "length": 3,
                            "category": "PersonalInformation",
                            "subcategory": "Name",
                            "original_label": "Thing/Concrete/Animate/Livingbeing/Human",
                            "content": "Luc",
                            "confidence_score": null
                          }
                        ]
                      },
                      "openai": {
                        "result": "The phone number of *** is the **************.",
                        "entities": [
                          {
                            "offset": 20,
                            "length": 3,
                            "category": "PersonalInformation",
                            "subcategory": "Name",
                            "original_label": "name",
                            "content": "Luc",
                            "confidence_score": 0.9
                          },
                          {
                            "offset": 31,
                            "length": 14,
                            "category": "PersonalInformation",
                            "subcategory": "Phone",
                            "original_label": "phonenumber",
                            "content": "06 21 32 43 54",
                            "confidence_score": 0.95
                          }
                        ]
                      },
                      "microsoft": {
                        "result": "The phone number of *** is the **************.",
                        "entities": [
                          {
                            "offset": 20,
                            "length": 3,
                            "category": "PersonalInformation",
                            "subcategory": "Name",
                            "original_label": "Person",
                            "content": "Luc",
                            "confidence_score": 0.99
                          },
                          {
                            "offset": 31,
                            "length": 14,
                            "category": "PersonalInformation",
                            "subcategory": "Phone",
                            "original_label": "PhoneNumber",
                            "content": "06 21 32 43 54",
                            "confidence_score": 0.8
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/chat": {
      "post": {
        "operationId": "text_text_chat_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**openai**|**gpt-3.5-turbo**|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|**gpt-3.5-turbo-1106**|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|-|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|**gpt-4**|`v1Beta`|0.06 (per 1000 token)|1 token\n|**openai**|**gpt-3.5-turbo-0301**|`v1Beta`|0.002 (per 1000 token)|1 token\n|**openai**|**gpt-4-0314**|`v1Beta`|0.06 (per 1000 token)|1 token\n|**openai**|**gpt-3.5-turbo-16k**|`v1Beta`|0.004 (per 1000 token)|1 token\n|**openai**|**gpt-4-1106-preview**|`v1Beta`|0.03 (per 1000 token)|1 token\n|**openai**|**gpt-4-vision-preview**|`v1Beta`|0.03 (per 1000 token)|1 token\n|**google**|-|`v1`|0.5 (per 1000000 char)|1000 char\n|**replicate**|-|`v1`|0.0032 (per 1 exec_time)|1 exec_time\n|**cohere**|-|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**cohere**|**command-light**|`2022-12-06`|0.6 (per 1000000 token)|1 token\n|**cohere**|**command-nightly**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**cohere**|**command**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**cohere**|**command-light-nightly**|`2022-12-06`|0.6 (per 1000000 token)|1 token\n|**meta**|-|`v1`|2.56 (per 1000000 token)|1 token\n|**meta**|**llama2-70b-chat-v1**|`v1`|2.56 (per 1000000 token)|1 token\n|**meta**|**llama2-13b-chat-v1**|`v1`|1.0 (per 1000000 token)|1 token\n|**mistral**|**mistral-medium**|`v0.0.1`|7.5 (per 1000000 token)|1 token\n|**mistral**|**mistral-small**|`v0.0.1`|1.8 (per 1000000 token)|1 token\n|**mistral**|**mistral-tiny**|`v0.0.1`|0.42 (per 1000000 token)|1 token\n|**perplexityai**|**mistral-7b-instruct**|`v1.0`|0.28 (per 1000000 token)|1 token\n|**perplexityai**|**mixtral-8x7b-instruct**|`v1.0`|0.28 (per 1000000 token)|1 token\n|**perplexityai**|**pplx-7b-chat**|`v1.0`|0.28 (per 1000000 token)|1 token\n|**perplexityai**|**pplx-7b-online**|`v1.0`|0.28 (per 1000000 token)|1 token\n|**perplexityai**|**codellama-34b-instruct**|`v1.0`|1.4 (per 1000000 token)|1 token\n|**perplexityai**|**llama-2-70b-chat**|`v1.0`|2.8 (per 1000000 token)|1 token\n|**perplexityai**|**pplx-70b-chat**|`v1.0`|2.8 (per 1000000 token)|1 token\n|**perplexityai**|**pplx-70b-online**|`v1.0`|2.8 (per 1000000 token)|1 token\n|**perplexityai**|-|`v1.0`|0.28 (per 1000000 token)|1 token\n\n\n</details>\n\n<details><summary>Supported Models</summary><details><summary>openai</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**openai**|`gpt-3.5-turbo`|\n||`gpt-3.5-turbo-0301`|\n||`gpt-3.5-turbo-1106`|\n||`gpt-3.5-turbo-16k`|\n||`gpt-4`|\n||`gpt-4-0314`|\n||`gpt-4-1106-preview`|\n||`gpt-4-vision-preview`|\n\n</details><details><summary>google</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**google**|`chat-bison`|\n\n</details><details><summary>replicate</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**replicate**|`llama-2-70b-chat`|\n\n</details><details><summary>cohere</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**cohere**|`command`|\n||`command-light`|\n||`command-light-nightly`|\n||`command-nightly`|\n\n</details><details><summary>meta</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**meta**|`llama2-13b-chat-v1`|\n||`llama2-70b-chat-v1`|\n\n</details><details><summary>mistral</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**mistral**|`medium`|\n||`small`|\n||`tiny`|\n\n</details><details><summary>perplexityai</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**perplexityai**|`codellama-34b-instruct`|\n||`llama-2-70b-chat`|\n||`mistral-7b-instruct`|\n||`mixtral-8x7b-instruct`|\n||`pplx-70b-chat`|\n||`pplx-70b-online`|\n||`pplx-7b-chat`|\n||`pplx-7b-online`|\n\n</details>\n\n</details>",
        "summary": "Chat",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textchatChatRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "cohere,meta,replicate,openai,mistral,perplexityai,google",
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.",
                    "chatbot_global_action": "You are a keyword extractor. Extract Only the word from the text provided.",
                    "previous_history": [
                      {
                        "role": "user",
                        "message": "Steve Jobs was a co-founder of Apple Inc., a multinational technology company headquartered in Cupertino, California. He was also the CEO and a major shareholder of Pixar Animation Studios, which was later acquired by The Walt Disney Company. Jobs was widely recognized as a visionary entrepreneur and a pioneer in the personal computer industry. In addition to his business ventures, he was also known for his charismatic personality, his signature black turtleneck, and his famous keynote presentations at Apple's product launches."
                      },
                      {
                        "role": "assistant",
                        "message": "steve jobs, apple inc, pixar, california"
                      }
                    ],
                    "temperature": 0.0,
                    "max_tokens": 100
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textchatResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "cohere": {
                        "generated_text": "Barack Hussein Obama was an American politician who served as the 44th president of the United States from 2009 to 2017. He was a member of the Democratic Party and previously served as a U.S. senator</co:0,1,5,8> from <co: 0,5,8>Illinois from 2005 to 2008. \n\nObama was born in Honolulu, Hawaii in 1961 and was raised in Kenya. He has a degree from Columbia University and Harvard Law School. After serving as an Illinois state senator, he was elected as a U.S. senator</co:1,5,8> in <co: 1,4>2004. \n\nDuring his presidency, Obama took several actions to raise vehicle fuel efficiency, including increasing corporate average fuel economy, signing the \"cash-for-clunkers\" bill, and lifting the ban on federal funding for embryonic stem cell research. \n\nBarack Obama's personal information I could find includes his birthday, place of birth, family diversity, and personal charisma. Would you like me to continue extracting information or provide specific details on any of these categories?",
                        "message": [
                          {
                            "role": "USER",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "CHATBOT",
                            "message": "Barack Hussein Obama was an American politician who served as the 44th president of the United States from 2009 to 2017. He was a member of the Democratic Party and previously served as a U.S. senator</co:0,1,5,8> from <co: 0,5,8>Illinois from 2005 to 2008. \n\nObama was born in Honolulu, Hawaii in 1961 and was raised in Kenya. He has a degree from Columbia University and Harvard Law School. After serving as an Illinois state senator, he was elected as a U.S. senator</co:1,5,8> in <co: 1,4>2004. \n\nDuring his presidency, Obama took several actions to raise vehicle fuel efficiency, including increasing corporate average fuel economy, signing the \"cash-for-clunkers\" bill, and lifting the ban on federal funding for embryonic stem cell research. \n\nBarack Obama's personal information I could find includes his birthday, place of birth, family diversity, and personal charisma. Would you like me to continue extracting information or provide specific details on any of these categories?"
                          }
                        ]
                      },
                      "meta": {
                        "generated_text": "barack obama, united states, democratic party, illinois",
                        "message": [
                          {
                            "role": "user",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "assistant",
                            "message": "barack obama, united states, democratic party, illinois"
                          }
                        ]
                      },
                      "replicate": {
                        "generated_text": " Sure! Here are the keywords extracted from the given text:\n\n* Barack Obama\n* President\n* United States\n* African-American\n* Democratic Party\n* Illinois\n* Senator",
                        "message": [
                          {
                            "role": "user",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "assistant",
                            "message": " Sure! Here are the keywords extracted from the given text:\n\n* Barack Obama\n* President\n* United States\n* African-American\n* Democratic Party\n* Illinois\n* Senator"
                          }
                        ]
                      },
                      "openai": {
                        "generated_text": "Barack Hussein Obama, American, politician, president, United States, Democratic Party, African-American, senator, Illinois, state",
                        "message": [
                          {
                            "role": "user",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "assistant",
                            "message": "Barack Hussein Obama, American, politician, president, United States, Democratic Party, African-American, senator, Illinois, state"
                          }
                        ]
                      },
                      "mistral": {
                        "generated_text": "barack, hussein, obama, president, united, states, democratic, party, illinois, senator\n\n(Note: I've included \"president\" as a keyword even though it's part of the sentence \"president of the United States\" because it is a key role and title associated with Barack Obama.)",
                        "message": [
                          {
                            "role": "user",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "assistant",
                            "message": "barack, hussein, obama, president, united, states, democratic, party, illinois, senator\n\n(Note: I've included \"president\" as a keyword even though it's part of the sentence \"president of the United States\" because it is a key role and title associated with Barack Obama.)"
                          }
                        ]
                      },
                      "perplexityai": {
                        "generated_text": "Barack Hussein Obama II is an American politician who served as the 44th President of the United States from 2009 to 2017. A member of the Democratic Party, he was the first African-American president in U.S. history. Before becoming President, Obama held various political positions, including:\n\n- U.S. Senator from Illinois (2005-2008)\n- Illinois State Senator (1997-2004)\n\nIn addition to his political career, Obama worked as a civil rights lawyer and university lecturer. He was born on August 4, 1961, in Honolulu, Hawaii, and graduated from Columbia University in 1983 with a B.A. in political science. Obama's story is the American story, with values from the heartland, a middle-class upbringing in a strong family, hard work and education as the means of getting ahead, and the conviction that a life so blessed should be lived in service to others.\n\nDuring his presidency, Obama implemented significant healthcare reforms and worked on various domestic and foreign policy issues. He was awarded the Nobel Peace Prize in 2009 for his extraordinary efforts to strengthen international diplomacy, human rights, and peace. After serving two terms as President, Obama is currently serving as a private citizen.\n",
                        "message": [
                          {
                            "role": "user",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "system",
                            "message": "Barack Hussein Obama II is an American politician who served as the 44th President of the United States from 2009 to 2017. A member of the Democratic Party, he was the first African-American president in U.S. history. Before becoming President, Obama held various political positions, including:\n\n- U.S. Senator from Illinois (2005-2008)\n- Illinois State Senator (1997-2004)\n\nIn addition to his political career, Obama worked as a civil rights lawyer and university lecturer. He was born on August 4, 1961, in Honolulu, Hawaii, and graduated from Columbia University in 1983 with a B.A. in political science. Obama's story is the American story, with values from the heartland, a middle-class upbringing in a strong family, hard work and education as the means of getting ahead, and the conviction that a life so blessed should be lived in service to others.\n\nDuring his presidency, Obama implemented significant healthcare reforms and worked on various domestic and foreign policy issues. He was awarded the Nobel Peace Prize in 2009 for his extraordinary efforts to strengthen international diplomacy, human rights, and peace. After serving two terms as President, Obama is currently serving as a private citizen.\n"
                          }
                        ]
                      },
                      "google": {
                        "generated_text": "Barack Obama, president, united states, african american, democrat, senator, illinois",
                        "message": [
                          {
                            "role": "user",
                            "message": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                          },
                          {
                            "role": "assistant",
                            "message": "Barack Obama, president, united states, african american, democrat, senator, illinois"
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/chat/stream": {
      "post": {
        "operationId": "text_text_chat_stream_create",
        "description": "Streamed version of Chat feature, the raw text will be streamed chunk by chunk.\n\nNOTE: For this feature, you an only request one provider at a time.",
        "summary": "Chat Stream",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textchatChatStreamRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "cohere,meta,replicate,openai,mistral,perplexityai,google",
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.",
                    "chatbot_global_action": "You are a keyword extractor. Extract Only the word from the text provided.",
                    "previous_history": [
                      {
                        "role": "user",
                        "message": "Steve Jobs was a co-founder of Apple Inc., a multinational technology company headquartered in Cupertino, California. He was also the CEO and a major shareholder of Pixar Animation Studios, which was later acquired by The Walt Disney Company. Jobs was widely recognized as a visionary entrepreneur and a pioneer in the personal computer industry. In addition to his business ventures, he was also known for his charismatic personality, his signature black turtleneck, and his famous keynote presentations at Apple's product launches."
                      },
                      {
                        "role": "assistant",
                        "message": "steve jobs, apple inc, pixar, california"
                      }
                    ],
                    "temperature": 0.0,
                    "max_tokens": 100
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "ResponseExample": {
                    "value": "{\"text\": \"obama\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"american\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"politician\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"44th\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"president\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"united\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"states\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"democratic\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"party\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"african-american\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"senator\", \"is_blocked\": false, \"provider\": \"openai\"}\n{\"text\": \"illinois\", \"is_blocked\": false, \"provider\": \"openai\"}",
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/code_generation": {
      "post": {
        "operationId": "text_text_code_generation_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v1`|2.0 (per 1000000 token)|1 token\n|**google**|`v1`|0.5 (per 1000000 char)|1 char\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Achinese**|`ace`|\n|**Afrikaans**|`af`|\n|**Akan**|`ak`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Asturian**|`ast`|\n|**Awadhi**|`awa`|\n|**Ayacucho Quechua**|`quy`|\n|**Balinese**|`ban`|\n|**Bambara**|`bm`|\n|**Banjar**|`bjn`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Belarusian**|`be`|\n|**Bemba (Zambia)**|`bem`|\n|**Bengali**|`bn`|\n|**Bhojpuri**|`bho`|\n|**Bosnian**|`bs`|\n|**Buginese**|`bug`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Central Atlas Tamazight**|`tzm`|\n|**Central Aymara**|`ayr`|\n|**Central Kanuri**|`knc`|\n|**Central Khmer**|`km`|\n|**Central Kurdish**|`ckb`|\n|**Chhattisgarhi**|`hne`|\n|**Chinese**|`zh`|\n|**Chokwe**|`cjk`|\n|**Crimean Tatar**|`crh`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**Dyula**|`dyu`|\n|**Dzongkha**|`dz`|\n|**Eastern Yiddish**|`ydd`|\n|**Egyptian Arabic**|`arz`|\n|**English**|`en`|\n|**Esperanto**|`eo`|\n|**Estonian**|`et`|\n|**Ewe**|`ee`|\n|**Faroese**|`fo`|\n|**Fijian**|`fj`|\n|**Finnish**|`fi`|\n|**Fon**|`fon`|\n|**French**|`fr`|\n|**Friulian**|`fur`|\n|**Galician**|`gl`|\n|**Ganda**|`lg`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Guarani**|`gn`|\n|**Gujarati**|`gu`|\n|**Haitian**|`ht`|\n|**Halh Mongolian**|`khk`|\n|**Hausa**|`ha`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Igbo**|`ig`|\n|**Iloko**|`ilo`|\n|**Indonesian**|`id`|\n|**Irish**|`ga`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kabiy\u00e8**|`kbp`|\n|**Kabuverdianu**|`kea`|\n|**Kabyle**|`kab`|\n|**Kachin**|`kac`|\n|**Kamba (Kenya)**|`kam`|\n|**Kannada**|`kn`|\n|**Kashmiri**|`ks`|\n|**Kazakh**|`kk`|\n|**Kikuyu**|`ki`|\n|**Kimbundu**|`kmb`|\n|**Kinyarwanda**|`rw`|\n|**Kirghiz**|`ky`|\n|**Kongo**|`kg`|\n|**Korean**|`ko`|\n|**Lao**|`lo`|\n|**Latgalian**|`ltg`|\n|**Ligurian**|`lij`|\n|**Limburgan**|`li`|\n|**Lingala**|`ln`|\n|**Lithuanian**|`lt`|\n|**Lombard**|`lmo`|\n|**Luba-Katanga**|`lu`|\n|**Luo (Kenya and Tanzania)**|`luo`|\n|**Lushai**|`lus`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Magahi**|`mag`|\n|**Maithili**|`mai`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Manipuri**|`mni`|\n|**Maori**|`mi`|\n|**Marathi**|`mr`|\n|**Mesopotamian Arabic**|`acm`|\n|**Minangkabau**|`min`|\n|**Modern Greek (1453-)**|`el`|\n|**Moroccan Arabic**|`ary`|\n|**Mossi**|`mos`|\n|**Najdi Arabic**|`ars`|\n|**Nepali (macrolanguage)**|`ne`|\n|**Nigerian Fulfulde**|`fuv`|\n|**North Azerbaijani**|`azj`|\n|**North Levantine Arabic**|`apc`|\n|**Northern Kurdish**|`kmr`|\n|**Northern Uzbek**|`uzn`|\n|**Norwegian Bokm\u00e5l**|`nb`|\n|**Norwegian Nynorsk**|`nn`|\n|**Nuer**|`nus`|\n|**Nyanja**|`ny`|\n|**Occitan (post 1500)**|`oc`|\n|**Oriya (macrolanguage)**|`or`|\n|**Pangasinan**|`pag`|\n|**Panjabi**|`pa`|\n|**Papiamento**|`pap`|\n|**Pedi**|`nso`|\n|**Persian**|`fa`|\n|**Plateau Malagasy**|`plt`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Romanian**|`ro`|\n|**Rundi**|`rn`|\n|**Russian**|`ru`|\n|**Samoan**|`sm`|\n|**Sango**|`sg`|\n|**Sanskrit**|`sa`|\n|**Santali**|`sat`|\n|**Sardinian**|`sc`|\n|**Scottish Gaelic**|`gd`|\n|**Serbian**|`sr`|\n|**Shan**|`shn`|\n|**Shona**|`sn`|\n|**Sicilian**|`scn`|\n|**Silesian**|`szl`|\n|**Sindhi**|`sd`|\n|**Sinhala**|`si`|\n|**Slovak**|`sk`|\n|**Slovenian**|`sl`|\n|**Somali**|`so`|\n|**South Azerbaijani**|`azb`|\n|**South Levantine Arabic**|`ajp`|\n|**Southern Pashto**|`pbt`|\n|**Southern Sotho**|`st`|\n|**Southwestern Dinka**|`dik`|\n|**Spanish**|`es`|\n|**Standard Latvian**|`lvs`|\n|**Standard Malay**|`zsm`|\n|**Sundanese**|`su`|\n|**Swahili (macrolanguage)**|`sw`|\n|**Swati**|`ss`|\n|**Swedish**|`sv`|\n|**Ta'izzi-Adeni Arabic**|`acq`|\n|**Tagalog**|`tl`|\n|**Tajik**|`tg`|\n|**Tamashek**|`tmh`|\n|**Tamil**|`ta`|\n|**Tatar**|`tt`|\n|**Telugu**|`te`|\n|**Thai**|`th`|\n|**Tibetan**|`bo`|\n|**Tigrinya**|`ti`|\n|**Tok Pisin**|`tpi`|\n|**Tosk Albanian**|`als`|\n|**Tsonga**|`ts`|\n|**Tswana**|`tn`|\n|**Tumbuka**|`tum`|\n|**Tunisian Arabic**|`aeb`|\n|**Turkish**|`tr`|\n|**Turkmen**|`tk`|\n|**Twi**|`tw`|\n|**Uighur**|`ug`|\n|**Ukrainian**|`uk`|\n|**Umbundu**|`umb`|\n|**Urdu**|`ur`|\n|**Venetian**|`vec`|\n|**Vietnamese**|`vi`|\n|**Waray (Philippines)**|`war`|\n|**Welsh**|`cy`|\n|**West Central Oromo**|`gaz`|\n|**Wolof**|`wo`|\n|**Xhosa**|`xh`|\n|**Yoruba**|`yo`|\n|**Yue Chinese**|`yue`|\n|**Zulu**|`zu`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Arabic (world)**|`ar-001`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**Persian (Afghanistan)**|`fa-AF`|\n\n</details>",
        "summary": "Code Generation",
        "tags": [
          "Code Generation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textcode_generationCodeGenerationRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "openai,google,nlpcloud",
                    "instruction": "Write a function in python that calculates fibonacci",
                    "temperature": 0.1,
                    "max_tokens": 100,
                    "prompt": ""
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textcode_generationResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "openai": {
                        "generated_text": "Sure, here's a Python function that checks if a year is a leap year:\n\n```python\ndef is_leap_year(year):\n    \"\"\"\n    Returns True if the given year is a leap year, False otherwise.\n    \"\"\"\n    if year % 4 == 0:\n        if year % 100 == 0:\n            if year % 400 == 0:\n                return True\n            else:\n                return False\n        else:\n            return True\n    else:\n        return False\n```\n\nThis function takes a year as input and returns True if it is a leap year, and False otherwise. It uses the standard rules for determining leap years: a year is a leap year if it is divisible by 4, unless it is also divisible by 100, in which case it is only a leap year if it is also divisible by 400."
                      },
                      "google": {
                        "generated_text": "```python\ndef is_leap_year(year):\n  \"\"\"\n  Determines whether a year is a leap year.\n\n  Args:\n    year: The year to check.\n\n  Returns:\n    True if the year is a leap year, False otherwise.\n  \"\"\"\n\n  # A year is a leap year if it is divisible by 4, unless it is divisible by 100\n  # unless it is also divisible by 400.\n\n  if year % 4 == 0:\n    if year % 100 == 0:\n      return year % 400 == 0\n    else:\n      return True\n  else:\n    return False\n```"
                      },
                      "nlpcloud": {
                        "generated_text": "def is_leap_year(year):\n    if (year%4 == 0 and year%100 != 0) or (year%400 == 0):\n            return True\n    return False"
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/custom_classification": {
      "post": {
        "operationId": "text_text_custom_classification_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**cohere**|`2022-12-06`|2.0 (per 1000 request)|1 request\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n\n\n</details>\n\n",
        "summary": "Custom Text Classification",
        "tags": [
          "Custom Classification"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textcustom_classificationCustomClassificationRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "openai,cohere",
                    "texts": [
                      "Confirm your email address",
                      "hey i need u to send some $"
                    ],
                    "labels": [
                      "spam",
                      "not spam"
                    ],
                    "examples": [
                      [
                        "I need help please wire me $1000 right now",
                        "spam"
                      ],
                      [
                        "Dermatologists dont like her!",
                        "spam"
                      ],
                      [
                        "Please help me?",
                        "spam"
                      ],
                      [
                        "Pre-read for tomorrow",
                        "not spam"
                      ],
                      [
                        "Your parcel will be delivered today",
                        "not spam"
                      ],
                      [
                        "Review changes to our Terms and Conditions",
                        "not spam"
                      ]
                    ]
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textcustom_classificationResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "openai": {
                        "classifications": [
                          {
                            "input": "Confirm your email address",
                            "label": "not spam",
                            "confidence": 0.9
                          },
                          {
                            "input": "hey i need u to send some $",
                            "label": "spam",
                            "confidence": 0.8
                          },
                          {
                            "input": "Congratulations! You've won a free vacation! Click the link to claim your prize now!",
                            "label": "spam",
                            "confidence": 0.95
                          },
                          {
                            "input": "Make money fast! Join our exclusive program and start earning thousands in just a few days!",
                            "label": "spam",
                            "confidence": 0.9
                          },
                          {
                            "input": "Get rich quick with this amazing investment opportunity. Guaranteed returns!",
                            "label": "spam",
                            "confidence": 0.85
                          },
                          {
                            "input": "Unlock special discounts on luxury goods. Limited-time offer! Click here to shop now!",
                            "label": "not spam",
                            "confidence": 0.95
                          },
                          {
                            "input": "You've been selected for a special promotion. Act now to secure your spot!",
                            "label": "spam",
                            "confidence": 0.8
                          },
                          {
                            "input": "Meet hot singles in your area! Chat now and find your perfect match!",
                            "label": "spam",
                            "confidence": 0.9
                          },
                          {
                            "input": "Eliminate debt effortlessly! Our program can erase your financial worries.",
                            "label": "spam",
                            "confidence": 0.85
                          },
                          {
                            "input": "Claim your inheritance! Just provide your bank details for a seamless transfer.",
                            "label": "spam",
                            "confidence": 0.9
                          }
                        ]
                      },
                      "cohere": {
                        "classifications": [
                          {
                            "input": "Confirm your email address",
                            "label": "not spam",
                            "confidence": 0.91768086
                          },
                          {
                            "input": "hey i need u to send some $",
                            "label": "spam",
                            "confidence": 0.9789305
                          },
                          {
                            "input": "Congratulations! You've won a free vacation! Click the link to claim your prize now!",
                            "label": "not spam",
                            "confidence": 0.5345591
                          },
                          {
                            "input": "Make money fast! Join our exclusive program and start earning thousands in just a few days!",
                            "label": "spam",
                            "confidence": 0.91536784
                          },
                          {
                            "input": "Get rich quick with this amazing investment opportunity. Guaranteed returns!",
                            "label": "spam",
                            "confidence": 0.789368
                          },
                          {
                            "input": "Unlock special discounts on luxury goods. Limited-time offer! Click here to shop now!",
                            "label": "not spam",
                            "confidence": 0.5363132
                          },
                          {
                            "input": "You've been selected for a special promotion. Act now to secure your spot!",
                            "label": "not spam",
                            "confidence": 0.69171065
                          },
                          {
                            "input": "Meet hot singles in your area! Chat now and find your perfect match!",
                            "label": "spam",
                            "confidence": 0.7748757
                          },
                          {
                            "input": "Eliminate debt effortlessly! Our program can erase your financial worries.",
                            "label": "spam",
                            "confidence": 0.8801634
                          },
                          {
                            "input": "Claim your inheritance! Just provide your bank details for a seamless transfer.",
                            "label": "spam",
                            "confidence": 0.6725608
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/custom_named_entity_recognition": {
      "post": {
        "operationId": "text_text_custom_named_entity_recognition_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**cohere**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n\n\n</details>\n\n",
        "summary": "Custom Named Entity Recognition",
        "tags": [
          "Custom Named Entity Recognition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textcustom_named_entity_recognitionCustomNamedEntityRecognitionRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "openai,cohere",
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.",
                    "entities": [
                      "Politician",
                      "State"
                    ],
                    "examples": [
                      {
                        "text": "Steve Jobs was the co-founder of Apple Inc., a multinational technology company based in Cupertino, California. He was born in San Francisco, California in 1955, and studied at Reed College before dropping out to start Apple with Steve Wozniak in 1976",
                        "entities": [
                          {
                            "entity": "Steve Jobs",
                            "category": "Person"
                          },
                          {
                            "entity": "Apple Inc",
                            "category": "Organization"
                          },
                          {
                            "entity": "California",
                            "category": "Location"
                          },
                          {
                            "entity": "1955",
                            "category": "Date"
                          }
                        ]
                      }
                    ]
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textcustom_named_entity_recognitionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "openai": {
                        "items": [
                          {
                            "entity": "John Smith",
                            "category": "person"
                          },
                          {
                            "entity": "Starbucks",
                            "category": "location"
                          },
                          {
                            "entity": "New York City",
                            "category": "location"
                          },
                          {
                            "entity": "IBM",
                            "category": "organization"
                          }
                        ]
                      },
                      "cohere": {
                        "items": [
                          {
                            "entity": "John Smith",
                            "category": "person"
                          },
                          {
                            "entity": "Starbucks",
                            "category": "location"
                          },
                          {
                            "entity": "New York City",
                            "category": "location"
                          },
                          {
                            "entity": "IBM",
                            "category": "organization"
                          }
                        ]
                      },
                      "eden-ai": {
                        "status": "success",
                        "items": [
                          {
                            "entity": "John Smith",
                            "category": "person"
                          },
                          {
                            "entity": "Starbucks",
                            "category": "location"
                          },
                          {
                            "entity": "New York City",
                            "category": "location"
                          },
                          {
                            "entity": "IBM",
                            "category": "organization"
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/embeddings": {
      "post": {
        "operationId": "text_text_embeddings_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**openai**|-|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**google**|-|`v1`|0.1 (per 1000000 char)|1 char\n|**cohere**|-|`v1`|0.1 (per 1000000 char)|1 char\n|**cohere**|**4096embed-english-v2.0**|`v1`|0.1 (per 1000000 char)|1 char\n|**cohere**|**1024embed-english-light-v2.0**|`v1`|0.1 (per 1000000 char)|1 char\n|**cohere**|**768__embed-multilingual-v2.0**|`v1`|0.1 (per 1000000 char)|1 char\n|**mistral**|-|`v0.0.1`|0.1 (per 1000000 token)|1 token\n|**jina**|-|`v1`|0.018 (per 1000000 token)|1 token\n\n\n</details>\n\n<details><summary>Supported Models</summary><details><summary>openai</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**openai**|`1536__text-embedding-ada-002`|\n\n</details><details><summary>google</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**google**|`768__textembedding-gecko`|\n\n</details><details><summary>cohere</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**cohere**|`1024__embed-english-light-v2.0`|\n||`4096__embed-english-v2.0`|\n||`768__embed-multilingual-v2.0`|\n\n</details><details><summary>mistral</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**mistral**|`1024__mistral-embed`|\n\n</details><details><summary>jina</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**jina**|`jina-embeddings-v2-base-code`|\n||`jina-embeddings-v2-base-de`|\n||`jina-embeddings-v2-base-en`|\n||`jina-embeddings-v2-base-es`|\n||`jina-embeddings-v2-base-zh`|\n\n</details>\n\n</details>",
        "summary": "Embeddings",
        "tags": [
          "Embeddings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textembeddingsEmbeddingsRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "mistral,jina,cohere,openai,google",
                    "texts": [
                      "Hello world"
                    ]
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textembeddingsResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "mistral": {
                        "items": [
                          {
                            "embedding": [
                              -0.0220947265625,
                              0.040863037109375,
                              0.055389404296875,
                              0.03546142578125,
                              0.025726318359375,
                              0.0357666015625,
                              0.01177978515625,
                              0.0309600830078125,
                              -0.0310211181640625,
                              -0.0284881591796875
                            ]
                          }
                        ]
                      },
                      "jina": {
                        "items": [
                          {
                            "embedding": [
                              -0.0047852774,
                              0.0048640342,
                              -0.01645707,
                              -0.024395779,
                              -0.017263541,
                              0.012512918,
                              -0.019191515,
                              0.009053908,
                              -0.010213212,
                              -0.026890801
                            ]
                          }
                        ]
                      },
                      "cohere": {
                        "items": [
                          {
                            "embedding": [
                              3.8632812,
                              0.50927734,
                              2.2109375,
                              -0.8208008,
                              -0.1071167,
                              -0.22253418,
                              -0.5698242,
                              -0.4506836,
                              0.43188477,
                              0.97216797
                            ]
                          }
                        ]
                      },
                      "openai": {
                        "items": [
                          {
                            "embedding": [
                              -0.0047852774,
                              0.0048640342,
                              -0.01645707,
                              -0.024395779,
                              -0.017263541,
                              0.012512918,
                              -0.019191515,
                              0.009053908,
                              -0.010213212,
                              -0.026890801
                            ]
                          }
                        ]
                      },
                      "google": {
                        "items": [
                          {
                            "embedding": [
                              0.027175916358828545,
                              0.010277487337589264,
                              0.003436307655647397,
                              0.02837119624018669,
                              0.044907715171575546,
                              -0.016265053302049637,
                              0.010080956853926182,
                              0.002023588167503476,
                              -0.020589638501405716,
                              0.012744131498038769
                            ]
                          },
                          {
                            "embedding": [
                              0.0001314455730607733,
                              0.015687013044953346,
                              -0.002990683540701866,
                              0.02059912495315075,
                              0.028040403500199318,
                              -0.01405489444732666,
                              0.042016930878162384,
                              0.013006427325308323,
                              -0.022377343848347664,
                              0.0183300469070673
                            ]
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/emotion_detection": {
      "post": {
        "operationId": "text_text_emotion_detection_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n|**vernai**|`v1`|2.0 (per 1000 request)|1 request\n\n\n</details>\n\n",
        "summary": "Emotion Detection",
        "tags": [
          "Emotion Detection"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textemotion_detectionEmotionDetectionRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "nlpcloud,vernai",
                    "text": "I'm scared!"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textemotion_detectionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "nlpcloud": {
                        "text": "I'm scared",
                        "items": [
                          {
                            "emotion": "Fear",
                            "emotion_score": 99.74
                          },
                          {
                            "emotion": "Anger",
                            "emotion_score": 0.12
                          },
                          {
                            "emotion": "Surprise",
                            "emotion_score": 0.05
                          },
                          {
                            "emotion": "Sadness",
                            "emotion_score": 0.04
                          },
                          {
                            "emotion": "Joy",
                            "emotion_score": 0.03
                          },
                          {
                            "emotion": "Love",
                            "emotion_score": 0.01
                          }
                        ]
                      },
                      "vernai": {
                        "text": "I'm scared",
                        "items": [
                          {
                            "emotion": "Fear",
                            "emotion_score": 51.0
                          },
                          {
                            "emotion": "Sadness",
                            "emotion_score": 51.0
                          },
                          {
                            "emotion": "Anger",
                            "emotion_score": 0.0
                          },
                          {
                            "emotion": "Love",
                            "emotion_score": 0.0
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/entity_sentiment": {
      "post": {
        "operationId": "text_text_entity_sentiment_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 1.26.8`|1.0 (per 1000000 char)|300 char\n|**google**|`v1`|2.0 (per 1000000 char)|1000 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**English**|`en`|\n|**Japanese**|`ja`|\n|**Spanish**|`es`|\n\n</details>",
        "summary": "Entity Sentiment",
        "tags": [
          "Entity Sentiment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textentity_sentimentEntitySentimentRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "amazon,google",
                    "language": "en",
                    "text": "Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. First is the product reviews and pricing. There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). The second issue is they make it too difficult to get help when there's an issue with an order."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textentity_sentimentResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "amazon": {
                        "items": [
                          {
                            "type": "PERSON",
                            "text": "He",
                            "sentiment": "Neutral",
                            "begin_offset": 223,
                            "end_offset": 225
                          },
                          {
                            "type": "PERSON",
                            "text": "Barack Hussein Obama",
                            "sentiment": "Neutral",
                            "begin_offset": 0,
                            "end_offset": 20
                          },
                          {
                            "type": "OTHER",
                            "text": "president",
                            "sentiment": "Neutral",
                            "begin_offset": 191,
                            "end_offset": 200
                          },
                          {
                            "type": "PERSON",
                            "text": "Obama",
                            "sentiment": "Neutral",
                            "begin_offset": 154,
                            "end_offset": 159
                          },
                          {
                            "type": "PERSON",
                            "text": "politician",
                            "sentiment": "Neutral",
                            "begin_offset": 36,
                            "end_offset": 46
                          },
                          {
                            "type": "PERSON",
                            "text": "44th",
                            "sentiment": "Neutral",
                            "begin_offset": 65,
                            "end_offset": 69
                          },
                          {
                            "type": "OTHER",
                            "text": "president",
                            "sentiment": "Neutral",
                            "begin_offset": 70,
                            "end_offset": 79
                          },
                          {
                            "type": "ORGANIZATION",
                            "text": "U.S.",
                            "sentiment": "Neutral",
                            "begin_offset": 249,
                            "end_offset": 253
                          },
                          {
                            "type": "ORGANIZATION",
                            "text": "United States",
                            "sentiment": "Neutral",
                            "begin_offset": 87,
                            "end_offset": 100
                          },
                          {
                            "type": "ORGANIZATION",
                            "text": "United States",
                            "sentiment": "Neutral",
                            "begin_offset": 208,
                            "end_offset": 221
                          }
                        ]
                      },
                      "google": {
                        "items": [
                          {
                            "type": "PERSON",
                            "text": "Barack Hussein Obama",
                            "sentiment": "Neutral",
                            "begin_offset": null,
                            "end_offset": null
                          },
                          {
                            "type": "PERSON",
                            "text": "politician",
                            "sentiment": "Neutral",
                            "begin_offset": 36,
                            "end_offset": 46
                          },
                          {
                            "type": "PERSON",
                            "text": "Obama",
                            "sentiment": "Neutral",
                            "begin_offset": 154,
                            "end_offset": 159
                          },
                          {
                            "type": "PERSON",
                            "text": "member",
                            "sentiment": "Neutral",
                            "begin_offset": 122,
                            "end_offset": 128
                          },
                          {
                            "type": "PERSON",
                            "text": "president",
                            "sentiment": "Neutral",
                            "begin_offset": 191,
                            "end_offset": 200
                          },
                          {
                            "type": "LOCATION",
                            "text": "American",
                            "sentiment": "Neutral",
                            "begin_offset": 27,
                            "end_offset": 35
                          },
                          {
                            "type": "LOCATION",
                            "text": "United States",
                            "sentiment": "Neutral",
                            "begin_offset": 87,
                            "end_offset": 100
                          },
                          {
                            "type": "LOCATION",
                            "text": "United States",
                            "sentiment": "Neutral",
                            "begin_offset": 208,
                            "end_offset": 221
                          },
                          {
                            "type": "LOCATION",
                            "text": "U.S.",
                            "sentiment": "Neutral",
                            "begin_offset": 249,
                            "end_offset": 253
                          },
                          {
                            "type": "PERSON",
                            "text": "president",
                            "sentiment": "Neutral",
                            "begin_offset": 70,
                            "end_offset": 79
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/generation": {
      "post": {
        "operationId": "text_text_generation_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**cohere**|**command**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**cohere**|**command-light**|`2022-12-06`|0.6 (per 1000000 token)|1 token\n|**cohere**|**command-light-nightly**|`2022-12-06`|0.6 (per 1000000 token)|1 token\n|**cohere**|**command-nightly**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**cohere**|-|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**openai**|-|`v1`|20.0 (per 1000000 token)|1 token\n|**openai**|**gpt-3.5-turbo-instruct**|`v1`|2.0 (per 1000000 token)|1 token\n|**openai**|**text-babbage-002**|`v1`|0.4 (per 1000000 token)|1 token\n|**openai**|**text-davinci-002**|`v1`|2.0 (per 1000000 token)|1 token\n|**google**|-|`v1`|0.5 (per 1000000 char)|1000 char\n|**google**|**gemini-pro**|`v1`|0.375 (per 1000000 char)|1000 char\n|**google**|**text-bison**|`v1`|0.5 (per 1000000 char)|1000 char\n|**ai21labs**|**j2-mid**|`v1`|0.0125 (per 1000 token)|1 token\n|**ai21labs**|**j2-ultra**|`v1`|0.0188 (per 1000 token)|1 token\n|**anthropic**|**claude-instant-v1**|`v1`|2.4 (per 1000000 token)|1 token\n|**anthropic**|**claude-v1**|`v1`|24.0 (per 1000000 token)|1 token\n|**anthropic**|**claude-v2**|`v1`|24.0 (per 1000000 token)|1 token\n|**anthropic**|-|`v1`|24.0 (per 1000000 token)|1 token\n|**mistral**|**mistral-medium**|`v0.0.1`|7.5 (per 1000000 token)|1 token\n|**mistral**|**mistral-small**|`v0.0.1`|1.8 (per 1000000 token)|1 token\n|**mistral**|**mistral-tiny**|`v0.0.1`|0.42 (per 1000000 token)|1 token\n|**amazon**|-|`v1`|1.6 (per 1000000 token)|1 token\n|**amazon**|**titan-text-express-v1**|`v1`|1.6 (per 1000000 token)|1 token\n|**amazon**|**titan-text-lite-v1**|`v1`|0.4 (per 1000000 token)|1 token\n|**amazon**|**titan-tg1-large**|`v1`|1.6 (per 1000000 token)|1 token\n|**meta**|**llama2-13b-chat-v1**|`v1`|1.0 (per 1000000 token)|1 token\n|**meta**|**llama2-70b-chat-v1**|`v1`|2.56 (per 1000000 token)|1 token\n|**meta**|-|`v1`|2.56 (per 1000000 token)|1 token\n\n\n</details>\n\n<details><summary>Supported Models</summary><details><summary>cohere</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**cohere**|`command`|\n||`command-light`|\n||`command-light-nightly`|\n||`command-nightly`|\n\n</details><details><summary>openai</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**openai**|`babbage-002`|\n||`davinci-002`|\n||`gpt-3.5-turbo-instruct`|\n\n</details><details><summary>google</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**google**|`gemini-pro`|\n||`text-bison`|\n\n</details><details><summary>ai21labs</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**ai21labs**|`j2-grande-instruct`|\n||`j2-jumbo-instruct`|\n||`j2-mid`|\n||`j2-ultra`|\n\n</details><details><summary>anthropic</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**anthropic**|`claude-instant-v1`|\n||`claude-v1`|\n||`claude-v2`|\n\n</details><details><summary>mistral</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**mistral**|`large-latest`|\n||`medium`|\n||`small`|\n||`tiny`|\n\n</details><details><summary>amazon</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**amazon**|`titan-text-express-v1`|\n||`titan-text-lite-v1`|\n||`titan-tg1-large`|\n\n</details><details><summary>meta</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**meta**|`llama2-13b-chat-v1`|\n||`llama2-70b-chat-v1`|\n\n</details>\n\n</details>",
        "summary": "Generation",
        "tags": [
          "Generation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textgenerationGenerationRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "amazon,mistral,cohere,anthropic,meta,openai,ai21labs,google",
                    "text": "The following is a conversation with an AI assistant. The assistant is helpful, creative, clever, and very friendly.\n\nHuman: Hello, who are you?",
                    "max_tokens": 10,
                    "temperature": 0
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textgenerationResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "amazon": {
                        "generated_text": "Sorry - this model is unable to respond to this request."
                      },
                      "mistral": {
                        "generated_text": "AI Assistant: Hello! I'm an AI assistant, a helpful, creative, clever, and very friendly entity designed to"
                      },
                      "cohere": {
                        "generated_text": "\n\nAssistant: I'm a trained AI"
                      },
                      "anthropic": {
                        "generated_text": " I'm Claude, an AI assistant created by Anthropic."
                      },
                      "meta": {
                        "generated_text": "hola!"
                      },
                      "openai": {
                        "generated_text": "\n\nAI Assistant: Hello! I am your AI assistant. I am here to help you with anything you need. What can"
                      },
                      "ai21labs": {
                        "generated_text": "\nI am an AI assistant. I am here to help with a variety of tasks, such as answering questions, playing music, and providing general information."
                      },
                      "google": {
                        "generated_text": "Assistant: Greetings! I am your AI assistant, designed to be helpful, creative"
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/keyword_extraction": {
      "post": {
        "operationId": "text_text_keyword_extraction_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**microsoft**|`v3.1`|1.0 (per 1000000 char)|1000 char\n|**emvista**|`v1.0`|1.0 (per 1000000 char)|1000 char\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.0.0`|0.7 (per 1000000 char)|1000 char\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n|**corticalio**|`v1.3.0`|0.97 (per 1000 request)|1 request\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Achinese**|`ace`|\n|**Afrikaans**|`af`|\n|**Akan**|`ak`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Asturian**|`ast`|\n|**Awadhi**|`awa`|\n|**Ayacucho Quechua**|`quy`|\n|**Balinese**|`ban`|\n|**Bambara**|`bm`|\n|**Banjar**|`bjn`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Belarusian**|`be`|\n|**Bemba (Zambia)**|`bem`|\n|**Bengali**|`bn`|\n|**Bhojpuri**|`bho`|\n|**Bosnian**|`bs`|\n|**Buginese**|`bug`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Central Atlas Tamazight**|`tzm`|\n|**Central Aymara**|`ayr`|\n|**Central Kanuri**|`knc`|\n|**Central Khmer**|`km`|\n|**Central Kurdish**|`ckb`|\n|**Chhattisgarhi**|`hne`|\n|**Chinese**|`zh`|\n|**Chokwe**|`cjk`|\n|**Crimean Tatar**|`crh`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**Dyula**|`dyu`|\n|**Dzongkha**|`dz`|\n|**Eastern Yiddish**|`ydd`|\n|**Egyptian Arabic**|`arz`|\n|**English**|`en`|\n|**Esperanto**|`eo`|\n|**Estonian**|`et`|\n|**Ewe**|`ee`|\n|**Faroese**|`fo`|\n|**Fijian**|`fj`|\n|**Finnish**|`fi`|\n|**Fon**|`fon`|\n|**French**|`fr`|\n|**Friulian**|`fur`|\n|**Galician**|`gl`|\n|**Ganda**|`lg`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Guarani**|`gn`|\n|**Gujarati**|`gu`|\n|**Haitian**|`ht`|\n|**Halh Mongolian**|`khk`|\n|**Hausa**|`ha`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Igbo**|`ig`|\n|**Iloko**|`ilo`|\n|**Indonesian**|`id`|\n|**Irish**|`ga`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kabiy\u00e8**|`kbp`|\n|**Kabuverdianu**|`kea`|\n|**Kabyle**|`kab`|\n|**Kachin**|`kac`|\n|**Kamba (Kenya)**|`kam`|\n|**Kannada**|`kn`|\n|**Kashmiri**|`ks`|\n|**Kazakh**|`kk`|\n|**Kikuyu**|`ki`|\n|**Kimbundu**|`kmb`|\n|**Kinyarwanda**|`rw`|\n|**Kirghiz**|`ky`|\n|**Kongo**|`kg`|\n|**Korean**|`ko`|\n|**Lao**|`lo`|\n|**Latgalian**|`ltg`|\n|**Latvian**|`lv`|\n|**Ligurian**|`lij`|\n|**Limburgan**|`li`|\n|**Lingala**|`ln`|\n|**Lithuanian**|`lt`|\n|**Lombard**|`lmo`|\n|**Luba-Katanga**|`lu`|\n|**Luo (Kenya and Tanzania)**|`luo`|\n|**Lushai**|`lus`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Magahi**|`mag`|\n|**Maithili**|`mai`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Manipuri**|`mni`|\n|**Maori**|`mi`|\n|**Marathi**|`mr`|\n|**Mesopotamian Arabic**|`acm`|\n|**Minangkabau**|`min`|\n|**Modern Greek (1453-)**|`el`|\n|**Moroccan Arabic**|`ary`|\n|**Mossi**|`mos`|\n|**Najdi Arabic**|`ars`|\n|**Nepali (macrolanguage)**|`ne`|\n|**Nigerian Fulfulde**|`fuv`|\n|**North Azerbaijani**|`azj`|\n|**North Levantine Arabic**|`apc`|\n|**Northern Kurdish**|`kmr`|\n|**Northern Uzbek**|`uzn`|\n|**Norwegian**|`no`|\n|**Norwegian Bokm\u00e5l**|`nb`|\n|**Norwegian Nynorsk**|`nn`|\n|**Nuer**|`nus`|\n|**Nyanja**|`ny`|\n|**Occitan (post 1500)**|`oc`|\n|**Oriya (macrolanguage)**|`or`|\n|**Pangasinan**|`pag`|\n|**Panjabi**|`pa`|\n|**Papiamento**|`pap`|\n|**Pedi**|`nso`|\n|**Persian**|`fa`|\n|**Plateau Malagasy**|`plt`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Romanian**|`ro`|\n|**Rundi**|`rn`|\n|**Russian**|`ru`|\n|**Samoan**|`sm`|\n|**Sango**|`sg`|\n|**Sanskrit**|`sa`|\n|**Santali**|`sat`|\n|**Sardinian**|`sc`|\n|**Scottish Gaelic**|`gd`|\n|**Serbian**|`sr`|\n|**Shan**|`shn`|\n|**Shona**|`sn`|\n|**Sicilian**|`scn`|\n|**Silesian**|`szl`|\n|**Sindhi**|`sd`|\n|**Sinhala**|`si`|\n|**Slovak**|`sk`|\n|**Slovenian**|`sl`|\n|**Somali**|`so`|\n|**South Azerbaijani**|`azb`|\n|**South Levantine Arabic**|`ajp`|\n|**Southern Pashto**|`pbt`|\n|**Southern Sotho**|`st`|\n|**Southwestern Dinka**|`dik`|\n|**Spanish**|`es`|\n|**Standard Latvian**|`lvs`|\n|**Standard Malay**|`zsm`|\n|**Sundanese**|`su`|\n|**Swahili (macrolanguage)**|`sw`|\n|**Swati**|`ss`|\n|**Swedish**|`sv`|\n|**Ta'izzi-Adeni Arabic**|`acq`|\n|**Tagalog**|`tl`|\n|**Tajik**|`tg`|\n|**Tamashek**|`tmh`|\n|**Tamil**|`ta`|\n|**Tatar**|`tt`|\n|**Telugu**|`te`|\n|**Thai**|`th`|\n|**Tibetan**|`bo`|\n|**Tigrinya**|`ti`|\n|**Tok Pisin**|`tpi`|\n|**Tosk Albanian**|`als`|\n|**Tsonga**|`ts`|\n|**Tswana**|`tn`|\n|**Tumbuka**|`tum`|\n|**Tunisian Arabic**|`aeb`|\n|**Turkish**|`tr`|\n|**Turkmen**|`tk`|\n|**Twi**|`tw`|\n|**Uighur**|`ug`|\n|**Ukrainian**|`uk`|\n|**Umbundu**|`umb`|\n|**Urdu**|`ur`|\n|**Venetian**|`vec`|\n|**Vietnamese**|`vi`|\n|**Waray (Philippines)**|`war`|\n|**Welsh**|`cy`|\n|**West Central Oromo**|`gaz`|\n|**Wolof**|`wo`|\n|**Xhosa**|`xh`|\n|**Yoruba**|`yo`|\n|**Yue Chinese**|`yue`|\n|**Zulu**|`zu`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Arabic (world)**|`ar-001`|\n|**Chinese (Simplified)**|`zh-Hans`|\n|**Chinese (Taiwan)**|`zh-TW`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**Persian (Afghanistan)**|`fa-AF`|\n|**Portuguese (Brazil)**|`pt-BR`|\n|**Portuguese (Portugal)**|`pt-PT`|\n\n</details>",
        "summary": "Keyword Extraction",
        "tags": [
          "Keyword Extraction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "amazon,ibm,corticalio,emvista,openai,microsoft,nlpcloud,tenstorrent",
                    "language": "en",
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textkeyword_extractionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "amazon": {
                        "items": [
                          {
                            "keyword": "Barack Hussein Obama",
                            "importance": 1.0
                          },
                          {
                            "keyword": "an American politician",
                            "importance": 1.0
                          },
                          {
                            "keyword": "the 44th president",
                            "importance": 1.0
                          },
                          {
                            "keyword": "the United States",
                            "importance": 1.0
                          },
                          {
                            "keyword": "2009 to 2017",
                            "importance": 1.0
                          },
                          {
                            "keyword": "A member",
                            "importance": 1.0
                          },
                          {
                            "keyword": "the Democratic Party",
                            "importance": 1.0
                          },
                          {
                            "keyword": "Obama",
                            "importance": 0.97
                          },
                          {
                            "keyword": "the first African-American president",
                            "importance": 1.0
                          },
                          {
                            "keyword": "the United States",
                            "importance": 1.0
                          }
                        ]
                      },
                      "ibm": {
                        "items": [
                          {
                            "keyword": "member of the Democratic Party",
                            "importance": 0.94
                          },
                          {
                            "keyword": "Barack Hussein Obama",
                            "importance": 0.94
                          },
                          {
                            "keyword": "American politician",
                            "importance": 0.91
                          },
                          {
                            "keyword": "Illinois",
                            "importance": 0.57
                          },
                          {
                            "keyword": "Obama",
                            "importance": 0.56
                          },
                          {
                            "keyword": "U.S. senator",
                            "importance": 0.47
                          },
                          {
                            "keyword": "44th president of the United States",
                            "importance": 0.4
                          },
                          {
                            "keyword": "Illinois state senator",
                            "importance": 0.34
                          },
                          {
                            "keyword": "first African-American president of the United States",
                            "importance": 0.18
                          }
                        ]
                      },
                      "corticalio": {
                        "items": [
                          {
                            "keyword": "president of the united states",
                            "importance": 1
                          },
                          {
                            "keyword": "obama",
                            "importance": 0.86
                          },
                          {
                            "keyword": "american politician who served",
                            "importance": 0.7
                          },
                          {
                            "keyword": "member of the democratic party",
                            "importance": 0.63
                          },
                          {
                            "keyword": "illinois state",
                            "importance": 0.6
                          },
                          {
                            "keyword": "hussein",
                            "importance": 0.51
                          },
                          {
                            "keyword": "barack",
                            "importance": 0.47
                          }
                        ]
                      },
                      "emvista": {
                        "items": [
                          {
                            "keyword": "Barack",
                            "importance": 0.25
                          },
                          {
                            "keyword": "Hussein",
                            "importance": 0.25
                          },
                          {
                            "keyword": "Obama",
                            "importance": 0.5
                          },
                          {
                            "keyword": "be",
                            "importance": 0.5
                          },
                          {
                            "keyword": "a",
                            "importance": 1.0
                          },
                          {
                            "keyword": "american",
                            "importance": 0.5
                          },
                          {
                            "keyword": "politician",
                            "importance": 0.25
                          },
                          {
                            "keyword": "serve",
                            "importance": 0.5
                          },
                          {
                            "keyword": "as",
                            "importance": 0.75
                          },
                          {
                            "keyword": "44th",
                            "importance": 0.25
                          }
                        ]
                      },
                      "openai": {
                        "items": [
                          {
                            "keyword": "Barack Hussein Obama",
                            "importance": 0.9
                          },
                          {
                            "keyword": "American politician",
                            "importance": 0.8
                          },
                          {
                            "keyword": "44th president",
                            "importance": 0.7
                          },
                          {
                            "keyword": "United States",
                            "importance": 0.8
                          },
                          {
                            "keyword": "Democratic Party",
                            "importance": 0.6
                          },
                          {
                            "keyword": "African-American president",
                            "importance": 0.9
                          },
                          {
                            "keyword": "U.S. senator",
                            "importance": 0.7
                          },
                          {
                            "keyword": "Illinois state senator",
                            "importance": 0.6
                          }
                        ]
                      },
                      "microsoft": {
                        "items": [
                          {
                            "keyword": "U.S. senator",
                            "importance": null
                          },
                          {
                            "keyword": "first African-American president",
                            "importance": null
                          },
                          {
                            "keyword": "Barack Hussein Obama",
                            "importance": null
                          },
                          {
                            "keyword": "Illinois state senator",
                            "importance": null
                          },
                          {
                            "keyword": "44th president",
                            "importance": null
                          },
                          {
                            "keyword": "American politician",
                            "importance": null
                          },
                          {
                            "keyword": "United States",
                            "importance": null
                          },
                          {
                            "keyword": "Democratic Party",
                            "importance": null
                          },
                          {
                            "keyword": "member",
                            "importance": null
                          }
                        ]
                      },
                      "nlpcloud": {
                        "items": [
                          {
                            "keyword": "Barack Obama",
                            "importance": null
                          },
                          {
                            "keyword": "44th president",
                            "importance": null
                          },
                          {
                            "keyword": "United States",
                            "importance": null
                          },
                          {
                            "keyword": "Democratic Party",
                            "importance": null
                          },
                          {
                            "keyword": "African-American",
                            "importance": null
                          },
                          {
                            "keyword": "U.S. senator",
                            "importance": null
                          },
                          {
                            "keyword": "Illinois",
                            "importance": null
                          },
                          {
                            "keyword": "2005-2008",
                            "importance": null
                          },
                          {
                            "keyword": "Illinois state senator",
                            "importance": null
                          },
                          {
                            "keyword": "1997-2004.",
                            "importance": null
                          }
                        ]
                      },
                      "tenstorrent": {
                        "items": [
                          {
                            "keyword": "barack hussein obama",
                            "importance": 1.0
                          },
                          {
                            "keyword": "democratic party",
                            "importance": 0.98
                          },
                          {
                            "keyword": "u. s. senator",
                            "importance": 0.98
                          },
                          {
                            "keyword": "illinois state",
                            "importance": 0.96
                          },
                          {
                            "keyword": "president of the united states",
                            "importance": 0.91
                          },
                          {
                            "keyword": "african - american president",
                            "importance": 0.86
                          }
                        ]
                      },
                      "eden-ai": {
                        "status": "success",
                        "items": [
                          {
                            "keyword": "the first African-American president",
                            "importance": 1.0
                          },
                          {
                            "keyword": "member of the Democratic Party",
                            "importance": 0.94
                          },
                          {
                            "keyword": "president of the united states",
                            "importance": 1
                          },
                          {
                            "keyword": "american politician who served",
                            "importance": 0.7
                          },
                          {
                            "keyword": "an American politician",
                            "importance": 1.0
                          },
                          {
                            "keyword": "barack hussein obama",
                            "importance": 1.0
                          },
                          {
                            "keyword": "the 44th president",
                            "importance": 1.0
                          },
                          {
                            "keyword": "illinois state",
                            "importance": 0.96
                          },
                          {
                            "keyword": "u. s. senator",
                            "importance": 0.98
                          },
                          {
                            "keyword": "2009 to 2017",
                            "importance": 1.0
                          },
                          {
                            "keyword": "U.S. senator",
                            "importance": 0.7
                          },
                          {
                            "keyword": "A member",
                            "importance": 1.0
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/moderation": {
      "post": {
        "operationId": "text_text_moderation_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**microsoft**|`v1.0`|1.0 (per 1000 request)|1 request\n|**openai**|`v3.0.0`|free|-\n|**clarifai**|`8.0.0`|1.2 (per 1000 request)|1 request\n|**google**|`v1`|5.0 (per 1000000 char)|100 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Afrikaans**|`af`|\n|**Albanian**|`sq`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Aragonese**|`an`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Asturian**|`ast`|\n|**Azerbaijani**|`az`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Bavarian**|`bar`|\n|**Belarusian**|`be`|\n|**Bengali**|`bn`|\n|**Bishnupriya**|`bpy`|\n|**Bosnian**|`bs`|\n|**Breton**|`br`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Central Khmer**|`km`|\n|**Central Kurdish**|`ckb`|\n|**Chechen**|`ce`|\n|**Cherokee**|`chr`|\n|**Chinese**|`zh`|\n|**Chuvash**|`cv`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**Estonian**|`et`|\n|**Filipino**|`fil`|\n|**Finnish**|`fi`|\n|**French**|`fr`|\n|**Fulah**|`ff`|\n|**Galician**|`gl`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Gujarati**|`gu`|\n|**Haitian**|`ht`|\n|**Hausa**|`ha`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Ido**|`io`|\n|**Igbo**|`ig`|\n|**Indonesian**|`id`|\n|**Inuktitut**|`iu`|\n|**Irish**|`ga`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kannada**|`kn`|\n|**Kazakh**|`kk`|\n|**Kinyarwanda**|`rw`|\n|**Kirghiz**|`ky`|\n|**Konkani (macrolanguage)**|`kok`|\n|**Korean**|`ko`|\n|**Lahnda**|`lah`|\n|**Lao**|`lo`|\n|**Latin**|`la`|\n|**Latvian**|`lv`|\n|**Lithuanian**|`lt`|\n|**Lombard**|`lmo`|\n|**Low German**|`nds`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Malagasy**|`mg`|\n|**Malay (macrolanguage)**|`ms`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Maori**|`mi`|\n|**Marathi**|`mr`|\n|**Minangkabau**|`min`|\n|**Modern Greek (1453-)**|`el`|\n|**Mongolian**|`mn`|\n|**Nepali (macrolanguage)**|`ne`|\n|**Norwegian**|`no`|\n|**Norwegian Bokm\u00e5l**|`nb`|\n|**Norwegian Nynorsk**|`nn`|\n|**Occitan (post 1500)**|`oc`|\n|**Oriya (macrolanguage)**|`or`|\n|**Panjabi**|`pa`|\n|**Pedi**|`nso`|\n|**Persian**|`fa`|\n|**Piemontese**|`pms`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Pushto**|`ps`|\n|**Quechua**|`qu`|\n|**Romanian**|`ro`|\n|**Russian**|`ru`|\n|**Scots**|`sco`|\n|**Scottish Gaelic**|`gd`|\n|**Serbian**|`sr`|\n|**Serbo-Croatian**|`sh`|\n|**Sicilian**|`scn`|\n|**Sindhi**|`sd`|\n|**Sinhala**|`si`|\n|**Slovak**|`sk`|\n|**Slovenian**|`sl`|\n|**South Azerbaijani**|`azb`|\n|**Southern Sotho**|`st`|\n|**Spanish**|`es`|\n|**Sundanese**|`su`|\n|**Swahili (macrolanguage)**|`sw`|\n|**Swedish**|`sv`|\n|**Tagalog**|`tl`|\n|**Tajik**|`tg`|\n|**Tamil**|`ta`|\n|**Tatar**|`tt`|\n|**Telugu**|`te`|\n|**Thai**|`th`|\n|**Tigrinya**|`ti`|\n|**Tswana**|`tn`|\n|**Turkish**|`tr`|\n|**Turkmen**|`tk`|\n|**Uighur**|`ug`|\n|**Ukrainian**|`uk`|\n|**Urdu**|`ur`|\n|**Uzbek**|`uz`|\n|**Vietnamese**|`vi`|\n|**Volap\u00fck**|`vo`|\n|**Waray (Philippines)**|`war`|\n|**Welsh**|`cy`|\n|**Western Frisian**|`fy`|\n|**Wolof**|`wo`|\n|**Xhosa**|`xh`|\n|**Yoruba**|`yo`|\n|**Zulu**|`zu`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**Low German (Netherlands)**|`nds-NL`|\n\n</details>",
        "summary": "Moderation",
        "tags": [
          "Moderation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "google,openai,clarifai,microsoft",
                    "language": "en",
                    "text": "Is this a crap email abcdef@abcd.com, phone: 0617730730, IP: 255.255.255.255, 1 Microsoft Way, Redmond, WA 98052"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textmoderationResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "google": {
                        "nsfw_likelihood": 2,
                        "items": [
                          {
                            "label": "Toxic",
                            "likelihood": 2,
                            "category": "Toxic",
                            "subcategory": "Toxic",
                            "likelihood_score": 0.2391817
                          },
                          {
                            "label": "Insult",
                            "likelihood": 1,
                            "category": "Toxic",
                            "subcategory": "Insult",
                            "likelihood_score": 0.052930057
                          },
                          {
                            "label": "Profanity",
                            "likelihood": 2,
                            "category": "Toxic",
                            "subcategory": "Profanity",
                            "likelihood_score": 0.28705063
                          },
                          {
                            "label": "Derogatory",
                            "likelihood": 1,
                            "category": "Toxic",
                            "subcategory": "Derogatory",
                            "likelihood_score": 0.0047925273
                          },
                          {
                            "label": "Sexual",
                            "likelihood": 1,
                            "category": "Sexual",
                            "subcategory": "Sexual",
                            "likelihood_score": 0.0024352302
                          },
                          {
                            "label": "Death, Harm & Tragedy",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "GraphicViolenceOrGore",
                            "likelihood_score": 0.0005420054
                          },
                          {
                            "label": "Violent",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "Violence",
                            "likelihood_score": 0.0025138261
                          },
                          {
                            "label": "Firearms & Weapons",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "WeaponViolence",
                            "likelihood_score": 0.0
                          },
                          {
                            "label": "Public Safety",
                            "likelihood": 1,
                            "category": "Content",
                            "subcategory": "PublicSafety",
                            "likelihood_score": 0.010695187
                          },
                          {
                            "label": "Health",
                            "likelihood": 1,
                            "category": "Content",
                            "subcategory": "Health",
                            "likelihood_score": 0.004199916
                          }
                        ],
                        "nsfw_likelihood_score": 0.28705063
                      },
                      "openai": {
                        "nsfw_likelihood": 1,
                        "items": [
                          {
                            "label": "sexual",
                            "likelihood": 1,
                            "category": "Sexual",
                            "subcategory": "Sexual",
                            "likelihood_score": 8.123514999169856e-05
                          },
                          {
                            "label": "hate",
                            "likelihood": 1,
                            "category": "HateAndExtremism",
                            "subcategory": "Hate",
                            "likelihood_score": 0.001375643303617835
                          },
                          {
                            "label": "harassment",
                            "likelihood": 1,
                            "category": "HateAndExtremism",
                            "subcategory": "Harassment",
                            "likelihood_score": 0.01840096339583397
                          },
                          {
                            "label": "self-harm",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "PhysicalViolence",
                            "likelihood_score": 0.001366300624795258
                          },
                          {
                            "label": "sexual/minors",
                            "likelihood": 1,
                            "category": "Other",
                            "subcategory": "Other",
                            "likelihood_score": 0.00031155155738815665
                          },
                          {
                            "label": "hate/threatening",
                            "likelihood": 1,
                            "category": "HateAndExtremism",
                            "subcategory": "Threatening",
                            "likelihood_score": 7.793232362018898e-05
                          },
                          {
                            "label": "violence/graphic",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "GraphicViolenceOrGore",
                            "likelihood_score": 0.0005688181845471263
                          },
                          {
                            "label": "self-harm/intent",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "PhysicalViolence",
                            "likelihood_score": 0.00025184746482409537
                          },
                          {
                            "label": "self-harm/instructions",
                            "likelihood": 1,
                            "category": "Violence",
                            "subcategory": "PhysicalViolence",
                            "likelihood_score": 0.0005795329925604165
                          },
                          {
                            "label": "harassment/threatening",
                            "likelihood": 1,
                            "category": "HateAndExtremism",
                            "subcategory": "Threatening",
                            "likelihood_score": 9.946248610503972e-05
                          }
                        ],
                        "nsfw_likelihood_score": 0.01840096339583397
                      },
                      "clarifai": {
                        "nsfw_likelihood": 4,
                        "items": [
                          {
                            "label": "toxic",
                            "likelihood": 4,
                            "category": "Toxic",
                            "subcategory": "Toxic",
                            "likelihood_score": 0.79653984
                          },
                          {
                            "label": "obscene",
                            "likelihood": 1,
                            "category": "Toxic",
                            "subcategory": "Obscene",
                            "likelihood_score": 0.18101883
                          },
                          {
                            "label": "insult",
                            "likelihood": 1,
                            "category": "Toxic",
                            "subcategory": "Insult",
                            "likelihood_score": 0.009806201
                          },
                          {
                            "label": "severe_toxic",
                            "likelihood": 1,
                            "category": "Toxic",
                            "subcategory": "Toxic",
                            "likelihood_score": 0.00045600787
                          },
                          {
                            "label": "threat",
                            "likelihood": 1,
                            "category": "Toxic",
                            "subcategory": "Threat",
                            "likelihood_score": 7.207947e-05
                          },
                          {
                            "label": "identity_hate",
                            "likelihood": 1,
                            "category": "HateAndExtremism",
                            "subcategory": "Hate",
                            "likelihood_score": 6.1927596e-05
                          }
                        ],
                        "nsfw_likelihood_score": 0.79653984
                      },
                      "microsoft": {
                        "nsfw_likelihood": 5,
                        "items": [
                          {
                            "label": "sexually explicit",
                            "likelihood": 1,
                            "category": "Sexual",
                            "subcategory": "Sexual",
                            "likelihood_score": 0.00020882912212982774
                          },
                          {
                            "label": "sexually suggestive",
                            "likelihood": 2,
                            "category": "Sexual",
                            "subcategory": "Suggestive",
                            "likelihood_score": 0.2234508991241455
                          },
                          {
                            "label": "offensive",
                            "likelihood": 5,
                            "category": "Other",
                            "subcategory": "Offensive",
                            "likelihood_score": 0.9879999756813049
                          }
                        ],
                        "nsfw_likelihood_score": 0.9879999756813049
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/named_entity_recognition": {
      "post": {
        "operationId": "text_text_named_entity_recognition_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**google**|`v1`|1.0 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**lettria**|`v5.5.2`|2.0 (per 1000000 char)|1000 char\n|**microsoft**|`v3.1`|1.0 (per 1000000 char)|1000 char\n|**neuralspace**|`v1`|0.007 (per 1 request)|1 request\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.0.0`|1.0 (per 1000000 char)|1000 char\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Afrikaans**|`af`|\n|**Albanian**|`sq`|\n|**Arabic**|`ar`|\n|**Aragonese**|`an`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Azerbaijani**|`az`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Belarusian**|`be`|\n|**Bengali**|`bn`|\n|**Bosnian**|`bs`|\n|**Breton**|`br`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Chechen**|`ce`|\n|**Chinese**|`zh`|\n|**Chuvash**|`cv`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**Estonian**|`et`|\n|**Finnish**|`fi`|\n|**French**|`fr`|\n|**Galician**|`gl`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Gujarati**|`gu`|\n|**Haitian**|`ht`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Indonesian**|`id`|\n|**Irish**|`ga`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kannada**|`kn`|\n|**Kazakh**|`kk`|\n|**Kirghiz**|`ky`|\n|**Korean**|`ko`|\n|**Latin**|`la`|\n|**Latvian**|`lv`|\n|**Lithuanian**|`lt`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Malagasy**|`mg`|\n|**Malay (macrolanguage)**|`ms`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Marathi**|`mr`|\n|**Modern Greek (1453-)**|`el`|\n|**Nepali (macrolanguage)**|`ne`|\n|**Norwegian**|`no`|\n|**Norwegian Bokm\u00e5l**|`nb`|\n|**Occitan (post 1500)**|`oc`|\n|**Panjabi**|`pa`|\n|**Persian**|`fa`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Romanian**|`ro`|\n|**Russian**|`ru`|\n|**Serbian**|`sr`|\n|**Slovak**|`sk`|\n|**Slovenian**|`sl`|\n|**Spanish**|`es`|\n|**Sundanese**|`su`|\n|**Swahili (macrolanguage)**|`sw`|\n|**Swedish**|`sv`|\n|**Tagalog**|`tl`|\n|**Tajik**|`tg`|\n|**Tamil**|`ta`|\n|**Tatar**|`tt`|\n|**Telugu**|`te`|\n|**Turkish**|`tr`|\n|**Uighur**|`ug`|\n|**Ukrainian**|`uk`|\n|**Urdu**|`ur`|\n|**Uzbek**|`uz`|\n|**Vietnamese**|`vi`|\n|**Welsh**|`cy`|\n|**Yoruba**|`yo`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Chinese (Simplified)**|`zh-Hans`|\n|**Chinese (Taiwan)**|`zh-TW`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**English (United States)**|`en-US`|\n|**French (France)**|`fr-FR`|\n|**Portuguese (Brazil)**|`pt-BR`|\n|**Portuguese (Portugal)**|`pt-PT`|\n\n</details>",
        "summary": "Named Entity Recognition",
        "tags": [
          "Named Entity Recognition"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "microsoft,amazon,google,neuralspace,lettria,tenstorrent,ibm,openai,nlpcloud",
                    "language": "en",
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textnamed_entity_recognitionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "microsoft": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": 1.0
                          },
                          {
                            "entity": "American",
                            "category": "PERSONTYPE",
                            "importance": 0.87
                          },
                          {
                            "entity": "politician",
                            "category": "PERSONTYPE",
                            "importance": 0.57
                          },
                          {
                            "entity": "44th",
                            "category": "QUANTITY",
                            "importance": 0.8
                          },
                          {
                            "entity": "president",
                            "category": "PERSONTYPE",
                            "importance": 0.94
                          },
                          {
                            "entity": "United States",
                            "category": "LOCATION",
                            "importance": 0.97
                          },
                          {
                            "entity": "from 2009 to 2017",
                            "category": "DATE",
                            "importance": 0.8
                          },
                          {
                            "entity": "member",
                            "category": "PERSONTYPE",
                            "importance": 0.74
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "ORGANIZATION",
                            "importance": 0.98
                          },
                          {
                            "entity": "Obama",
                            "category": "PERSON",
                            "importance": 1.0
                          }
                        ]
                      },
                      "amazon": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": 0.9960151314735413
                          },
                          {
                            "entity": "American",
                            "category": "OTHER",
                            "importance": 0.9943374991416931
                          },
                          {
                            "entity": "44th president",
                            "category": "QUANTITY",
                            "importance": 0.8183709383010864
                          },
                          {
                            "entity": "United States",
                            "category": "LOCATION",
                            "importance": 0.8509750366210938
                          },
                          {
                            "entity": "2009",
                            "category": "DATE",
                            "importance": 0.9990425705909729
                          },
                          {
                            "entity": "2017",
                            "category": "DATE",
                            "importance": 0.994526207447052
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "ORGANIZATION",
                            "importance": 0.9991411566734314
                          },
                          {
                            "entity": "Obama",
                            "category": "PERSON",
                            "importance": 0.99968421459198
                          },
                          {
                            "entity": "first",
                            "category": "QUANTITY",
                            "importance": 0.9900199174880981
                          },
                          {
                            "entity": "African-American",
                            "category": "OTHER",
                            "importance": 0.9452006220817566
                          }
                        ]
                      },
                      "google": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": 0.74435586
                          },
                          {
                            "entity": "president",
                            "category": "PERSON",
                            "importance": 0.07021436
                          },
                          {
                            "entity": "American",
                            "category": "LOCATION",
                            "importance": 0.066377416
                          },
                          {
                            "entity": "president",
                            "category": "PERSON",
                            "importance": 0.04346809
                          },
                          {
                            "entity": "African-American",
                            "category": "PERSON",
                            "importance": 0.007983226
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "ORGANIZATION",
                            "importance": 0.00764491
                          },
                          {
                            "entity": "state senator",
                            "category": "PERSON",
                            "importance": 0.0070930053
                          },
                          {
                            "entity": "Illinois",
                            "category": "LOCATION",
                            "importance": 0.005297011
                          },
                          {
                            "entity": "senator",
                            "category": "PERSON",
                            "importance": 0.004453033
                          }
                        ]
                      },
                      "neuralspace": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": null
                          },
                          {
                            "entity": "American",
                            "category": "NORP",
                            "importance": null
                          },
                          {
                            "entity": "44th",
                            "category": "ORDINAL",
                            "importance": null
                          },
                          {
                            "entity": "the United States",
                            "category": "GEOPOLITICALENTITIES",
                            "importance": null
                          },
                          {
                            "entity": "2009",
                            "category": "DATE",
                            "importance": null
                          },
                          {
                            "entity": "44th",
                            "category": "ORDINAL",
                            "importance": null
                          },
                          {
                            "entity": "from 2009 to 2017",
                            "category": "MONEY",
                            "importance": null
                          },
                          {
                            "entity": "from 2009 to 2017",
                            "category": "DATE",
                            "importance": null
                          },
                          {
                            "entity": "the first",
                            "category": "DATE",
                            "importance": null
                          },
                          {
                            "entity": "from 2005 to 2008",
                            "category": "MONEY",
                            "importance": null
                          }
                        ]
                      },
                      "lettria": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "United States",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "Democratic Party",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "Obama",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "United States",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "U.S.",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "Illinois",
                            "category": null,
                            "importance": null
                          },
                          {
                            "entity": "Illinois state",
                            "category": null,
                            "importance": null
                          }
                        ]
                      },
                      "tenstorrent": {
                        "items": [
                          {
                            "entity": "American",
                            "category": "OTHER",
                            "importance": 0.53
                          },
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": 0.51
                          },
                          {
                            "entity": "African American",
                            "category": "OTHER",
                            "importance": 0.48
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "ORGANIZATION",
                            "importance": 0.32
                          },
                          {
                            "entity": "United States",
                            "category": "LOCATION",
                            "importance": 0.16
                          },
                          {
                            "entity": "Illinois",
                            "category": "LOCATION",
                            "importance": 0.15
                          },
                          {
                            "entity": "United States",
                            "category": "LOCATION",
                            "importance": 0.16
                          },
                          {
                            "entity": "U. S.",
                            "category": "LOCATION",
                            "importance": 0.08
                          },
                          {
                            "entity": "Obama",
                            "category": "PERSON",
                            "importance": 0.04
                          }
                        ]
                      },
                      "ibm": {
                        "items": [
                          {
                            "entity": "American politician",
                            "category": "PERSONTYPE",
                            "importance": 0.950395
                          },
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": 0.617417
                          },
                          {
                            "entity": "president",
                            "category": "PERSONTYPE",
                            "importance": 0.426224
                          },
                          {
                            "entity": "United States",
                            "category": "LOCATION",
                            "importance": 0.408988
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "ORGANIZATION",
                            "importance": 0.348958
                          },
                          {
                            "entity": "U.S. senator",
                            "category": "PERSONTYPE",
                            "importance": 0.348567
                          },
                          {
                            "entity": "Illinois",
                            "category": "LOCATION",
                            "importance": 0.161957
                          },
                          {
                            "entity": "state senator",
                            "category": "PERSONTYPE",
                            "importance": 0.054396
                          }
                        ]
                      },
                      "openai": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "Person",
                            "importance": 0.98
                          },
                          {
                            "entity": "American",
                            "category": "Nationality",
                            "importance": 0.85
                          },
                          {
                            "entity": "44th president",
                            "category": "Position",
                            "importance": 0.95
                          },
                          {
                            "entity": "United States",
                            "category": "Country",
                            "importance": 0.99
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "Organization",
                            "importance": 0.9
                          },
                          {
                            "entity": "African-American",
                            "category": "Ethnicity",
                            "importance": 0.85
                          },
                          {
                            "entity": "U.S. senator",
                            "category": "Position",
                            "importance": 0.9
                          },
                          {
                            "entity": "Illinois",
                            "category": "State",
                            "importance": 0.93
                          }
                        ]
                      },
                      "nlpcloud": {
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": null
                          },
                          {
                            "entity": "American",
                            "category": "NORP",
                            "importance": null
                          },
                          {
                            "entity": "44th",
                            "category": "ORDINAL",
                            "importance": null
                          },
                          {
                            "entity": "the United States",
                            "category": "GPE",
                            "importance": null
                          },
                          {
                            "entity": "2009 to 2017",
                            "category": "DATE",
                            "importance": null
                          },
                          {
                            "entity": "the Democratic Party",
                            "category": "ORG",
                            "importance": null
                          },
                          {
                            "entity": "first",
                            "category": "ORDINAL",
                            "importance": null
                          },
                          {
                            "entity": "African",
                            "category": "NORP",
                            "importance": null
                          },
                          {
                            "entity": "the United States",
                            "category": "GPE",
                            "importance": null
                          },
                          {
                            "entity": "U.S.",
                            "category": "GPE",
                            "importance": null
                          }
                        ]
                      },
                      "eden-ai": {
                        "status": "success",
                        "items": [
                          {
                            "entity": "Barack Hussein Obama",
                            "category": "PERSON",
                            "importance": 1.0
                          },
                          {
                            "entity": "American politician",
                            "category": "PERSONTYPE",
                            "importance": 0.950395
                          },
                          {
                            "entity": "from 2009 to 2017",
                            "category": "DATE",
                            "importance": 0.8
                          },
                          {
                            "entity": "Democratic Party",
                            "category": "ORGANIZATION",
                            "importance": 0.9991411566734314
                          },
                          {
                            "entity": "African-American",
                            "category": "OTHER",
                            "importance": 0.9452006220817566
                          },
                          {
                            "entity": "44th president",
                            "category": "Position",
                            "importance": 0.95
                          },
                          {
                            "entity": "United States",
                            "category": "Country",
                            "importance": 0.99
                          },
                          {
                            "entity": "U.S. senator",
                            "category": "Position",
                            "importance": 0.9
                          },
                          {
                            "entity": "Illinois",
                            "category": "State",
                            "importance": 0.93
                          },
                          {
                            "entity": "member",
                            "category": "PERSONTYPE",
                            "importance": 0.74
                          },
                          {
                            "entity": "first",
                            "category": "QUANTITY",
                            "importance": 0.9900199174880981
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/plagia_detection": {
      "post": {
        "operationId": "text_text_plagia_detection_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**originalityai**|`v1`|0.01 (per 400 char)|400 char\n|**winstonai**|`v2`|14.0 (per 1000000 char)|1 char\n\n\n</details>\n\n",
        "summary": "Plagia Detection",
        "tags": [
          "Plagia Detection"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textplagia_detectionPlagiaDetectionRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "winstonai,originalityai",
                    "text": "The Galaxy S23 launch may be far behind us, but Samsung likely has plenty more to announce in 2023.             That's if history repeats itself. Should Samsung stick to its annual routine, we can expect to see new             foldable phones and wearable devices in August. The company also previewed new designs for bendable phones and tablets             earlier this year, hinting that the company may be planning to expand beyond the Z Fold and Z Flip in the near future.             Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors,             I'm most interested in where its mobile devices are headed. Samsung is one of the world's largest smartphone manufacturers             by market share, meaning it has more influence than most other tech companies on the devices we carry in our pockets each day.             Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers.             It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices.",
                    "title": "n'importe nawak"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textplagia_detectionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "winstonai": {
                        "plagia_score": 100.0,
                        "items": [
                          {
                            "text": "Rumored Samsung Gadgets For 2023: Galaxy Z Flip 5, Z Fold 5 and More - MSN",
                            "candidates": [
                              {
                                "url": "https://www.msn.com/en-us/news/technology/rumored-samsung-gadgets-for-2023-galaxy-z-flip-5-z-fold-5-and-more/ar-AA16w9Ee",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers. It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices."
                              }
                            ]
                          },
                          {
                            "text": "Originality.ai API Documentation",
                            "candidates": [
                              {
                                "url": "https://docs.originality.ai/api-v1-0-reference",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Should Samsung stick to its annual routine, we can expect to see new foldable phones and wearable devices in August. The company also previewed new designs for ..."
                              },
                              {
                                "url": "https://docs.originality.ai/api-v1-0-reference",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... The company also previewed new designs for bendable phones and tablets earlier this year, hinting that the company may be planning to expand beyond the Z ..."
                              },
                              {
                                "url": "https://docs.originality.ai/api-v1-0-reference",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors, I'm most interested in where its mobile ..."
                              },
                              {
                                "url": "https://docs.originality.ai/api-v1-0-reference",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers. It's a strategy to create ..."
                              },
                              {
                                "url": "https://docs.originality.ai/api-v1-0-reference",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices.\", \"matches\": [ { \"website\": \"https://www.cnet.com ..."
                              }
                            ]
                          },
                          {
                            "text": "Rumored Samsung Gadgets For 2023: Galaxy Z Flip 5, Z Fold 5 and More - CNET",
                            "candidates": [
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors, I'm most interested in ..."
                              },
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers. It's a ..."
                              },
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers. It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices."
                              }
                            ]
                          },
                          {
                            "text": "The Biggest Rumored Samsung Gadgets to Expect in 2023 - YouTube",
                            "candidates": [
                              {
                                "url": "https://www.youtube.com/watch?v=7DXADBWKlgA",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors, I'm most interested in where its mobile ..."
                              },
                              {
                                "url": "https://www.youtube.com/watch?v=7DXADBWKlgA",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... influence than most other tech companies on the devices we carry in our pockets each day. Wearables have also become a large part of how Samsung intends to ..."
                              },
                              {
                                "url": "https://www.youtube.com/watch?v=7DXADBWKlgA",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices. Here are the rumored Samsung products I'm most ..."
                              }
                            ]
                          },
                          {
                            "text": "Galaxy Z Fold 5 and Other Samsung Gadgets to Look for in 2023 IT ...",
                            "candidates": [
                              {
                                "url": "https://www.rbsitsoftwaresolution.com/blog/galaxy-z-fold-5-and-other-samsung-gadgets-to-look-for-in-2023.html",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... the company may be planning to expand beyond the Z Fold and Z Flip in the near future. Though Samsung regularly releases new products across many categories ..."
                              }
                            ]
                          },
                          {
                            "text": "Galaxy S23, Z Fold 5 and more Samsung gadgets rumored for 2023 - US Today News",
                            "candidates": [
                              {
                                "url": "https://ustoday.news/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "... the company may be planning to expand beyond the Z Fold and Z Flip in the near future. Although Samsung regularly releases new products in ..."
                              }
                            ]
                          },
                          {
                            "text": "Galaxy Z Fold 5 and Other Samsung Gadgets to Look for in 2023",
                            "candidates": [
                              {
                                "url": "https://www.umaconferences.com/galaxy-z-fold-5-and-other-samsung-gadgets-to-look-for-in-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "The Galaxy S23 launch may be far behind us, but Samsung likely has plenty more to announce in 2023. That's if history repeats itself."
                              }
                            ]
                          }
                        ]
                      },
                      "originalityai": {
                        "plagia_score": 0.57,
                        "items": [
                          {
                            "text": "Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors, I'm most interested in where its mobile devices are headed.",
                            "candidates": [
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Though Samsung regularly releases new products across many categories, including TVs, home appliances and monitors, I'm most interested in where its mobile devices are headed."
                              }
                            ]
                          },
                          {
                            "text": "Samsung is one of the world's largest smartphone manufacturers by market share, meaning it has more influence than most other tech companies on the devices we carry in our pockets each day.",
                            "candidates": [
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 0.96,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Samsung is one of the world's largest smartphone manufacturers\u00a0by market share, meaning it has more influence than most other tech companies on the devices we carry in our pockets each day."
                              }
                            ]
                          },
                          {
                            "text": "Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers.",
                            "candidates": [
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "Wearables have also become a large part of how Samsung intends to differentiate its phones from those of other Android device makers."
                              }
                            ]
                          },
                          {
                            "text": "It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices.",
                            "candidates": [
                              {
                                "url": "https://www.cnet.com/tech/mobile/galaxy-s23-z-fold-5-and-more-samsung-gadgets-rumored-for-2023/",
                                "plagia_score": 1.0,
                                "prediction": "plagiarized",
                                "plagiarized_text": "It's a strategy to create a web of products that keep people hooked, much like Apple's range of devices."
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/prompt_optimization": {
      "post": {
        "operationId": "text_text_prompt_optimization_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|0.08 (per 1 request)|1 request\n\n\n</details>\n\n",
        "summary": "Prompt Optimization",
        "tags": [
          "Prompt Optimization"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textprompt_optimizationPromptOptimizationRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "openai",
                    "text": "Entity extractor, i give you an entity or multiple entities and a text and i want the entitites extracted from the text",
                    "target_provider": "google"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textprompt_optimizationResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "openai": {
                        "missing_information": "What type of entities are you specifically looking to extract (names, locations, organizations, etc.)? Do you have any specific language or data format preferences for the text? Do you need this tool to handle any particular size, complexity, or other special characteristics of the texts?",
                        "items": [
                          {
                            "text": "Given the following text and a list of entities, please extract and list all occurrences of the specified entities in the text. The entities to be extracted are [entities]. The text for entity extraction is [text]."
                          },
                          {
                            "text": "Given the following text, please identify and extract all instances of the specified entities. The entities to look for are [Entity1, Entity2, Entity3]. Here is the text: [Insert Text Here]. Please list the extracted entities in a clear and organized manner."
                          },
                          {
                            "text": "Given the following text and a list of entities, please extract and list all instances of the provided entities within the text. The entities are [list of entities]. The text is as follows: [text]. Please format your response as a bulleted list, with each bullet representing an instance of an entity found in the text."
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/question_answer": {
      "post": {
        "operationId": "text_text_question_answer_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.0.0`|10.0 (per 1000000 char)|1000 char\n\n\n</details>\n\n",
        "summary": "Question Answer",
        "tags": [
          "Question Answer"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textquestion_answerQuestionAnswerRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "tenstorrent,openai",
                    "texts": [
                      "The bar-shouldered dove (Geopelia humeralis) is a species of dove, in the family Columbidae, native to Australia and southern New Guinea. Its typical habitat consists of areas of thick vegetation where water is present, damp gullies, forests and gorges, mangroves, plantations, swamps, eucalyptus woodland, tropical and sub-tropical shrubland, and river margins. It can be found in both inland and coastal regions."
                    ],
                    "question": "What is the scientific name of bar-shouldered dove?",
                    "temperature": 0,
                    "examples_context": "In 2017, U.S. life expectancy was 78.6 years.",
                    "examples": [
                      [
                        "What is human life expectancy in the United States?",
                        "78 years."
                      ]
                    ]
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textquestion_answerResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "tenstorrent": {
                        "answers": [
                          "geopelia humeralis"
                        ]
                      },
                      "openai": {
                        "answers": [
                          "The scientific name of bar-shouldered dove is Geopelia humeralis."
                        ]
                      },
                      "eden-ai": {
                        "status": "success",
                        "answers": [
                          "geopelia humeralis",
                          "The scientific name of bar-shouldered dove is Geopelia humeralis."
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/search": {
      "post": {
        "operationId": "text_text_search_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**cohere**|`v1`|0.1 (per 1000000 char)|1 char\n|**google**|`v1`|0.1 (per 1000000 char)|1 char\n\n\n</details>\n\n",
        "summary": "Search",
        "tags": [
          "Search"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textsearchSearchRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "openai,google,cohere",
                    "texts": [
                      "In Roman mythology, Romulus and Remus (Latin: [\u02c8ro\u02d0m\u028al\u028as], [\u02c8r\u025bm\u028as]) are twin brothers whose story tells of the events that led to the founding of the city of Rome and the Roman Kingdom by Romulus.",
                      "In ancient Roman religion and myth, Mars (Latin: M\u0101rs, pronounced [ma\u02d0rs]) was the god of war and also an agricultural guardian, a combination characteristic of early Rome.",
                      "Proto-Indo-European mythology is the body of myths and deities associated with the Proto-Indo-Europeans, the hypothetical speakers of the reconstructed Proto-Indo-European language",
                      "The Ashvamedha (Sanskrit: \u0905\u0936\u094d\u0935\u092e\u0947\u0927, romanized: a\u015bvamedha) was a horse sacrifice ritual followed by the \u015arauta tradition of Vedic religion.",
                      "Purusha (puru\u1e63a or Sanskrit: \u092a\u0941\u0930\u0941\u0937) is a complex concept whose meaning evolved in Vedic and Upanishadic times. Depending on source and historical timeline, it means the cosmic being or self, consciousness, and universal principle."
                    ],
                    "query": "Rome"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textsearchResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "openai": {
                        "items": [
                          {
                            "object": "search_result",
                            "document": 0,
                            "score": 82.27574355373714
                          },
                          {
                            "object": "search_result",
                            "document": 1,
                            "score": 80.6998032223455
                          },
                          {
                            "object": "search_result",
                            "document": 3,
                            "score": 74.41124009541474
                          },
                          {
                            "object": "search_result",
                            "document": 2,
                            "score": 74.05020826017346
                          },
                          {
                            "object": "search_result",
                            "document": 4,
                            "score": 72.08070059698751
                          }
                        ]
                      },
                      "google": {
                        "items": [
                          {
                            "object": "search_result",
                            "document": 1,
                            "score": 63.63229086429776
                          },
                          {
                            "object": "search_result",
                            "document": 0,
                            "score": 63.58258325147889
                          },
                          {
                            "object": "search_result",
                            "document": 2,
                            "score": 58.75945125283969
                          },
                          {
                            "object": "search_result",
                            "document": 4,
                            "score": 57.09977302069713
                          },
                          {
                            "object": "search_result",
                            "document": 3,
                            "score": 55.91798442559938
                          }
                        ]
                      },
                      "cohere": {
                        "items": [
                          {
                            "object": "search_result",
                            "document": 0,
                            "score": 87.21923397620458
                          },
                          {
                            "object": "search_result",
                            "document": 1,
                            "score": 84.96817733624593
                          },
                          {
                            "object": "search_result",
                            "document": 2,
                            "score": 84.54056661907234
                          },
                          {
                            "object": "search_result",
                            "document": 3,
                            "score": 79.56999980075983
                          },
                          {
                            "object": "search_result",
                            "document": 4,
                            "score": 78.31888506931125
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/sentiment_analysis": {
      "post": {
        "operationId": "text_text_sentiment_analysis_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000000 char)|300 char\n|**connexun**|`v1.0`|2.0 (per 1000 request)|1 request\n|**google**|`v1`|1.0 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**lettria**|`v5.5.2`|2.0 (per 1000000 char)|1000 char\n|**microsoft**|`v3.1`|1.0 (per 1000000 char)|1000 char\n|**emvista**|`v1.0`|3.0 (per 1000000 char)|1000 char\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.1.0`|0.7 (per 1000000 char)|1000 char\n|**sapling**|`v1`|20.0 (per 1000000 char)|1000 char\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Arabic**|`ar`|\n|**Bengali**|`bn`|\n|**Chinese**|`zh`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**Finnish**|`fi`|\n|**French**|`fr`|\n|**German**|`de`|\n|**Hindi**|`hi`|\n|**Indonesian**|`id`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Korean**|`ko`|\n|**Modern Greek (1453-)**|`el`|\n|**Norwegian**|`no`|\n|**Panjabi**|`pa`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Romanian**|`ro`|\n|**Russian**|`ru`|\n|**Spanish**|`es`|\n|**Swedish**|`sv`|\n|**Tamil**|`ta`|\n|**Thai**|`th`|\n|**Turkish**|`tr`|\n|**Ukrainian**|`uk`|\n|**Vietnamese**|`vi`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Chinese (Simplified)**|`zh-Hans`|\n|**Chinese (Taiwan)**|`zh-TW`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**English (United States)**|`en-US`|\n|**French (France)**|`fr-FR`|\n|**Portuguese (Brazil)**|`pt-BR`|\n|**Portuguese (Portugal)**|`pt-PT`|\n\n</details>",
        "summary": "Sentiment Analysis",
        "tags": [
          "Sentiment Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "sapling,google,microsoft,emvista,tenstorrent,connexun,ibm,lettria,openai,amazon,nlpcloud",
                    "language": "en",
                    "text": "Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. First is the product reviews and pricing. There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). The second issue is they make it too difficult to get help when there's an issue with an order."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textsentiment_analysisResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "sapling": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.51,
                        "items": [
                          {
                            "segment": "Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed.",
                            "sentiment": "Positive",
                            "sentiment_rate": 0.96
                          },
                          {
                            "segment": "First is the product reviews and pricing.",
                            "sentiment": "Neutral",
                            "sentiment_rate": 1.0
                          },
                          {
                            "segment": "There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product.",
                            "sentiment": "Positive",
                            "sentiment_rate": 0.67
                          },
                          {
                            "segment": "There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc).",
                            "sentiment": "Neutral",
                            "sentiment_rate": 0.61
                          },
                          {
                            "segment": "The second issue is they make it too difficult to get help when there's an issue with an order.",
                            "sentiment": "Negative",
                            "sentiment_rate": 0.96
                          }
                        ]
                      },
                      "google": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.4,
                        "items": [
                          {
                            "segment": "Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed.",
                            "sentiment": "Neutral",
                            "sentiment_rate": 0.0
                          },
                          {
                            "segment": "First is the product reviews and pricing.",
                            "sentiment": "Neutral",
                            "sentiment_rate": 0.0
                          },
                          {
                            "segment": "There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product.",
                            "sentiment": "Negative",
                            "sentiment_rate": 0.5
                          },
                          {
                            "segment": "There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc).",
                            "sentiment": "Negative",
                            "sentiment_rate": 0.6
                          },
                          {
                            "segment": "The second issue is they make it too difficult to get help when there's an issue with an order.",
                            "sentiment": "Negative",
                            "sentiment_rate": 0.8
                          }
                        ]
                      },
                      "microsoft": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.67,
                        "items": [
                          {
                            "segment": "Overall I am satisfied with my experience at Amazon, but two areas of major improvement needed. ",
                            "sentiment": "Positive",
                            "sentiment_rate": 0.98
                          },
                          {
                            "segment": "First is the product reviews and pricing. ",
                            "sentiment": "Neutral",
                            "sentiment_rate": 0.99
                          },
                          {
                            "segment": "There are thousands of positive reviews for so many items, and it's clear that the reviews are bogus or not really associated with that product. ",
                            "sentiment": "Negative",
                            "sentiment_rate": 1.0
                          },
                          {
                            "segment": "There needs to be a way to only view products sold by Amazon directly, because many market sellers way overprice items that can be purchased cheaper elsewhere (like Walmart, Target, etc). ",
                            "sentiment": "Neutral",
                            "sentiment_rate": 0.7
                          },
                          {
                            "segment": "The second issue is they make it too difficult to get help when there's an issue with an order.",
                            "sentiment": "Negative",
                            "sentiment_rate": 1.0
                          }
                        ]
                      },
                      "emvista": {
                        "general_sentiment": "Positive",
                        "general_sentiment_rate": 0.45,
                        "items": []
                      },
                      "tenstorrent": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.38,
                        "items": []
                      },
                      "connexun": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.38,
                        "items": []
                      },
                      "ibm": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.54,
                        "items": []
                      },
                      "lettria": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.27,
                        "items": [
                          {
                            "segment": "overall i am satisfied with my experience at Amazon , but two areas of major improvement needed .",
                            "sentiment": "Positive",
                            "sentiment_rate": 0.71
                          },
                          {
                            "segment": "first is the product reviews and pricing .",
                            "sentiment": "Positive",
                            "sentiment_rate": 0.01
                          },
                          {
                            "segment": "there are thousands of positive reviews for so many items , and it is clear",
                            "sentiment": "Positive",
                            "sentiment_rate": 0.38
                          },
                          {
                            "segment": "there needs to be a way to only view products sold by Amazon directly , because many market sellers way overprice items that can be purchased cheaper elsewhere ( like Walmart , Target , etc ) .",
                            "sentiment": "Negative",
                            "sentiment_rate": 0.23
                          },
                          {
                            "segment": "the second issue is they make it too difficult to get help when there is an issue with an order .",
                            "sentiment": "Neutral",
                            "sentiment_rate": 0.0
                          }
                        ]
                      },
                      "openai": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.3,
                        "items": []
                      },
                      "amazon": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.4,
                        "items": []
                      },
                      "nlpcloud": {
                        "general_sentiment": "Negative",
                        "general_sentiment_rate": 0.97,
                        "items": []
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/spell_check": {
      "post": {
        "operationId": "text_text_spell_check_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**microsoft**|`v7`|0.3 (per 1000 request)|1 request\n|**openai**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**prowritingaid**|`v2`|10.0 (per 1000 request)|1 request\n|**cohere**|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**sapling**|`v1`|2.0 (per 1000000 char)|1 char\n|**nlpcloud**|`v1`|25.0 (per 1000 request)|1 request\n|**ai21labs**|`v1`|0.0005 (per 1 request)|1 request\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Achinese**|`ace`|\n|**Afrikaans**|`af`|\n|**Akan**|`ak`|\n|**Albanian**|`sq`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Asturian**|`ast`|\n|**Awadhi**|`awa`|\n|**Ayacucho Quechua**|`quy`|\n|**Azerbaijani**|`az`|\n|**Balinese**|`ban`|\n|**Bambara**|`bm`|\n|**Banjar**|`bjn`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Belarusian**|`be`|\n|**Bemba (Zambia)**|`bem`|\n|**Bengali**|`bn`|\n|**Bhojpuri**|`bho`|\n|**Bosnian**|`bs`|\n|**Buginese**|`bug`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Central Atlas Tamazight**|`tzm`|\n|**Central Aymara**|`ayr`|\n|**Central Kanuri**|`knc`|\n|**Central Khmer**|`km`|\n|**Central Kurdish**|`ckb`|\n|**Chhattisgarhi**|`hne`|\n|**Chinese**|`zh`|\n|**Chokwe**|`cjk`|\n|**Corsican**|`co`|\n|**Crimean Tatar**|`crh`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**Dyula**|`dyu`|\n|**Dzongkha**|`dz`|\n|**Eastern Yiddish**|`ydd`|\n|**Egyptian Arabic**|`arz`|\n|**English**|`en`|\n|**Esperanto**|`eo`|\n|**Estonian**|`et`|\n|**Ewe**|`ee`|\n|**Faroese**|`fo`|\n|**Fijian**|`fj`|\n|**Finnish**|`fi`|\n|**Fon**|`fon`|\n|**French**|`fr`|\n|**Friulian**|`fur`|\n|**Galician**|`gl`|\n|**Ganda**|`lg`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Guarani**|`gn`|\n|**Gujarati**|`gu`|\n|**Haitian**|`ht`|\n|**Halh Mongolian**|`khk`|\n|**Hausa**|`ha`|\n|**Hawaiian**|`haw`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Hmong**|`hmn`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Igbo**|`ig`|\n|**Iloko**|`ilo`|\n|**Indonesian**|`id`|\n|**Irish**|`ga`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kabiy\u00e8**|`kbp`|\n|**Kabuverdianu**|`kea`|\n|**Kabyle**|`kab`|\n|**Kachin**|`kac`|\n|**Kamba (Kenya)**|`kam`|\n|**Kannada**|`kn`|\n|**Kashmiri**|`ks`|\n|**Kazakh**|`kk`|\n|**Kikuyu**|`ki`|\n|**Kimbundu**|`kmb`|\n|**Kinyarwanda**|`rw`|\n|**Kirghiz**|`ky`|\n|**Kongo**|`kg`|\n|**Korean**|`ko`|\n|**Kurdish**|`ku`|\n|**Lao**|`lo`|\n|**Latgalian**|`ltg`|\n|**Latin**|`la`|\n|**Latvian**|`lv`|\n|**Ligurian**|`lij`|\n|**Limburgan**|`li`|\n|**Lingala**|`ln`|\n|**Lithuanian**|`lt`|\n|**Lombard**|`lmo`|\n|**Luba-Katanga**|`lu`|\n|**Luo (Kenya and Tanzania)**|`luo`|\n|**Lushai**|`lus`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Magahi**|`mag`|\n|**Maithili**|`mai`|\n|**Malagasy**|`mg`|\n|**Malay (macrolanguage)**|`ms`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Manipuri**|`mni`|\n|**Maori**|`mi`|\n|**Marathi**|`mr`|\n|**Mesopotamian Arabic**|`acm`|\n|**Minangkabau**|`min`|\n|**Modern Greek (1453-)**|`el`|\n|**Mongolian**|`mn`|\n|**Moroccan Arabic**|`ary`|\n|**Mossi**|`mos`|\n|**Najdi Arabic**|`ars`|\n|**Nepali (macrolanguage)**|`ne`|\n|**Nigerian Fulfulde**|`fuv`|\n|**North Azerbaijani**|`azj`|\n|**North Levantine Arabic**|`apc`|\n|**Northern Kurdish**|`kmr`|\n|**Northern Uzbek**|`uzn`|\n|**Norwegian**|`no`|\n|**Norwegian Bokm\u00e5l**|`nb`|\n|**Norwegian Nynorsk**|`nn`|\n|**Nuer**|`nus`|\n|**Nyanja**|`ny`|\n|**Occitan (post 1500)**|`oc`|\n|**Oriya (macrolanguage)**|`or`|\n|**Pangasinan**|`pag`|\n|**Panjabi**|`pa`|\n|**Papiamento**|`pap`|\n|**Pedi**|`nso`|\n|**Persian**|`fa`|\n|**Plateau Malagasy**|`plt`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Pushto**|`ps`|\n|**Romanian**|`ro`|\n|**Rundi**|`rn`|\n|**Russian**|`ru`|\n|**Samoan**|`sm`|\n|**Sango**|`sg`|\n|**Sanskrit**|`sa`|\n|**Santali**|`sat`|\n|**Sardinian**|`sc`|\n|**Scottish Gaelic**|`gd`|\n|**Serbian**|`sr`|\n|**Shan**|`shn`|\n|**Shona**|`sn`|\n|**Sicilian**|`scn`|\n|**Silesian**|`szl`|\n|**Sindhi**|`sd`|\n|**Sinhala**|`si`|\n|**Slovak**|`sk`|\n|**Slovenian**|`sl`|\n|**Somali**|`so`|\n|**South Azerbaijani**|`azb`|\n|**South Levantine Arabic**|`ajp`|\n|**Southern Pashto**|`pbt`|\n|**Southern Sotho**|`st`|\n|**Southwestern Dinka**|`dik`|\n|**Spanish**|`es`|\n|**Standard Latvian**|`lvs`|\n|**Standard Malay**|`zsm`|\n|**Sundanese**|`su`|\n|**Swahili (macrolanguage)**|`sw`|\n|**Swati**|`ss`|\n|**Swedish**|`sv`|\n|**Ta'izzi-Adeni Arabic**|`acq`|\n|**Tagalog**|`tl`|\n|**Tajik**|`tg`|\n|**Tamashek**|`tmh`|\n|**Tamil**|`ta`|\n|**Tatar**|`tt`|\n|**Telugu**|`te`|\n|**Thai**|`th`|\n|**Tibetan**|`bo`|\n|**Tigrinya**|`ti`|\n|**Tok Pisin**|`tpi`|\n|**Tosk Albanian**|`als`|\n|**Tsonga**|`ts`|\n|**Tswana**|`tn`|\n|**Tumbuka**|`tum`|\n|**Tunisian Arabic**|`aeb`|\n|**Turkish**|`tr`|\n|**Turkmen**|`tk`|\n|**Twi**|`tw`|\n|**Uighur**|`ug`|\n|**Ukrainian**|`uk`|\n|**Umbundu**|`umb`|\n|**Urdu**|`ur`|\n|**Uzbek**|`uz`|\n|**Venetian**|`vec`|\n|**Vietnamese**|`vi`|\n|**Waray (Philippines)**|`war`|\n|**Welsh**|`cy`|\n|**West Central Oromo**|`gaz`|\n|**Western Frisian**|`fy`|\n|**Wolof**|`wo`|\n|**Xhosa**|`xh`|\n|**Yiddish**|`yi`|\n|**Yoruba**|`yo`|\n|**Yue Chinese**|`yue`|\n|**Zulu**|`zu`|\n|**jp**|`jp`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Arabic (world)**|`ar-001`|\n|**Chinese (China)**|`zh-CN`|\n|**Chinese (Simplified)**|`zh-hans`|\n|**Chinese (Taiwan)**|`zh-TW`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**Chinese (Traditional)**|`zh-hant`|\n|**English (United Kingdom)**|`en-gb`|\n|**Persian (Afghanistan)**|`fa-AF`|\n|**Portuguese (Brazil)**|`pt-br`|\n|**Portuguese (Portugal)**|`pt-pt`|\n\n</details>",
        "summary": "Spell Check",
        "tags": [
          "Spell Check"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textspell_checkSpellCheckRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "ai21labs,nlpcloud,openai,microsoft,cohere,sapling,prowritingaid",
                    "language": "en",
                    "text": "Hollo, wrld! How re yu?"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textspell_checkResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "ai21labs": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "wrld!",
                            "type": "Spelling",
                            "offset": 7,
                            "length": 5,
                            "suggestions": [
                              {
                                "suggestion": "world!",
                                "score": null
                              }
                            ]
                          },
                          {
                            "text": "r yu?",
                            "type": "Spelling",
                            "offset": 17,
                            "length": 5,
                            "suggestions": [
                              {
                                "suggestion": "are you?",
                                "score": null
                              }
                            ]
                          }
                        ]
                      },
                      "nlpcloud": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "Hollo, wrld! How r yu?",
                            "type": null,
                            "offset": 0,
                            "length": 26,
                            "suggestions": [
                              {
                                "suggestion": "Hello, world! How are you?",
                                "score": null
                              }
                            ]
                          }
                        ]
                      },
                      "openai": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "Hollo",
                            "type": null,
                            "offset": 0,
                            "length": 5,
                            "suggestions": [
                              {
                                "suggestion": "Text",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "wrld",
                            "type": null,
                            "offset": 7,
                            "length": 4,
                            "suggestions": [
                              {
                                "suggestion": "Hello",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "How",
                            "type": null,
                            "offset": 13,
                            "length": 3,
                            "suggestions": [
                              {
                                "suggestion": "world",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "r",
                            "type": null,
                            "offset": 17,
                            "length": 1,
                            "suggestions": [
                              {
                                "suggestion": "How",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "yu",
                            "type": null,
                            "offset": 19,
                            "length": 2,
                            "suggestions": [
                              {
                                "suggestion": "are",
                                "score": 1.0
                              }
                            ]
                          }
                        ]
                      },
                      "microsoft": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "Hollo",
                            "type": "UnknownToken",
                            "offset": 0,
                            "length": 5,
                            "suggestions": [
                              {
                                "suggestion": "hello",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "wrld",
                            "type": "UnknownToken",
                            "offset": 7,
                            "length": 4,
                            "suggestions": [
                              {
                                "suggestion": "world",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "yu",
                            "type": "UnknownToken",
                            "offset": 19,
                            "length": 2,
                            "suggestions": [
                              {
                                "suggestion": "you",
                                "score": 1.0
                              }
                            ]
                          }
                        ]
                      },
                      "cohere": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "Hollo",
                            "type": null,
                            "offset": 0,
                            "length": 5,
                            "suggestions": [
                              {
                                "suggestion": "Hello",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "wrld",
                            "type": null,
                            "offset": 7,
                            "length": 4,
                            "suggestions": [
                              {
                                "suggestion": "world",
                                "score": 1.0
                              }
                            ]
                          },
                          {
                            "text": "yu",
                            "type": null,
                            "offset": 19,
                            "length": 2,
                            "suggestions": [
                              {
                                "suggestion": "you",
                                "score": 1.0
                              }
                            ]
                          }
                        ]
                      },
                      "sapling": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "Hollo",
                            "type": null,
                            "offset": 0,
                            "length": 5,
                            "suggestions": [
                              {
                                "suggestion": "Hello",
                                "score": null
                              }
                            ]
                          },
                          {
                            "text": "wrld",
                            "type": null,
                            "offset": 7,
                            "length": 4,
                            "suggestions": [
                              {
                                "suggestion": "world",
                                "score": null
                              }
                            ]
                          }
                        ]
                      },
                      "prowritingaid": {
                        "text": "Hollo, wrld! How r yu?",
                        "items": [
                          {
                            "text": "wrld",
                            "type": "Unknown word: wrld",
                            "offset": 7,
                            "length": 4,
                            "suggestions": [
                              {
                                "suggestion": "WRLD",
                                "score": null
                              },
                              {
                                "suggestion": "wild",
                                "score": null
                              },
                              {
                                "suggestion": "weld",
                                "score": null
                              }
                            ]
                          },
                          {
                            "text": "yu",
                            "type": "Unknown word: yu",
                            "offset": 19,
                            "length": 2,
                            "suggestions": [
                              {
                                "suggestion": "you",
                                "score": null
                              },
                              {
                                "suggestion": "ye",
                                "score": null
                              },
                              {
                                "suggestion": "ya",
                                "score": null
                              },
                              {
                                "suggestion": "mu",
                                "score": null
                              },
                              {
                                "suggestion": "nu",
                                "score": null
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/summarize": {
      "post": {
        "operationId": "text_text_summarize_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Model|Version|Price|Billing unit|\n|----|----|-------|-----|------------|\n|**connexun**|-|`v1.0`|2.0 (per 1000 request)|1 request\n|**microsoft**|-|`v3.1`|2.0 (per 1000000 char)|1000 char\n|**openai**|-|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**openai**|**text-ada-001**|`v3.0.0`|0.4 (per 1000000 token)|1 token\n|**openai**|**text-babbage-001**|`v3.0.0`|0.5 (per 1000000 token)|1 token\n|**openai**|**text-curie-001**|`v3.0.0`|2.0 (per 1000000 token)|1 token\n|**openai**|**text-davinci-002**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**openai**|**text-davinci-003**|`v3.0.0`|20.0 (per 1000000 token)|1 token\n|**emvista**|-|`v1.0`|1.0 (per 1000000 char)|1000 char\n|**cohere**|-|`2022-12-06`|2.0 (per 1000000 token)|1 token\n|**alephalpha**|-|`1.12.0`|1.5 (per 1000000 char)|1 char\n|**alephalpha**|**luminous-base**|`1.12.0`|1.0 (per 1000000 char)|1 char\n|**alephalpha**|**luminous-extended**|`1.12.0`|1.5 (per 1000000 char)|1 char\n|**alephalpha**|**luminous-supreme**|`1.12.0`|50.0 (per 1000000 char)|1 char\n|**alephalpha**|**luminous-base-control**|`1.12.0`|1.25 (per 1000000 char)|1 char\n|**alephalpha**|**luminous-extended-control**|`1.12.0`|1.8 (per 1000000 char)|1 char\n|**alephalpha**|**luminous-supreme-control**|`1.12.0`|62.5 (per 1000000 char)|1 char\n|**nlpcloud**|-|`v1`|25.0 (per 1000 request)|1 request\n|**nlpcloud**|**bart-large-cnn**|`v1`|25.0 (per 1000 request)|1 request\n|**nlpcloud**|**fast-gpt-j**|`v1`|25.0 (per 1000 request)|1 request\n|**nlpcloud**|**finetuned-llama-2-70b**|`v1`|25.0 (per 1000 request)|1 request\n|**nlpcloud**|**chatdolphin**|`v1`|25.0 (per 1000 request)|1 request\n|**ai21labs**|-|`v1`|0.005 (per 1000 char)|1000 char\n|**anthropic**|-|`v1`|24.0 (per 1000000 token)|1 token\n|**anthropic**|**claude-v1**|`v1`|24.0 (per 1000000 token)|1 token\n|**anthropic**|**claude-v2**|`v1`|24.0 (per 1000000 token)|1 token\n|**anthropic**|**claude-instant-v1**|`v1`|2.4 (per 1000000 token)|1 token\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Abkhazian**|`ab`|\n|**Acoli**|`ach`|\n|**Afar**|`aa`|\n|**Afrikaans**|`af`|\n|**Akan**|`ak`|\n|**Albanian**|`sq`|\n|**American Sign Language**|`ase`|\n|**Amharic**|`am`|\n|**Arabic**|`ar`|\n|**Aragonese**|`an`|\n|**Argentine Sign Language**|`aed`|\n|**Armenian**|`hy`|\n|**Assamese**|`as`|\n|**Avaric**|`av`|\n|**Avestan**|`ae`|\n|**Awadhi**|`awa`|\n|**Aymara**|`ay`|\n|**Azerbaijani**|`az`|\n|**Bambara**|`bm`|\n|**Bashkir**|`ba`|\n|**Basque**|`eu`|\n|**Belarusian**|`be`|\n|**Bemba (Zambia)**|`bem`|\n|**Bengali**|`bn`|\n|**Berber languages**|`ber`|\n|**Bhojpuri**|`bho`|\n|**Bihari languages**|`bh`|\n|**Bislama**|`bi`|\n|**Bosnian**|`bs`|\n|**Brazilian Sign Language**|`bzs`|\n|**Breton**|`br`|\n|**Bulgarian**|`bg`|\n|**Burmese**|`my`|\n|**Catalan**|`ca`|\n|**Cebuano**|`ceb`|\n|**Celtic languages**|`cel`|\n|**Central Bikol**|`bcl`|\n|**Central Khmer**|`km`|\n|**Chamorro**|`ch`|\n|**Chechen**|`ce`|\n|**Chilean Sign Language**|`csg`|\n|**Chinese**|`zh`|\n|**Church Slavic**|`cu`|\n|**Chuukese**|`chk`|\n|**Chuvash**|`cv`|\n|**Colombian Sign Language**|`csn`|\n|**Congo Swahili**|`swc`|\n|**Cornish**|`kw`|\n|**Corsican**|`co`|\n|**Cree**|`cr`|\n|**Croatian**|`hr`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dhivehi**|`dv`|\n|**Dogri (macrolanguage)**|`doi`|\n|**Dutch**|`nl`|\n|**Dzongkha**|`dz`|\n|**Efik**|`efi`|\n|**English**|`en`|\n|**Esperanto**|`eo`|\n|**Estonian**|`et`|\n|**Ewe**|`ee`|\n|**Faroese**|`fo`|\n|**Fijian**|`fj`|\n|**Finnish**|`fi`|\n|**Finnish Sign Language**|`fse`|\n|**Fon**|`fon`|\n|**French**|`fr`|\n|**Fulah**|`ff`|\n|**Ga**|`gaa`|\n|**Galician**|`gl`|\n|**Ganda**|`lg`|\n|**Georgian**|`ka`|\n|**German**|`de`|\n|**Gilbertese**|`gil`|\n|**Guarani**|`gn`|\n|**Gujarati**|`gu`|\n|**Gun**|`guw`|\n|**Haitian**|`ht`|\n|**Hausa**|`ha`|\n|**Hebrew**|`he`|\n|**Herero**|`hz`|\n|**Hiligaynon**|`hil`|\n|**Hindi**|`hi`|\n|**Hiri Motu**|`ho`|\n|**Hungarian**|`hu`|\n|**Icelandic**|`is`|\n|**Ido**|`io`|\n|**Igbo**|`ig`|\n|**Iloko**|`ilo`|\n|**Indonesian**|`id`|\n|**Interlingua (International Auxiliary Language Association)**|`ia`|\n|**Interlingue**|`ie`|\n|**Inuktitut**|`iu`|\n|**Inupiaq**|`ik`|\n|**Irish**|`ga`|\n|**Isoko**|`iso`|\n|**Isthmus Zapotec**|`zai`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Javanese**|`jv`|\n|**Kabyle**|`kab`|\n|**Kalaallisut**|`kl`|\n|**Kannada**|`kn`|\n|**Kanuri**|`kr`|\n|**Kaonde**|`kqn`|\n|**Kashmiri**|`ks`|\n|**Kazakh**|`kk`|\n|**Kikuyu**|`ki`|\n|**Kinyarwanda**|`rw`|\n|**Kirghiz**|`ky`|\n|**Komi**|`kv`|\n|**Kongo**|`kg`|\n|**Konkani (macrolanguage)**|`kok`|\n|**Korean**|`ko`|\n|**Kuanyama**|`kj`|\n|**Kurdish**|`ku`|\n|**Kwangali**|`kwn`|\n|**Lao**|`lo`|\n|**Latin**|`la`|\n|**Latvian**|`lv`|\n|**Limburgan**|`li`|\n|**Lingala**|`ln`|\n|**Lithuanian**|`lt`|\n|**Lozi**|`loz`|\n|**Luba-Katanga**|`lu`|\n|**Luba-Lulua**|`lua`|\n|**Lunda**|`lun`|\n|**Luo (Kenya and Tanzania)**|`luo`|\n|**Lushai**|`lus`|\n|**Luvale**|`lue`|\n|**Luxembourgish**|`lb`|\n|**Macedonian**|`mk`|\n|**Maithili**|`mai`|\n|**Malagasy**|`mg`|\n|**Malay (macrolanguage)**|`ms`|\n|**Malayalam**|`ml`|\n|**Maltese**|`mt`|\n|**Manx**|`gv`|\n|**Maori**|`mi`|\n|**Marathi**|`mr`|\n|**Marshallese**|`mh`|\n|**Mexican Sign Language**|`mfs`|\n|**Min Nan Chinese**|`nan`|\n|**Modern Greek (1453-)**|`el`|\n|**Mongolian**|`mn`|\n|**Morisyen**|`mfe`|\n|**Mossi**|`mos`|\n|**Nauru**|`na`|\n|**Navajo**|`nv`|\n|**Ndonga**|`ng`|\n|**Nepali (macrolanguage)**|`ne`|\n|**Niuean**|`niu`|\n|**North Ndebele**|`nd`|\n|**Northern Sami**|`se`|\n|**Norwegian**|`no`|\n|**Norwegian Bokm\u00e5l**|`nb`|\n|**Norwegian Nynorsk**|`nn`|\n|**Nyaneka**|`nyk`|\n|**Nyanja**|`ny`|\n|**Occitan (post 1500)**|`oc`|\n|**Ojibwa**|`oj`|\n|**Oriya (macrolanguage)**|`or`|\n|**Oromo**|`om`|\n|**Ossetian**|`os`|\n|**Pali**|`pi`|\n|**Pangasinan**|`pag`|\n|**Panjabi**|`pa`|\n|**Papiamento**|`pap`|\n|**Pedi**|`nso`|\n|**Persian**|`fa`|\n|**Peruvian Sign Language**|`prl`|\n|**Pijin**|`pis`|\n|**Pohnpeian**|`pon`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Pushto**|`ps`|\n|**Quechua**|`qu`|\n|**Romance languages**|`roa`|\n|**Romanian**|`mo`|\n|**Romanian**|`ro`|\n|**Romansh**|`rm`|\n|**Rundi**|`rn`|\n|**Russian**|`ru`|\n|**Ruund**|`rnd`|\n|**Samoan**|`sm`|\n|**San Salvador Kongo**|`kwy`|\n|**Sango**|`sg`|\n|**Sanskrit**|`sa`|\n|**Santali**|`sat`|\n|**Sardinian**|`sc`|\n|**Scottish Gaelic**|`gd`|\n|**Serbian**|`sr`|\n|**Seselwa Creole French**|`crs`|\n|**Shan**|`shn`|\n|**Shona**|`sn`|\n|**Sichuan Yi**|`ii`|\n|**Sicilian**|`scn`|\n|**Sindhi**|`sd`|\n|**Sinhala**|`si`|\n|**Slovak**|`sk`|\n|**Slovenian**|`sl`|\n|**Somali**|`so`|\n|**South Ndebele**|`nr`|\n|**Southern Sotho**|`st`|\n|**Spanish**|`es`|\n|**Spanish Sign Language**|`ssp`|\n|**Sranan Tongo**|`srn`|\n|**Sundanese**|`su`|\n|**Swahili (macrolanguage)**|`sw`|\n|**Swati**|`ss`|\n|**Swedish**|`sv`|\n|**Tagalog**|`tl`|\n|**Tahitian**|`ty`|\n|**Tajik**|`tg`|\n|**Tamil**|`ta`|\n|**Tatar**|`tt`|\n|**Telugu**|`te`|\n|**Tetela**|`tll`|\n|**Tetun Dili**|`tdt`|\n|**Thai**|`th`|\n|**Tibetan**|`bo`|\n|**Tigrinya**|`ti`|\n|**Tiv**|`tiv`|\n|**Tok Pisin**|`tpi`|\n|**Tonga (Tonga Islands)**|`to`|\n|**Tonga (Zambia)**|`toi`|\n|**Tsonga**|`ts`|\n|**Tswana**|`tn`|\n|**Tumbuka**|`tum`|\n|**Turkish**|`tr`|\n|**Turkmen**|`tk`|\n|**Tuvalu**|`tvl`|\n|**Twi**|`tw`|\n|**Tzotzil**|`tzo`|\n|**Uighur**|`ug`|\n|**Ukrainian**|`uk`|\n|**Umbundu**|`umb`|\n|**Urdu**|`ur`|\n|**Uzbek**|`uz`|\n|**Venda**|`ve`|\n|**Venezuelan Sign Language**|`vsl`|\n|**Vietnamese**|`vi`|\n|**Volap\u00fck**|`vo`|\n|**Wallisian**|`wls`|\n|**Walloon**|`wa`|\n|**Waray (Philippines)**|`war`|\n|**Welsh**|`cy`|\n|**Western Frisian**|`fy`|\n|**Wolaytta**|`wal`|\n|**Wolof**|`wo`|\n|**Wu Chinese**|`wuu`|\n|**Xhosa**|`xh`|\n|**Yapese**|`yap`|\n|**Yiddish**|`yi`|\n|**Yoruba**|`yo`|\n|**Yucateco**|`yua`|\n|**Yue Chinese**|`yue`|\n|**Zande (individual language)**|`zne`|\n|**Zhuang**|`za`|\n|**Zulu**|`zu`|\n|**me**|`me`|\n|**ra**|`ra`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Chinese (Simplified)**|`zh-Hans`|\n|**Portuguese (Brazil)**|`pt-BR`|\n|**Portuguese (Brazil)**|`pt-br`|\n|**Portuguese (Portugal)**|`pt-PT`|\n|**Portuguese (Portugal)**|`pt-pt`|\n\n</details><details><summary>Supported Models</summary><details><summary>openai</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**openai**|`gpt-3.5-turbo`|\n||`gpt-3.5-turbo-1106`|\n||`gpt-3.5-turbo-16k`|\n||`gpt-4`|\n\n</details><details><summary>cohere</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**cohere**|`summarize-medium`|\n||`summarize-xlarge`|\n\n</details><details><summary>alephalpha</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**alephalpha**|`luminous-base`|\n||`luminous-base-control`|\n||`luminous-extended`|\n||`luminous-extended-control`|\n||`luminous-supreme`|\n||`luminous-supreme-control`|\n\n</details><details><summary>nlpcloud</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**nlpcloud**|`bart-large-cnn`|\n||`chatdolphin`|\n||`fast-gpt-j`|\n||`finetuned-llama-2-70b`|\n\n</details><details><summary>anthropic</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**anthropic**|`claude-instant-v1`|\n||`claude-v1`|\n||`claude-v2`|\n\n</details>\n\n</details>",
        "summary": "Summarize",
        "tags": [
          "Summarize"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/textsummarizeSummarizeRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "microsoft,emvista,openai,ai21labs,anthropic,alephalpha,nlpcloud,connexun,cohere",
                    "output_sentences": 3,
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004.",
                    "language": "en"
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textsummarizeResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "microsoft": {
                        "result": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                      },
                      "emvista": {
                        "result": "Barack Hussein Obama is an politician who . A member of the Democratic Party . He served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004 . "
                      },
                      "openai": {
                        "result": "Barack Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. He was the first African-American president and had previously served as a U.S. senator and an Illinois state senator."
                      },
                      "ai21labs": {
                        "result": "Barack Hussein Obama was the 44th president of the United States from 2009 to 2017. He was the first African-American president."
                      },
                      "anthropic": {
                        "result": "Barack Obama was the 44th president of the United States from 2009 to 2017. He was the first African-American to hold the presidency. Prior to becoming president, Obama was a U.S. senator from Illinois from 2005 to 2008 and an Illinois state senator from 1997 to 2004. He is a member of the Democratic Party."
                      },
                      "alephalpha": {
                        "result": "Barack Obama was the 44th president of the United States."
                      },
                      "nlpcloud": {
                        "result": "Barack Obama was the 44th president of the United States from 2009 to 2017. He was the first African-American president of the United States, and a member of the Democratic Party. Prior to his presidency, Obama served as a U.S. senator from Illinois from 2005 to 2008, and an Illinois state senator from 1997 to 2004."
                      },
                      "connexun": {
                        "result": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States."
                      },
                      "cohere": {
                        "result": "\"You have to have a big-picture vision for where you want to go."
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/syntax_analysis": {
      "post": {
        "operationId": "text_text_syntax_analysis_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**amazon**|`boto3 (v1.15.18)`|0.5 (per 1000000 char)|300 char\n|**google**|`v1`|0.5 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**lettria**|`v5.5.2`|2.0 (per 1000000 char)|1000 char\n|**emvista**|`v1.0`|1.0 (per 1000000 char)|1 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Arabic**|`ar`|\n|**Chinese**|`zh`|\n|**Czech**|`cs`|\n|**Danish**|`da`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**Finnish**|`fi`|\n|**French**|`fr`|\n|**German**|`de`|\n|**Hebrew**|`he`|\n|**Hindi**|`hi`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Korean**|`ko`|\n|**Norwegian**|`no`|\n|**Polish**|`pl`|\n|**Portuguese**|`pt`|\n|**Romanian**|`ro`|\n|**Russian**|`ru`|\n|**Slovak**|`sk`|\n|**Spanish**|`es`|\n|**Swedish**|`sv`|\n|**Turkish**|`tr`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n|**Chinese (Taiwan)**|`zh-TW`|\n|**Chinese (Traditional)**|`zh-Hant`|\n|**English (United States)**|`en-US`|\n|**French (France)**|`fr-FR`|\n\n</details>",
        "summary": "Syntax Analysis",
        "tags": [
          "Syntax Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "amazon,emvista,lettria,ibm,google",
                    "language": "en",
                    "text": "Barack Hussein Obama is an American politician who served as the 44th president of the United States from 2009 to 2017. A member of the Democratic Party, Obama was the first African-American president of the United States. He previously served as a U.S. senator from Illinois from 2005 to 2008 and as an Illinois state senator from 1997 to 2004."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/textsyntax_analysisResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "amazon": {
                        "items": [
                          {
                            "word": "Barack",
                            "importance": 0.9989722371101379,
                            "tag": "Proper_noun",
                            "lemma": "Barack",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "Hussein",
                            "importance": 0.999951183795929,
                            "tag": "Proper_noun",
                            "lemma": "Hussein",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "Obama",
                            "importance": 0.9997590780258179,
                            "tag": "Proper_noun",
                            "lemma": "Obama",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "is",
                            "importance": 0.998971164226532,
                            "tag": "Verb",
                            "lemma": "be",
                            "others": {
                              "mood": "INDICATIVE",
                              "number": "SINGULAR",
                              "person": "THIRD",
                              "tense": "PRESENT"
                            }
                          },
                          {
                            "word": "an",
                            "importance": 0.9999935626983643,
                            "tag": "Determiner",
                            "lemma": "a",
                            "others": {}
                          },
                          {
                            "word": "American",
                            "importance": 0.9837486743927002,
                            "tag": "Adjactive",
                            "lemma": "American",
                            "others": {}
                          },
                          {
                            "word": "politician",
                            "importance": 0.9999579191207886,
                            "tag": "Noun",
                            "lemma": "politician",
                            "others": {
                              "number": "SINGULAR"
                            }
                          },
                          {
                            "word": "who",
                            "importance": 1.0,
                            "tag": "Pronoun",
                            "lemma": "who",
                            "others": {
                              "person": "THIRD"
                            }
                          },
                          {
                            "word": "served",
                            "importance": 0.9998955726623535,
                            "tag": "Verb",
                            "lemma": "serve",
                            "others": {
                              "mood": "INDICATIVE",
                              "tense": "PAST"
                            }
                          },
                          {
                            "word": "as",
                            "importance": 0.9925481081008911,
                            "tag": "Adposition",
                            "lemma": "as",
                            "others": {}
                          }
                        ]
                      },
                      "emvista": {
                        "items": [
                          {
                            "word": "is",
                            "importance": null,
                            "tag": "auxiliary",
                            "lemma": "be",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "American",
                            "importance": null,
                            "tag": "adjective",
                            "lemma": "american",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "44th",
                            "importance": null,
                            "tag": "adjective",
                            "lemma": "44th",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "was",
                            "importance": null,
                            "tag": "auxiliary",
                            "lemma": "be",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "first",
                            "importance": null,
                            "tag": "adjective",
                            "lemma": "first",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "African",
                            "importance": null,
                            "tag": "adjective",
                            "lemma": "african",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "American",
                            "importance": null,
                            "tag": "adjective",
                            "lemma": "american",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "previously",
                            "importance": null,
                            "tag": "adverb",
                            "lemma": "previously",
                            "others": {
                              "gender": null,
                              "plural": false,
                              "mode": null,
                              "infinitive": null
                            }
                          }
                        ]
                      },
                      "lettria": {
                        "items": [
                          {
                            "word": "Barack Hussein Obama",
                            "importance": null,
                            "tag": "proper noun",
                            "lemma": "Barack Hussein Obama",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "is",
                            "importance": null,
                            "tag": "verb",
                            "lemma": "be",
                            "others": {
                              "gender": null,
                              "plural": null,
                              "mode": null,
                              "infinitive": "be"
                            }
                          },
                          {
                            "word": "an",
                            "importance": null,
                            "tag": "determiner",
                            "lemma": "a",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "american",
                            "importance": null,
                            "tag": "adjective",
                            "lemma": "american",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "politician",
                            "importance": null,
                            "tag": "common noun",
                            "lemma": "politician",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "who",
                            "importance": null,
                            "tag": "pronom relative",
                            "lemma": "who",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "served",
                            "importance": null,
                            "tag": "verb",
                            "lemma": "serve",
                            "others": {
                              "gender": null,
                              "plural": null,
                              "mode": null,
                              "infinitive": "serve"
                            }
                          },
                          {
                            "word": "as",
                            "importance": null,
                            "tag": "preposition",
                            "lemma": "as",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "the",
                            "importance": null,
                            "tag": "determiner",
                            "lemma": "the",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          },
                          {
                            "word": "president",
                            "importance": null,
                            "tag": "common noun",
                            "lemma": "president",
                            "others": {
                              "gender": "masculine",
                              "plural": "singular",
                              "mode": null,
                              "infinitive": null
                            }
                          }
                        ]
                      },
                      "ibm": {
                        "items": [
                          {
                            "word": "Barack",
                            "importance": null,
                            "tag": "Proper noun",
                            "lemma": null,
                            "others": {}
                          },
                          {
                            "word": "Hussein",
                            "importance": null,
                            "tag": "Proper noun",
                            "lemma": null,
                            "others": {}
                          },
                          {
                            "word": "Obama",
                            "importance": null,
                            "tag": "Proper noun",
                            "lemma": null,
                            "others": {}
                          },
                          {
                            "word": "is",
                            "importance": null,
                            "tag": "Auxiliary",
                            "lemma": "be",
                            "others": {}
                          },
                          {
                            "word": "an",
                            "importance": null,
                            "tag": "Determiner",
                            "lemma": "a",
                            "others": {}
                          },
                          {
                            "word": "American",
                            "importance": null,
                            "tag": "Adjactive",
                            "lemma": "American",
                            "others": {}
                          },
                          {
                            "word": "politician",
                            "importance": null,
                            "tag": "Noun",
                            "lemma": "politician",
                            "others": {}
                          },
                          {
                            "word": "who",
                            "importance": null,
                            "tag": "Pronoun",
                            "lemma": "who",
                            "others": {}
                          },
                          {
                            "word": "served",
                            "importance": null,
                            "tag": "Verb",
                            "lemma": "serve",
                            "others": {}
                          },
                          {
                            "word": "as",
                            "importance": null,
                            "tag": "Adposition",
                            "lemma": "as",
                            "others": {}
                          }
                        ]
                      },
                      "google": {
                        "items": [
                          {
                            "word": "Barack",
                            "importance": null,
                            "tag": "Noun",
                            "lemma": "Barack",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "Hussein",
                            "importance": null,
                            "tag": "Noun",
                            "lemma": "Hussein",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "Obama",
                            "importance": null,
                            "tag": "Noun",
                            "lemma": "Obama",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "is",
                            "importance": null,
                            "tag": "Verb",
                            "lemma": "be",
                            "others": {
                              "mood": "INDICATIVE",
                              "number": "SINGULAR",
                              "person": "THIRD",
                              "tense": "PRESENT"
                            }
                          },
                          {
                            "word": "an",
                            "importance": null,
                            "tag": "Determiner",
                            "lemma": "an",
                            "others": {}
                          },
                          {
                            "word": "American",
                            "importance": null,
                            "tag": "Adjactive",
                            "lemma": "American",
                            "others": {}
                          },
                          {
                            "word": "politician",
                            "importance": null,
                            "tag": "Noun",
                            "lemma": "politician",
                            "others": {
                              "number": "SINGULAR"
                            }
                          },
                          {
                            "word": "who",
                            "importance": null,
                            "tag": "Pronoun",
                            "lemma": "who",
                            "others": {
                              "person": "THIRD"
                            }
                          },
                          {
                            "word": "served",
                            "importance": null,
                            "tag": "Verb",
                            "lemma": "serve",
                            "others": {
                              "mood": "INDICATIVE",
                              "tense": "PAST"
                            }
                          },
                          {
                            "word": "as",
                            "importance": null,
                            "tag": "Adposition",
                            "lemma": "as",
                            "others": {}
                          }
                        ]
                      },
                      "eden-ai": {
                        "status": "success",
                        "items": [
                          {
                            "word": "Barack",
                            "importance": 0.9989722371101379,
                            "tag": "Proper_noun",
                            "lemma": "Barack",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "Hussein",
                            "importance": 0.999951183795929,
                            "tag": "Proper_noun",
                            "lemma": "Hussein",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "Obama",
                            "importance": 0.9997590780258179,
                            "tag": "Proper_noun",
                            "lemma": "Obama",
                            "others": {
                              "number": "SINGULAR",
                              "proper_name": "PROPER"
                            }
                          },
                          {
                            "word": "is",
                            "importance": 0.998971164226532,
                            "tag": "Verb",
                            "lemma": "be",
                            "others": {
                              "mood": "INDICATIVE",
                              "number": "SINGULAR",
                              "person": "THIRD",
                              "tense": "PRESENT"
                            }
                          },
                          {
                            "word": "an",
                            "importance": 0.9999935626983643,
                            "tag": "Determiner",
                            "lemma": "a",
                            "others": {}
                          },
                          {
                            "word": "American",
                            "importance": 0.9837486743927002,
                            "tag": "Adjactive",
                            "lemma": "American",
                            "others": {}
                          },
                          {
                            "word": "politician",
                            "importance": 0.9999579191207886,
                            "tag": "Noun",
                            "lemma": "politician",
                            "others": {
                              "number": "SINGULAR"
                            }
                          },
                          {
                            "word": "who",
                            "importance": 1.0,
                            "tag": "Pronoun",
                            "lemma": "who",
                            "others": {
                              "person": "THIRD"
                            }
                          },
                          {
                            "word": "served",
                            "importance": 0.9998955726623535,
                            "tag": "Verb",
                            "lemma": "serve",
                            "others": {
                              "mood": "INDICATIVE",
                              "tense": "PAST"
                            }
                          },
                          {
                            "word": "as",
                            "importance": 0.9925481081008911,
                            "tag": "Adposition",
                            "lemma": "as",
                            "others": {}
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/text/topic_extraction": {
      "post": {
        "operationId": "text_text_topic_extraction_create",
        "description": "<details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>\n\n\n\n|Provider|Version|Price|Billing unit|\n|----|-------|-----|------------|\n|**google**|`v1`|2.0 (per 1000000 char)|1000 char\n|**ibm**|`v1 (2021-08-01)`|0.3 (per 1000000 char)|10000 char\n|**openai**|`v1`|20.0 (per 1000000 token)|1 token\n|**tenstorrent**|`v1.0.0`|2.0 (per 1000000 char)|1000 char\n\n\n</details>\n\n<details><summary>Supported Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Arabic**|`ar`|\n|**Chinese**|`zh`|\n|**Dutch**|`nl`|\n|**English**|`en`|\n|**French**|`fr`|\n|**German**|`de`|\n|**Italian**|`it`|\n|**Japanese**|`ja`|\n|**Korean**|`ko`|\n|**Portuguese**|`pt`|\n|**Russian**|`ru`|\n|**Spanish**|`es`|\n\n</details><details><summary>Supported Detailed Languages</summary>\n\n\n\n\n\n|Name|Value|\n|----|-----|\n|**Auto detection**|`auto-detect`|\n\n</details>",
        "summary": "Topic Extraction",
        "tags": [
          "Topic Extraction"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest"
              },
              "examples": {
                "RequestExample": {
                  "value": {
                    "providers": "tenstorrent,google,ibm,openai",
                    "language": "en",
                    "text": "That actor on TV makes movies in Hollywood and also stars in a variety of popular new TV shows."
                  },
                  "summary": "Request Example"
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/texttopic_extractionResponseModel"
                },
                "examples": {
                  "ResponseExample": {
                    "value": {
                      "tenstorrent": {
                        "items": [
                          {
                            "category": "Film Tv & Video",
                            "importance": 0.99
                          },
                          {
                            "category": "Celebrity & Pop Culture",
                            "importance": 0.79
                          }
                        ]
                      },
                      "google": {
                        "items": [
                          {
                            "category": "/Arts & Entertainment/Tv & Video/Tv Shows & Programs",
                            "importance": 0.52
                          }
                        ]
                      },
                      "ibm": {
                        "items": [
                          {
                            "category": "/Art And Entertainment/Movies And Tv",
                            "importance": 1.0
                          },
                          {
                            "category": "/Art And Entertainment/Movies And Tv/Movies",
                            "importance": 1.0
                          },
                          {
                            "category": "/Art And Entertainment/Movies And Tv/Television",
                            "importance": 1.0
                          }
                        ]
                      },
                      "openai": {
                        "items": [
                          {
                            "category": "Entertainment",
                            "importance": 0.9
                          },
                          {
                            "category": "Film Industry",
                            "importance": 0.8
                          },
                          {
                            "category": "Television",
                            "importance": 0.7
                          }
                        ]
                      },
                      "eden-ai": {
                        "status": "success",
                        "items": [
                          {
                            "category": "/Art And Entertainment/Movies And Tv/Television",
                            "importance": 1.0
                          },
                          {
                            "category": "/Art And Entertainment/Movies And Tv/Movies",
                            "importance": 1.0
                          },
                          {
                            "category": "Celebrity & Pop Culture",
                            "importance": 0.79
                          },
                          {
                            "category": "Film Tv & Video",
                            "importance": 0.99
                          },
                          {
                            "category": "Film Industry",
                            "importance": 0.8
                          }
                        ]
                      }
                    },
                    "summary": "Response Example"
                  }
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            },
            "description": ""
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.edenai.run/v2"
    }
  ],
  "components": {
    "schemas": {
      "AIProject": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project_name": {
            "type": "string",
            "maxLength": 100
          },
          "project_type": {
            "$ref": "#/components/schemas/AIProjectProjectTypeEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "created_at",
          "project_id",
          "project_name",
          "project_type",
          "user"
        ]
      },
      "AIProjectProjectTypeEnum": {
        "enum": [
          "AskYoDa",
          "Translathor",
          "X-Merge"
        ],
        "type": "string",
        "description": "* `AskYoDa` - Askyoda\n* `Translathor` - Translathor\n* `X-Merge` - X Merge"
      },
      "AddFileRequest": {
        "type": "object",
        "properties": {
          "data_type": {
            "$ref": "#/components/schemas/DataTypeEnum"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Add to your project files",
            "pattern": "(?:pdf|csv|amr|flac|wav|ogg|mp3|mp4|webm)$"
          },
          "metadata": {
            "type": "string",
            "minLength": 1,
            "description": "Optional parameter: Attach metadata to the uploaded file data in your database. Provide a stringified JSON with key-value pairs. Useful in `filter_document` when querying the language model, it allows you to filter data with your Chatbot by considering only documents that have the specified metadata."
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "default": "",
            "description": "Select a provider to use, only for audio (speech-to-text) & pdf (ocr-async) files."
          }
        },
        "required": [
          "data_type"
        ]
      },
      "AddTextRequest": {
        "type": "object",
        "properties": {
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "LLM Query"
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "default": []
          }
        },
        "required": [
          "texts"
        ]
      },
      "AddUrlRequest": {
        "type": "object",
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "Add multiple urls into the database, it loads all the text from HTML webpages into a document format."
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "default": []
          }
        },
        "required": [
          "urls"
        ]
      },
      "AiDetectionItem": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "prediction": {
            "title": "Prediction",
            "type": "string"
          },
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "ai_score_detail": {
            "title": "Ai Score Detail",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "prediction",
          "ai_score",
          "ai_score_detail"
        ],
        "title": "AiDetectionItem",
        "type": "object"
      },
      "AnonymizationAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          }
        },
        "required": [
          "providers"
        ]
      },
      "AnonymizationBoundingBox": {
        "properties": {
          "x_min": {
            "title": "X Min",
            "type": "integer"
          },
          "x_max": {
            "title": "X Max",
            "type": "integer"
          },
          "y_min": {
            "title": "Y Min",
            "type": "integer"
          },
          "y_max": {
            "title": "Y Max",
            "type": "integer"
          }
        },
        "required": [
          "x_min",
          "x_max",
          "y_min",
          "y_max"
        ],
        "title": "AnonymizationBoundingBox",
        "type": "object"
      },
      "AnonymizationEntity": {
        "description": "This model represents an entity extracted from the text.\n\n    Attributes:\n        offset (int): The offset of the entity in the text.\n        length (int): The lenght of the entity in the text.\n        category (CategoryType): The category of the entity.\n        subcategory (SubCategoryType): The subcategory of the entity.\n        original_label (str): The original label of the entity.\n        content (str): The content of the entity.\n    ",
        "properties": {
          "offset": {
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          },
          "length": {
            "exclusiveMinimum": true,
            "title": "Length",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "subcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FinancialInformationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/PersonalInformationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/IdentificationNumbersSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/MiscellaneousSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OrganizationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/DateAndTimeSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/LocationInformationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OtherSubCategoryType"
              }
            ],
            "title": "Subcategory"
          },
          "original_label": {
            "minLength": 1,
            "title": "Original Label",
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "title": "Content",
            "type": "string"
          },
          "confidence_score": {
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Score",
            "type": "integer"
          }
        },
        "required": [
          "offset",
          "length",
          "category",
          "subcategory",
          "original_label",
          "content",
          "confidence_score"
        ],
        "title": "AnonymizationEntity",
        "type": "object"
      },
      "AnonymizationItem": {
        "properties": {
          "kind": {
            "title": "Kind",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_boxes": {
            "$ref": "#/components/schemas/AnonymizationBoundingBox"
          }
        },
        "required": [
          "kind",
          "confidence",
          "bounding_boxes"
        ],
        "title": "AnonymizationItem",
        "type": "object"
      },
      "AskLLMRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "minLength": 1,
            "description": "Enter your question or query about the data. The large language model (LLM) will provide a response."
          },
          "llm_provider": {
            "type": "string",
            "minLength": 1,
            "default": "openai",
            "description": "Select a provider for the large language model for processing. Leave empty for default."
          },
          "llm_model": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the model to use for language processing. Leave empty for default."
          },
          "k": {
            "type": "integer",
            "minimum": 1,
            "default": 3,
            "description": "How many results chunk you want to return"
          },
          "history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {},
              "description": "A dictionary representing a single conversation in the previous history. Must contain 'user' and 'assistant' fields."
            },
            "default": [],
            "description": "A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'user' and 'assistant'."
          },
          "personality": {
            "type": "object",
            "additionalProperties": {},
            "default": {},
            "description": "A dictionary representing the personality of the bot. Must contain 'personality','company_name', 'name', 'job_title' and 'language'"
          },
          "filter_documents": {
            "type": "object",
            "additionalProperties": {},
            "default": {},
            "description": "Filter uploaded documents based on their metadata. Specify key-value pairs where the key represents the metadata field and the value is the desired metadata value. Please ensure that the provided metadata keys are available in your database."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 2,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 16385,
            "minimum": 1,
            "default": 100,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "query"
        ]
      },
      "AskYourDataProjectRequest": {
        "type": "object",
        "properties": {
          "credential": {
            "type": "string",
            "nullable": true,
            "description": "The credential resource name",
            "maxLength": 255
          },
          "asset": {
            "type": "string",
            "nullable": true,
            "description": "The asset sub_resource name",
            "maxLength": 255
          },
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "Project name"
          },
          "collection_name": {
            "type": "string",
            "minLength": 1,
            "description": "Database Collection Name"
          },
          "db_provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DbProviderEnum"
              }
            ],
            "default": "qdrant",
            "description": "Database Provider\n\n* `qdrant` - qdrant\n* `supabase` - supabase"
          },
          "embeddings_provider": {
            "type": "string",
            "minLength": 1,
            "default": "cohere",
            "description": "Select an embedding provider to use in your search database. Leave empty for default."
          },
          "llm_provider": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default LLM provider to use in your project."
          },
          "llm_model": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default Model for LLM provider to use in your project"
          }
        },
        "required": [
          "collection_name",
          "project_name"
        ]
      },
      "AssetCreate": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetCreateRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetList": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "string",
            "format": "byte",
            "readOnly": true
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetListRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "required": [
          "sub_resource"
        ]
      },
      "AssetUpdate": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetUpdateRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AsyncJobList": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string"
          },
          "nb": {
            "type": "integer"
          },
          "nb_ok": {
            "type": "integer"
          },
          "public_id": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "nb",
          "nb_ok",
          "providers",
          "public_id",
          "state"
        ]
      },
      "AsyncOcrRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          }
        },
        "required": [
          "providers"
        ]
      },
      "AsyncVideoAnalysisRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:mov|mp4|avi)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "AutomlClassificationListProjectsResponse": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/AutomlClassificationProject"
            },
            "title": "Projects",
            "type": "array"
          }
        },
        "required": [
          "projects"
        ],
        "title": "AutomlClassificationListProjectsResponse",
        "type": "object"
      },
      "AutomlClassificationPredictRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "project_id",
          "providers"
        ]
      },
      "AutomlClassificationProject": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "title": "Project Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "provider": {
            "title": "Provider",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "name",
          "provider"
        ],
        "title": "AutomlClassificationProject",
        "type": "object"
      },
      "AutomlClassificationTrainRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          }
        },
        "required": [
          "project_id",
          "providers"
        ]
      },
      "AutomlClassificationUploadDataRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          },
          "label": {
            "type": "string",
            "minLength": 1,
            "description": "Label of the image",
            "maxLength": 200
          },
          "type_of_data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeOfDataEnum"
              }
            ],
            "description": "Type of data : TRAINING or TEST\n\n* `TRAINING` - TRAINING\n* `TEST` - TEST"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "label",
          "project_id",
          "providers",
          "type_of_data"
        ]
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/NestedBadRequest"
          }
        },
        "required": [
          "error"
        ]
      },
      "BankInvoice": {
        "properties": {
          "account_number": {
            "title": "Account Number",
            "type": "string"
          },
          "iban": {
            "title": "Iban",
            "type": "string"
          },
          "bsb": {
            "title": "Bsb",
            "type": "string"
          },
          "sort_code": {
            "title": "Sort Code",
            "type": "string"
          },
          "vat_number": {
            "title": "Vat Number",
            "type": "string"
          },
          "rooting_number": {
            "title": "Rooting Number",
            "type": "string"
          },
          "swift": {
            "title": "Swift",
            "type": "string"
          }
        },
        "required": [
          "account_number",
          "iban",
          "bsb",
          "sort_code",
          "vat_number",
          "rooting_number",
          "swift"
        ],
        "title": "BankInvoice",
        "type": "object"
      },
      "BarCode": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "value",
          "type"
        ],
        "title": "BarCode",
        "type": "object"
      },
      "BatchLaunchFailedRequest": {
        "properties": {
          "name": {
            "description": "Request name, if any were given",
            "title": "Name",
            "type": "string"
          },
          "public_id": {
            "description": "Request ID",
            "title": "Public Id",
            "type": "integer"
          },
          "body": {
            "description": "Parameters passed to the request",
            "title": "Body",
            "type": "object"
          },
          "errors": {
            "description": "Error received from the request validator",
            "title": "Errors",
            "type": "object"
          }
        },
        "required": [
          "name",
          "public_id",
          "body",
          "errors"
        ],
        "title": "BatchLaunchFailedRequest",
        "type": "object"
      },
      "BatchLaunchResponse": {
        "properties": {
          "job_id": {
            "description": "Job ID/name",
            "title": "Job Id",
            "type": "string"
          },
          "nb_launched": {
            "description": "Number of successfully launched requests",
            "title": "Nb Launched",
            "type": "integer"
          },
          "nb_failed": {
            "description": "Number of failed_requests",
            "title": "Nb Failed",
            "type": "integer"
          },
          "total": {
            "description": "Total number of requests sent",
            "title": "Total",
            "type": "integer"
          },
          "failed_requests": {
            "description": "if any requests failed, they will be shown in this list",
            "items": {
              "$ref": "#/components/schemas/BatchLaunchFailedRequest"
            },
            "title": "Failed Requests",
            "type": "array"
          }
        },
        "required": [
          "job_id",
          "nb_launched",
          "nb_failed",
          "total",
          "failed_requests"
        ],
        "title": "BatchLaunchResponse",
        "type": "object"
      },
      "BatchList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 1023
          },
          "status": {
            "$ref": "#/components/schemas/StatusE80Enum"
          },
          "feature": {
            "type": "string",
            "readOnly": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "total_requests": {
            "type": "integer",
            "readOnly": true
          },
          "nb_processing": {
            "type": "integer",
            "readOnly": true
          },
          "nb_succeeded": {
            "type": "integer",
            "readOnly": true
          },
          "nb_failed": {
            "type": "integer",
            "readOnly": true
          },
          "get_response_url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "feature",
          "get_response_url",
          "nb_failed",
          "nb_processing",
          "nb_succeeded",
          "subfeature",
          "total_requests"
        ]
      },
      "BatchRequest": {
        "type": "object",
        "properties": {
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1
          },
          "requests": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          }
        },
        "required": [
          "requests"
        ]
      },
      "BatchResponseRequest": {
        "type": "object",
        "properties": {
          "public_id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/StatusE80Enum"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 1023
          },
          "errors": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "response": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "public_id"
        ]
      },
      "BlankEnum": {
        "enum": [
          ""
        ]
      },
      "BoundingBox": {
        "description": "Bounding box of a word in the image\n\n    Attributes:\n        left (float): Left coordinate of the bounding box\n        top (float): Top coordinate of the bounding box\n        width (float): Width of the bounding box\n        height (float): Height of the bounding box\n        text (str): Text detected in the bounding box\n\n    Constructor:\n        from_json (classmethod): Create a new instance of BoundingBox from a JSON object\n        from_normalized_vertices (classmethod): Create a new instance of BoundingBox from normalized vertices\n        unknown (classmethod): Return a invalid bouding_box with all field filled with `-1`\n    ",
        "properties": {
          "left": {
            "description": "Left coordinate of the bounding box",
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "description": "Top coordinate of the bounding box",
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "description": "Width of the bounding box",
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "description": "Height of the bounding box",
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "BoundingBox",
        "type": "object"
      },
      "Bounding_box": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "Bounding_box",
        "type": "object"
      },
      "BoundixBoxOCRTable": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "BoundixBoxOCRTable",
        "type": "object"
      },
      "CategoryType": {
        "description": "This enum are used to categorize the explicit content extracted from the text",
        "enum": [
          "Toxic",
          "Content",
          "Sexual",
          "Violence",
          "DrugAndAlcohol",
          "Finance",
          "HateAndExtremism",
          "Safe",
          "Other"
        ],
        "title": "CategoryType",
        "type": "string"
      },
      "Cell": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "row_span": {
            "title": "Row Span",
            "type": "integer"
          },
          "col_span": {
            "title": "Col Span",
            "type": "integer"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/BoundixBoxOCRTable"
          },
          "is_header": {
            "default": false,
            "title": "Is Header",
            "type": "boolean"
          }
        },
        "required": [
          "text",
          "row_index",
          "col_index",
          "row_span",
          "col_span",
          "confidence",
          "bounding_box"
        ],
        "title": "Cell",
        "type": "object"
      },
      "ChatMessageDataClass": {
        "properties": {
          "role": {
            "title": "Role",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "role",
          "message"
        ],
        "title": "ChatMessageDataClass",
        "type": "object"
      },
      "ContentNSFW": {
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "confidence",
          "category"
        ],
        "title": "ContentNSFW",
        "type": "object"
      },
      "ContentSubCategoryType": {
        "enum": [
          "MiddleFinger",
          "PublicSafety",
          "Health",
          "Explicit",
          "QRCode",
          "Medical",
          "Politics",
          "Legal"
        ],
        "title": "ContentSubCategoryType",
        "type": "string"
      },
      "Country": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "alpha2": {
            "title": "Alpha2",
            "type": "string"
          },
          "alpha3": {
            "title": "Alpha3",
            "type": "string"
          },
          "confidence": {
            "default": null,
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "alpha2",
          "alpha3"
        ],
        "title": "Country",
        "type": "object"
      },
      "CustomDocumentParsingAsyncBoundingBox": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "CustomDocumentParsingAsyncBoundingBox",
        "type": "object"
      },
      "CustomDocumentParsingAsyncItem": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "value": {
            "title": "Value",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "string"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/CustomDocumentParsingAsyncBoundingBox"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          }
        },
        "required": [
          "confidence",
          "value",
          "query",
          "bounding_box",
          "page"
        ],
        "title": "CustomDocumentParsingAsyncItem",
        "type": "object"
      },
      "CustomDocumentParsingAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "queries": {
            "type": "string",
            "minLength": 1,
            "description": "Your queries need to be a list of dict containing the questions you want answered and the page to look for the information in :  '[{'query':'your query','pages':'your pages'},{'query':'your query','pages':'your pages'}]'"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers",
          "queries"
        ]
      },
      "CustomerInformation": {
        "properties": {
          "customer_name": {
            "default": null,
            "title": "Customer Name",
            "type": "string"
          }
        },
        "title": "CustomerInformation",
        "type": "object"
      },
      "CustomerInformationInvoice": {
        "properties": {
          "customer_name": {
            "title": "Customer Name",
            "type": "string"
          },
          "customer_address": {
            "title": "Customer Address",
            "type": "string"
          },
          "customer_email": {
            "title": "Customer Email",
            "type": "string"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "string"
          },
          "customer_tax_id": {
            "title": "Customer Tax Id",
            "type": "string"
          },
          "customer_mailing_address": {
            "title": "Customer Mailing Address",
            "type": "string"
          },
          "customer_billing_address": {
            "title": "Customer Billing Address",
            "type": "string"
          },
          "customer_shipping_address": {
            "title": "Customer Shipping Address",
            "type": "string"
          },
          "customer_service_address": {
            "title": "Customer Service Address",
            "type": "string"
          },
          "customer_remittance_address": {
            "title": "Customer Remittance Address",
            "type": "string"
          },
          "abn_number": {
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "title": "Gst Number",
            "type": "string"
          },
          "pan_number": {
            "title": "Pan Number",
            "type": "string"
          },
          "vat_number": {
            "title": "Vat Number",
            "type": "string"
          },
          "siret_number": {
            "default": null,
            "title": "Siret Number",
            "type": "string"
          },
          "siren_number": {
            "default": null,
            "title": "Siren Number",
            "type": "string"
          }
        },
        "required": [
          "customer_name",
          "customer_address",
          "customer_email",
          "customer_id",
          "customer_tax_id",
          "customer_mailing_address",
          "customer_billing_address",
          "customer_shipping_address",
          "customer_service_address",
          "customer_remittance_address",
          "abn_number",
          "gst_number",
          "pan_number",
          "vat_number"
        ],
        "title": "CustomerInformationInvoice",
        "type": "object"
      },
      "DataTypeEnum": {
        "enum": [
          "pdf",
          "audio",
          "csv"
        ],
        "type": "string",
        "description": "* `pdf` - pdf\n* `audio` - audio\n* `csv` - csv"
      },
      "DateAndTimeSubCategoryType": {
        "enum": [
          "Date",
          "Time",
          "DateTime",
          "Duration"
        ],
        "title": "DateAndTimeSubCategoryType",
        "type": "string"
      },
      "DbProviderEnum": {
        "enum": [
          "qdrant",
          "supabase"
        ],
        "type": "string",
        "description": "* `qdrant` - qdrant\n* `supabase` - supabase"
      },
      "DetailTypeEnum": {
        "enum": [
          "resolution",
          "document_type"
        ],
        "type": "string",
        "description": "* `resolution` - Resolution\n* `document_type` - Document Type"
      },
      "DocParserCallParametersRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          }
        }
      },
      "DocParserCreate": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "description": "The project name",
            "maxLength": 200
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "maxLength": 30
          }
        },
        "required": [
          "project_name",
          "subfeature"
        ]
      },
      "DocParserCreateRequest": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "The project name",
            "maxLength": 200
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          }
        },
        "required": [
          "project_name",
          "subfeature"
        ]
      },
      "DocParserList": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "description": "The project name",
            "maxLength": 200
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "project_id",
          "project_name",
          "subfeature"
        ]
      },
      "DocParserUpdate": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "readOnly": true,
            "description": "The project name"
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "project_name",
          "subfeature"
        ]
      },
      "DocumentTypeEnum": {
        "enum": [
          "auto-detect",
          "invoice",
          "receipt"
        ],
        "type": "string",
        "description": "* `auto-detect` - auto-detect\n* `invoice` - invoice\n* `receipt` - receipt"
      },
      "DrugAndAlcoholSubCategoryType": {
        "enum": [
          "DrugProducts",
          "DrugUse",
          "Tobacco",
          "Smoking",
          "Alcohol",
          "Drinking"
        ],
        "title": "DrugAndAlcoholSubCategoryType",
        "type": "string"
      },
      "EmbeddingDataClass": {
        "properties": {
          "embedding": {
            "items": {
              "type": "integer"
            },
            "title": "Embedding",
            "type": "array"
          }
        },
        "required": [
          "embedding"
        ],
        "title": "EmbeddingDataClass",
        "type": "object"
      },
      "EmotionItem": {
        "description": "This class is used in EmotionAnalysisDataClass to list emotion analysed.\n    Args:\n        - emotion (EmotionEnum): emotion of the text\n        - emotion_score (float): score of the emotion\n    ",
        "properties": {
          "emotion": {
            "title": "Emotion",
            "type": "string"
          },
          "emotion_score": {
            "maximum": 100,
            "minimum": 0,
            "title": "Emotion Score",
            "type": "integer"
          }
        },
        "required": [
          "emotion",
          "emotion_score"
        ],
        "title": "EmotionItem",
        "type": "object"
      },
      "Entity": {
        "properties": {
          "type": {
            "description": "Recognized Entity type",
            "title": "Type",
            "type": "string"
          },
          "text": {
            "description": "Text corresponding to the entity",
            "title": "Text",
            "type": "string"
          },
          "sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntitySentimentEnum"
              }
            ],
            "title": "Sentiment"
          },
          "begin_offset": {
            "default": null,
            "title": "Begin Offset",
            "type": "integer"
          },
          "end_offset": {
            "default": null,
            "title": "End Offset",
            "type": "integer"
          }
        },
        "required": [
          "type",
          "text",
          "sentiment"
        ],
        "title": "Entity",
        "type": "object"
      },
      "EntitySentimentEnum": {
        "enum": [
          "Positive",
          "Negative",
          "Neutral",
          "Mixed"
        ],
        "type": "string"
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/NestedError"
          }
        },
        "required": [
          "error"
        ]
      },
      "Execution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "content",
          "created_at",
          "id",
          "updated_at"
        ]
      },
      "ExecutionRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "content"
        ]
      },
      "ExplicitItem": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "likelihood": {
            "title": "Likelihood",
            "type": "integer"
          },
          "likelihood_score": {
            "title": "Likelihood Score",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "subcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToxicSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ContentSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SexualSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ViolenceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/DrugAndAlcoholSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/FinanceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/HateAndExtremismSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SafeSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OtherSubCategoryType"
              }
            ],
            "title": "Subcategory"
          }
        },
        "required": [
          "label",
          "likelihood",
          "likelihood_score",
          "category",
          "subcategory"
        ],
        "title": "ExplicitItem",
        "type": "object"
      },
      "ExtractedTopic": {
        "properties": {
          "category": {
            "title": "Category",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          }
        },
        "required": [
          "category",
          "importance"
        ],
        "title": "ExtractedTopic",
        "type": "object"
      },
      "FaceAccessories": {
        "properties": {
          "sunglasses": {
            "title": "Sunglasses",
            "type": "integer"
          },
          "reading_glasses": {
            "title": "Reading Glasses",
            "type": "integer"
          },
          "swimming_goggles": {
            "title": "Swimming Goggles",
            "type": "integer"
          },
          "face_mask": {
            "title": "Face Mask",
            "type": "integer"
          },
          "eyeglasses": {
            "title": "Eyeglasses",
            "type": "integer"
          },
          "headwear": {
            "title": "Headwear",
            "type": "integer"
          }
        },
        "required": [
          "sunglasses",
          "reading_glasses",
          "swimming_goggles",
          "face_mask",
          "eyeglasses",
          "headwear"
        ],
        "title": "FaceAccessories",
        "type": "object"
      },
      "FaceAttributes": {
        "properties": {
          "headwear": {
            "title": "Headwear",
            "type": "integer"
          },
          "frontal_gaze": {
            "title": "Frontal Gaze",
            "type": "integer"
          },
          "eyes_visible": {
            "title": "Eyes Visible",
            "type": "integer"
          },
          "glasses": {
            "title": "Glasses",
            "type": "integer"
          },
          "mouth_open": {
            "title": "Mouth Open",
            "type": "integer"
          },
          "smiling": {
            "title": "Smiling",
            "type": "integer"
          },
          "brightness": {
            "title": "Brightness",
            "type": "integer"
          },
          "sharpness": {
            "title": "Sharpness",
            "type": "integer"
          },
          "pose": {
            "$ref": "#/components/schemas/VideoFacePoses"
          }
        },
        "required": [
          "headwear",
          "frontal_gaze",
          "eyes_visible",
          "glasses",
          "mouth_open",
          "smiling",
          "brightness",
          "sharpness",
          "pose"
        ],
        "title": "FaceAttributes",
        "type": "object"
      },
      "FaceBoundingBox": {
        "properties": {
          "x_min": {
            "title": "X Min",
            "type": "integer"
          },
          "x_max": {
            "title": "X Max",
            "type": "integer"
          },
          "y_min": {
            "title": "Y Min",
            "type": "integer"
          },
          "y_max": {
            "title": "Y Max",
            "type": "integer"
          }
        },
        "required": [
          "x_min",
          "x_max",
          "y_min",
          "y_max"
        ],
        "title": "FaceBoundingBox",
        "type": "object"
      },
      "FaceCompareBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "FaceCompareBoundingBox",
        "type": "object"
      },
      "FaceEmotions": {
        "properties": {
          "joy": {
            "title": "Joy",
            "type": "integer"
          },
          "sorrow": {
            "title": "Sorrow",
            "type": "integer"
          },
          "anger": {
            "title": "Anger",
            "type": "integer"
          },
          "surprise": {
            "title": "Surprise",
            "type": "integer"
          },
          "disgust": {
            "title": "Disgust",
            "type": "integer"
          },
          "fear": {
            "title": "Fear",
            "type": "integer"
          },
          "confusion": {
            "title": "Confusion",
            "type": "integer"
          },
          "calm": {
            "title": "Calm",
            "type": "integer"
          },
          "unknown": {
            "title": "Unknown",
            "type": "integer"
          },
          "neutral": {
            "title": "Neutral",
            "type": "integer"
          },
          "contempt": {
            "title": "Contempt",
            "type": "integer"
          }
        },
        "required": [
          "joy",
          "sorrow",
          "anger",
          "surprise",
          "disgust",
          "fear",
          "confusion",
          "calm",
          "unknown",
          "neutral",
          "contempt"
        ],
        "title": "FaceEmotions",
        "type": "object"
      },
      "FaceFacialHair": {
        "properties": {
          "moustache": {
            "title": "Moustache",
            "type": "integer"
          },
          "beard": {
            "title": "Beard",
            "type": "integer"
          },
          "sideburns": {
            "title": "Sideburns",
            "type": "integer"
          }
        },
        "required": [
          "moustache",
          "beard",
          "sideburns"
        ],
        "title": "FaceFacialHair",
        "type": "object"
      },
      "FaceFeatures": {
        "properties": {
          "eyes_open": {
            "title": "Eyes Open",
            "type": "integer"
          },
          "smile": {
            "title": "Smile",
            "type": "integer"
          },
          "mouth_open": {
            "title": "Mouth Open",
            "type": "integer"
          }
        },
        "required": [
          "eyes_open",
          "smile",
          "mouth_open"
        ],
        "title": "FaceFeatures",
        "type": "object"
      },
      "FaceHair": {
        "properties": {
          "hair_color": {
            "items": {
              "$ref": "#/components/schemas/FaceHairColor"
            },
            "title": "Hair Color",
            "type": "array"
          },
          "bald": {
            "title": "Bald",
            "type": "integer"
          },
          "invisible": {
            "title": "Invisible",
            "type": "boolean"
          }
        },
        "required": [
          "bald",
          "invisible"
        ],
        "title": "FaceHair",
        "type": "object"
      },
      "FaceHairColor": {
        "properties": {
          "color": {
            "title": "Color",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "color",
          "confidence"
        ],
        "title": "FaceHairColor",
        "type": "object"
      },
      "FaceItem": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "landmarks": {
            "$ref": "#/components/schemas/FaceLandmarks"
          },
          "emotions": {
            "$ref": "#/components/schemas/FaceEmotions"
          },
          "poses": {
            "$ref": "#/components/schemas/FacePoses"
          },
          "age": {
            "title": "Age",
            "type": "integer"
          },
          "gender": {
            "title": "Gender",
            "type": "string"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/FaceBoundingBox"
          },
          "hair": {
            "$ref": "#/components/schemas/FaceHair"
          },
          "facial_hair": {
            "$ref": "#/components/schemas/FaceFacialHair"
          },
          "quality": {
            "$ref": "#/components/schemas/FaceQuality"
          },
          "makeup": {
            "$ref": "#/components/schemas/FaceMakeup"
          },
          "accessories": {
            "$ref": "#/components/schemas/FaceAccessories"
          },
          "occlusions": {
            "$ref": "#/components/schemas/FaceOcclusions"
          },
          "features": {
            "$ref": "#/components/schemas/FaceFeatures"
          }
        },
        "required": [
          "confidence",
          "landmarks",
          "emotions",
          "poses",
          "age",
          "gender",
          "bounding_box",
          "hair",
          "facial_hair",
          "quality",
          "makeup",
          "accessories",
          "occlusions",
          "features"
        ],
        "title": "FaceItem",
        "type": "object"
      },
      "FaceLandmarks": {
        "properties": {
          "left_eye": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye",
            "type": "array"
          },
          "left_eye_top": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Top",
            "type": "array"
          },
          "left_eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Right",
            "type": "array"
          },
          "left_eye_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Bottom",
            "type": "array"
          },
          "left_eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Left",
            "type": "array"
          },
          "right_eye": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye",
            "type": "array"
          },
          "right_eye_top": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Top",
            "type": "array"
          },
          "right_eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Right",
            "type": "array"
          },
          "right_eye_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Bottom",
            "type": "array"
          },
          "right_eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Left",
            "type": "array"
          },
          "left_eyebrow_left": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eyebrow Left",
            "type": "array"
          },
          "left_eyebrow_right": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eyebrow Right",
            "type": "array"
          },
          "left_eyebrow_top": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eyebrow Top",
            "type": "array"
          },
          "right_eyebrow_left": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eyebrow Left",
            "type": "array"
          },
          "right_eyebrow_right": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eyebrow Right",
            "type": "array"
          },
          "left_pupil": {
            "items": {
              "type": "integer"
            },
            "title": "Left Pupil",
            "type": "array"
          },
          "right_pupil": {
            "items": {
              "type": "integer"
            },
            "title": "Right Pupil",
            "type": "array"
          },
          "nose_tip": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Tip",
            "type": "array"
          },
          "nose_bottom_right": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Bottom Right",
            "type": "array"
          },
          "nose_bottom_left": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Bottom Left",
            "type": "array"
          },
          "mouth_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Left",
            "type": "array"
          },
          "mouth_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Right",
            "type": "array"
          },
          "right_eyebrow_top": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eyebrow Top",
            "type": "array"
          },
          "midpoint_between_eyes": {
            "items": {
              "type": "integer"
            },
            "title": "Midpoint Between Eyes",
            "type": "array"
          },
          "nose_bottom_center": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Bottom Center",
            "type": "array"
          },
          "nose_left_alar_out_tip": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Left Alar Out Tip",
            "type": "array"
          },
          "nose_left_alar_top": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Left Alar Top",
            "type": "array"
          },
          "nose_right_alar_out_tip": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Right Alar Out Tip",
            "type": "array"
          },
          "nose_right_alar_top": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Right Alar Top",
            "type": "array"
          },
          "nose_root_left": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Root Left",
            "type": "array"
          },
          "nose_root_right": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Root Right",
            "type": "array"
          },
          "upper_lip": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Lip",
            "type": "array"
          },
          "under_lip": {
            "items": {
              "type": "integer"
            },
            "title": "Under Lip",
            "type": "array"
          },
          "under_lip_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Under Lip Bottom",
            "type": "array"
          },
          "under_lip_top": {
            "items": {
              "type": "integer"
            },
            "title": "Under Lip Top",
            "type": "array"
          },
          "upper_lip_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Lip Bottom",
            "type": "array"
          },
          "upper_lip_top": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Lip Top",
            "type": "array"
          },
          "mouth_center": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Center",
            "type": "array"
          },
          "mouth_top": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Top",
            "type": "array"
          },
          "mouth_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Bottom",
            "type": "array"
          },
          "left_ear_tragion": {
            "items": {
              "type": "integer"
            },
            "title": "Left Ear Tragion",
            "type": "array"
          },
          "right_ear_tragion": {
            "items": {
              "type": "integer"
            },
            "title": "Right Ear Tragion",
            "type": "array"
          },
          "forehead_glabella": {
            "items": {
              "type": "integer"
            },
            "title": "Forehead Glabella",
            "type": "array"
          },
          "chin_gnathion": {
            "items": {
              "type": "integer"
            },
            "title": "Chin Gnathion",
            "type": "array"
          },
          "chin_left_gonion": {
            "items": {
              "type": "integer"
            },
            "title": "Chin Left Gonion",
            "type": "array"
          },
          "chin_right_gonion": {
            "items": {
              "type": "integer"
            },
            "title": "Chin Right Gonion",
            "type": "array"
          },
          "upper_jawline_left": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Jawline Left",
            "type": "array"
          },
          "mid_jawline_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mid Jawline Left",
            "type": "array"
          },
          "mid_jawline_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mid Jawline Right",
            "type": "array"
          },
          "upper_jawline_right": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Jawline Right",
            "type": "array"
          },
          "left_cheek_center": {
            "items": {
              "type": "integer"
            },
            "title": "Left Cheek Center",
            "type": "array"
          },
          "right_cheek_center": {
            "items": {
              "type": "integer"
            },
            "title": "Right Cheek Center",
            "type": "array"
          }
        },
        "title": "FaceLandmarks",
        "type": "object"
      },
      "FaceMakeup": {
        "properties": {
          "eye_make": {
            "title": "Eye Make",
            "type": "boolean"
          },
          "lip_make": {
            "title": "Lip Make",
            "type": "boolean"
          }
        },
        "required": [
          "eye_make",
          "lip_make"
        ],
        "title": "FaceMakeup",
        "type": "object"
      },
      "FaceMatch": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/FaceCompareBoundingBox"
          }
        },
        "required": [
          "confidence",
          "bounding_box"
        ],
        "title": "FaceMatch",
        "type": "object"
      },
      "FaceOcclusions": {
        "properties": {
          "eye_occluded": {
            "title": "Eye Occluded",
            "type": "boolean"
          },
          "forehead_occluded": {
            "title": "Forehead Occluded",
            "type": "boolean"
          },
          "mouth_occluded": {
            "title": "Mouth Occluded",
            "type": "boolean"
          }
        },
        "required": [
          "eye_occluded",
          "forehead_occluded",
          "mouth_occluded"
        ],
        "title": "FaceOcclusions",
        "type": "object"
      },
      "FacePoses": {
        "properties": {
          "pitch": {
            "title": "Pitch",
            "type": "integer"
          },
          "roll": {
            "title": "Roll",
            "type": "integer"
          },
          "yaw": {
            "title": "Yaw",
            "type": "integer"
          }
        },
        "required": [
          "pitch",
          "roll",
          "yaw"
        ],
        "title": "FacePoses",
        "type": "object"
      },
      "FaceQuality": {
        "properties": {
          "noise": {
            "title": "Noise",
            "type": "integer"
          },
          "exposure": {
            "title": "Exposure",
            "type": "integer"
          },
          "blur": {
            "title": "Blur",
            "type": "integer"
          },
          "brightness": {
            "title": "Brightness",
            "type": "integer"
          },
          "sharpness": {
            "title": "Sharpness",
            "type": "integer"
          }
        },
        "required": [
          "noise",
          "exposure",
          "blur",
          "brightness",
          "sharpness"
        ],
        "title": "FaceQuality",
        "type": "object"
      },
      "FallbackTypeEnum": {
        "enum": [
          "rerun",
          "continue"
        ],
        "type": "string",
        "description": "* `rerun` - Rerun\n* `continue` - Continue"
      },
      "Feature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "fullname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "FieldError": {
        "type": "object",
        "properties": {
          "<parameter_name>": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "<parameter_name>"
        ]
      },
      "FinalStatusEnum": {
        "enum": [
          "sucess",
          "fail"
        ],
        "type": "string"
      },
      "FinanceSubCategoryType": {
        "enum": [
          "Gambling",
          "Finance",
          "MoneyContent"
        ],
        "title": "FinanceSubCategoryType",
        "type": "string"
      },
      "FinancialBankInformation": {
        "properties": {
          "iban": {
            "default": null,
            "description": "International Bank Account Number.",
            "title": "Iban",
            "type": "string"
          },
          "swift": {
            "default": null,
            "description": "Society for Worldwide Interbank Financial Telecommunication code.",
            "title": "Swift",
            "type": "string"
          },
          "bsb": {
            "default": null,
            "description": "Bank State Branch code (Australia).",
            "title": "Bsb",
            "type": "string"
          },
          "sort_code": {
            "default": null,
            "description": "Sort code for UK banks.",
            "title": "Sort Code",
            "type": "string"
          },
          "account_number": {
            "default": null,
            "description": "Bank account number.",
            "title": "Account Number",
            "type": "string"
          },
          "routing_number": {
            "default": null,
            "description": "Routing number for banks in the United States.",
            "title": "Routing Number",
            "type": "string"
          },
          "bic": {
            "default": null,
            "description": "Bank Identifier Code.",
            "title": "Bic",
            "type": "string"
          }
        },
        "title": "FinancialBankInformation",
        "type": "object"
      },
      "FinancialBarcode": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "value",
          "type"
        ],
        "title": "FinancialBarcode",
        "type": "object"
      },
      "FinancialCustomerInformation": {
        "properties": {
          "name": {
            "default": null,
            "description": "The name of the invoiced customer.",
            "title": "Name",
            "type": "string"
          },
          "id_reference": {
            "default": null,
            "description": "Unique reference ID for the customer.",
            "title": "Id Reference",
            "type": "string"
          },
          "mailling_address": {
            "default": null,
            "description": "The mailing address of the customer.",
            "title": "Mailling Address",
            "type": "string"
          },
          "billing_address": {
            "default": null,
            "description": "The explicit billing address for the customer.",
            "title": "Billing Address",
            "type": "string"
          },
          "shipping_address": {
            "default": null,
            "description": "The shipping address for the customer.",
            "title": "Shipping Address",
            "type": "string"
          },
          "service_address": {
            "default": null,
            "description": "The service address associated with the customer.",
            "title": "Service Address",
            "type": "string"
          },
          "remittance_address": {
            "default": null,
            "description": "The address to which payments should be remitted.",
            "title": "Remittance Address",
            "type": "string"
          },
          "email": {
            "default": null,
            "description": "The email address of the customer.",
            "title": "Email",
            "type": "string"
          },
          "phone": {
            "default": null,
            "description": "The phone number associated with the customer.",
            "title": "Phone",
            "type": "string"
          },
          "vat_number": {
            "default": null,
            "description": "VAT (Value Added Tax) number of the customer.",
            "title": "Vat Number",
            "type": "string"
          },
          "abn_number": {
            "default": null,
            "description": "ABN (Australian Business Number) of the customer.",
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "default": null,
            "description": "GST (Goods and Services Tax) number of the customer.",
            "title": "Gst Number",
            "type": "string"
          },
          "pan_number": {
            "default": null,
            "description": "PAN (Permanent Account Number) of the customer.",
            "title": "Pan Number",
            "type": "string"
          },
          "business_number": {
            "default": null,
            "description": "Business registration number of the customer.",
            "title": "Business Number",
            "type": "string"
          },
          "siret_number": {
            "default": null,
            "description": "SIRET (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises et de leurs \u00c9tablissements) number of the customer.",
            "title": "Siret Number",
            "type": "string"
          },
          "siren_number": {
            "default": null,
            "description": "SIREN (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises) number of the customer.",
            "title": "Siren Number",
            "type": "string"
          },
          "customer_number": {
            "default": null,
            "description": "Customer identification number.",
            "title": "Customer Number",
            "type": "string"
          },
          "coc_number": {
            "default": null,
            "description": "Chamber of Commerce registration number.",
            "title": "Coc Number",
            "type": "string"
          },
          "fiscal_number": {
            "default": null,
            "description": "Fiscal identification number of the customer.",
            "title": "Fiscal Number",
            "type": "string"
          },
          "registration_number": {
            "default": null,
            "description": "Official registration number of the customer.",
            "title": "Registration Number",
            "type": "string"
          },
          "tax_id": {
            "default": null,
            "description": "Tax identification number of the customer.",
            "title": "Tax Id",
            "type": "string"
          },
          "website": {
            "default": null,
            "description": "The website associated with the customer.",
            "title": "Website",
            "type": "string"
          },
          "remit_to_name": {
            "default": null,
            "description": "The name associated with the customer's remittance address.",
            "title": "Remit To Name",
            "type": "string"
          },
          "city": {
            "default": null,
            "description": "The city associated with the customer's address.",
            "title": "City",
            "type": "string"
          },
          "country": {
            "default": null,
            "description": "The country associated with the customer's address.",
            "title": "Country",
            "type": "string"
          },
          "house_number": {
            "default": null,
            "description": "The house number associated with the customer's address.",
            "title": "House Number",
            "type": "string"
          },
          "province": {
            "default": null,
            "description": "The province associated with the customer's address.",
            "title": "Province",
            "type": "string"
          },
          "street_name": {
            "default": null,
            "description": "The street name associated with the customer's address.",
            "title": "Street Name",
            "type": "string"
          },
          "zip_code": {
            "default": null,
            "description": "The ZIP code associated with the customer's address.",
            "title": "Zip Code",
            "type": "string"
          },
          "municipality": {
            "default": null,
            "description": "The municipality associated with the customer's address.",
            "title": "Municipality",
            "type": "string"
          }
        },
        "title": "FinancialCustomerInformation",
        "type": "object"
      },
      "FinancialDocumentInformation": {
        "properties": {
          "invoice_receipt_id": {
            "default": null,
            "description": "Identifier for the invoice.",
            "title": "Invoice Receipt Id",
            "type": "string"
          },
          "purchase_order": {
            "default": null,
            "description": "Purchase order related to the document.",
            "title": "Purchase Order",
            "type": "string"
          },
          "invoice_date": {
            "default": null,
            "description": "Date of the invoice.",
            "title": "Invoice Date",
            "type": "string"
          },
          "time": {
            "default": null,
            "description": "Time associated with the document.",
            "title": "Time",
            "type": "string"
          },
          "invoice_due_date": {
            "default": null,
            "description": "Due date for the invoice.",
            "title": "Invoice Due Date",
            "type": "string"
          },
          "service_start_date": {
            "default": null,
            "description": "Start date of the service associated with the document.",
            "title": "Service Start Date",
            "type": "string"
          },
          "service_end_date": {
            "default": null,
            "description": "End date of the service associated with the document.",
            "title": "Service End Date",
            "type": "string"
          },
          "reference": {
            "default": null,
            "description": "Reference number associated with the document.",
            "title": "Reference",
            "type": "string"
          },
          "biller_code": {
            "default": null,
            "description": "Biller code associated with the document.",
            "title": "Biller Code",
            "type": "string"
          },
          "order_date": {
            "default": null,
            "description": "Date of the order associated with the document.",
            "title": "Order Date",
            "type": "string"
          },
          "tracking_number": {
            "default": null,
            "description": "Tracking number associated with the document.",
            "title": "Tracking Number",
            "type": "string"
          },
          "barcodes": {
            "description": "List of barcodes associated with the document.",
            "items": {
              "$ref": "#/components/schemas/FinancialBarcode"
            },
            "title": "Barcodes",
            "type": "array"
          }
        },
        "title": "FinancialDocumentInformation",
        "type": "object"
      },
      "FinancialDocumentMetadata": {
        "properties": {
          "document_index": {
            "default": null,
            "description": "Index of the detected document.",
            "title": "Document Index",
            "type": "integer"
          },
          "document_page_number": {
            "default": null,
            "description": "Page number within the document.",
            "title": "Document Page Number",
            "type": "integer"
          },
          "document_type": {
            "default": null,
            "description": "Type or category of the document.",
            "title": "Document Type",
            "type": "string"
          }
        },
        "title": "FinancialDocumentMetadata",
        "type": "object"
      },
      "FinancialInformationSubCategoryType": {
        "enum": [
          "CreditCard",
          "CardExpiry",
          "BankAccountNumber",
          "BankRoutingNumber",
          "SwiftCode",
          "TaxIdentificationNumber"
        ],
        "title": "FinancialInformationSubCategoryType",
        "type": "string"
      },
      "FinancialLineItem": {
        "properties": {
          "tax": {
            "default": null,
            "description": "Tax amount for the line item.",
            "title": "Tax",
            "type": "integer"
          },
          "amount_line": {
            "default": null,
            "description": "Total amount for the line item.",
            "title": "Amount Line",
            "type": "integer"
          },
          "description": {
            "default": null,
            "description": "Description of the line item.",
            "title": "Description",
            "type": "string"
          },
          "quantity": {
            "default": null,
            "description": "Quantity of units for the line item.",
            "title": "Quantity",
            "type": "integer"
          },
          "unit_price": {
            "default": null,
            "description": "Unit price for each unit in the line item.",
            "title": "Unit Price",
            "type": "integer"
          },
          "unit_type": {
            "default": null,
            "description": "Type of unit (e.g., hours, items).",
            "title": "Unit Type",
            "type": "string"
          },
          "date": {
            "default": null,
            "description": "Date associated with the line item.",
            "title": "Date",
            "type": "string"
          },
          "product_code": {
            "default": null,
            "description": "Product code or identifier for the line item.",
            "title": "Product Code",
            "type": "string"
          },
          "purchase_order": {
            "default": null,
            "description": "Purchase order related to the line item.",
            "title": "Purchase Order",
            "type": "string"
          },
          "tax_rate": {
            "default": null,
            "description": "Tax rate applied to the line item.",
            "title": "Tax Rate",
            "type": "integer"
          },
          "base_total": {
            "default": null,
            "description": "Base total amount before any discounts or taxes.",
            "title": "Base Total",
            "type": "integer"
          },
          "sub_total": {
            "default": null,
            "description": "Subtotal amount for the line item.",
            "title": "Sub Total",
            "type": "integer"
          },
          "discount_amount": {
            "default": null,
            "description": "Amount of discount applied to the line item.",
            "title": "Discount Amount",
            "type": "integer"
          },
          "discount_rate": {
            "default": null,
            "description": "Rate of discount applied to the line item.",
            "title": "Discount Rate",
            "type": "integer"
          },
          "discount_code": {
            "default": null,
            "description": "Code associated with any discount applied to the line item.",
            "title": "Discount Code",
            "type": "string"
          },
          "order_number": {
            "default": null,
            "description": "Order number associated with the line item.",
            "title": "Order Number",
            "type": "string"
          },
          "title": {
            "default": null,
            "description": "Title or name of the line item.",
            "title": "Title",
            "type": "string"
          }
        },
        "title": "FinancialLineItem",
        "type": "object"
      },
      "FinancialLocalInformation": {
        "properties": {
          "currency": {
            "default": null,
            "description": "Currency used in financial transactions.",
            "title": "Currency",
            "type": "string"
          },
          "currency_code": {
            "default": null,
            "description": "Currency code (e.g., USD, EUR).",
            "title": "Currency Code",
            "type": "string"
          },
          "currency_exchange_rate": {
            "default": null,
            "description": "Exchange rate for the specified currency.",
            "title": "Currency Exchange Rate",
            "type": "string"
          },
          "country": {
            "default": null,
            "description": "Country associated with the local financial information.",
            "title": "Country",
            "type": "string"
          },
          "language": {
            "default": null,
            "description": "Language used in financial transactions.",
            "title": "Language",
            "type": "string"
          }
        },
        "title": "FinancialLocalInformation",
        "type": "object"
      },
      "FinancialMerchantInformation": {
        "properties": {
          "name": {
            "default": null,
            "description": "Name of the merchant.",
            "title": "Name",
            "type": "string"
          },
          "address": {
            "default": null,
            "description": "Address of the merchant.",
            "title": "Address",
            "type": "string"
          },
          "phone": {
            "default": null,
            "description": "Phone number of the merchant.",
            "title": "Phone",
            "type": "string"
          },
          "tax_id": {
            "default": null,
            "description": "Tax identification number of the merchant.",
            "title": "Tax Id",
            "type": "string"
          },
          "id_reference": {
            "default": null,
            "description": "Unique reference ID for the merchant.",
            "title": "Id Reference",
            "type": "string"
          },
          "vat_number": {
            "default": null,
            "description": "VAT (Value Added Tax) number of the merchant.",
            "title": "Vat Number",
            "type": "string"
          },
          "abn_number": {
            "default": null,
            "description": "ABN (Australian Business Number) of the merchant.",
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "default": null,
            "description": "GST (Goods and Services Tax) number of the merchant.",
            "title": "Gst Number",
            "type": "string"
          },
          "business_number": {
            "default": null,
            "description": "Business registration number of the merchant.",
            "title": "Business Number",
            "type": "string"
          },
          "siret_number": {
            "default": null,
            "description": "SIRET (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises et de leurs \u00c9tablissements) number of the merchant.",
            "title": "Siret Number",
            "type": "string"
          },
          "siren_number": {
            "default": null,
            "description": "SIREN (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises) number of the merchant.",
            "title": "Siren Number",
            "type": "string"
          },
          "pan_number": {
            "default": null,
            "description": "PAN (Permanent Account Number) of the merchant.",
            "title": "Pan Number",
            "type": "string"
          },
          "coc_number": {
            "default": null,
            "description": "Chamber of Commerce registration number of the merchant.",
            "title": "Coc Number",
            "type": "string"
          },
          "fiscal_number": {
            "default": null,
            "description": "Fiscal identification number of the merchant.",
            "title": "Fiscal Number",
            "type": "string"
          },
          "email": {
            "default": null,
            "description": "Email address of the merchant.",
            "title": "Email",
            "type": "string"
          },
          "fax": {
            "default": null,
            "description": "Fax number of the merchant.",
            "title": "Fax",
            "type": "string"
          },
          "website": {
            "default": null,
            "description": "Website of the merchant.",
            "title": "Website",
            "type": "string"
          },
          "registration": {
            "default": null,
            "description": "Official registration information of the merchant.",
            "title": "Registration",
            "type": "string"
          },
          "city": {
            "default": null,
            "description": "City associated with the merchant's address.",
            "title": "City",
            "type": "string"
          },
          "country": {
            "default": null,
            "description": "Country associated with the merchant's address.",
            "title": "Country",
            "type": "string"
          },
          "house_number": {
            "default": null,
            "description": "House number associated with the merchant's address.",
            "title": "House Number",
            "type": "string"
          },
          "province": {
            "default": null,
            "description": "Province associated with the merchant's address.",
            "title": "Province",
            "type": "string"
          },
          "street_name": {
            "default": null,
            "description": "Street name associated with the merchant's address.",
            "title": "Street Name",
            "type": "string"
          },
          "zip_code": {
            "default": null,
            "description": "ZIP code associated with the merchant's address.",
            "title": "Zip Code",
            "type": "string"
          },
          "country_code": {
            "default": null,
            "description": "Country code associated with the merchant's location.",
            "title": "Country Code",
            "type": "string"
          }
        },
        "title": "FinancialMerchantInformation",
        "type": "object"
      },
      "FinancialParserObjectDataClass": {
        "properties": {
          "customer_information": {
            "$ref": "#/components/schemas/FinancialCustomerInformation"
          },
          "merchant_information": {
            "$ref": "#/components/schemas/FinancialMerchantInformation"
          },
          "payment_information": {
            "$ref": "#/components/schemas/FinancialPaymentInformation"
          },
          "financial_document_information": {
            "$ref": "#/components/schemas/FinancialDocumentInformation"
          },
          "local": {
            "$ref": "#/components/schemas/FinancialLocalInformation"
          },
          "bank": {
            "$ref": "#/components/schemas/FinancialBankInformation"
          },
          "item_lines": {
            "description": "List of line items associated with the document.",
            "items": {
              "$ref": "#/components/schemas/FinancialLineItem"
            },
            "title": "Item Lines",
            "type": "array"
          },
          "document_metadata": {
            "$ref": "#/components/schemas/FinancialDocumentMetadata"
          }
        },
        "required": [
          "customer_information",
          "merchant_information",
          "payment_information",
          "financial_document_information",
          "local",
          "bank",
          "document_metadata"
        ],
        "title": "FinancialParserObjectDataClass",
        "type": "object"
      },
      "FinancialPaymentInformation": {
        "properties": {
          "amount_due": {
            "default": null,
            "description": "Amount due for payment.",
            "title": "Amount Due",
            "type": "integer"
          },
          "amount_tip": {
            "default": null,
            "description": "Tip amount in a financial transaction.",
            "title": "Amount Tip",
            "type": "integer"
          },
          "amount_shipping": {
            "default": null,
            "description": "Shipping cost in a financial transaction.",
            "title": "Amount Shipping",
            "type": "integer"
          },
          "amount_change": {
            "default": null,
            "description": "Change amount in a financial transaction.",
            "title": "Amount Change",
            "type": "integer"
          },
          "amount_paid": {
            "default": null,
            "description": "Amount already paid in a financial transaction.",
            "title": "Amount Paid",
            "type": "integer"
          },
          "total": {
            "default": null,
            "description": "Total amount in the invoice.",
            "title": "Total",
            "type": "integer"
          },
          "subtotal": {
            "default": null,
            "description": "Subtotal amount in a financial transaction.",
            "title": "Subtotal",
            "type": "integer"
          },
          "total_tax": {
            "default": null,
            "description": "Total tax amount in a financial transaction.",
            "title": "Total Tax",
            "type": "integer"
          },
          "tax_rate": {
            "default": null,
            "description": "Tax rate applied in a financial transaction.",
            "title": "Tax Rate",
            "type": "integer"
          },
          "discount": {
            "default": null,
            "description": "Discount amount applied in a financial transaction.",
            "title": "Discount",
            "type": "integer"
          },
          "gratuity": {
            "default": null,
            "description": "Gratuity amount in a financial transaction.",
            "title": "Gratuity",
            "type": "integer"
          },
          "service_charge": {
            "default": null,
            "description": "Service charge in a financial transaction.",
            "title": "Service Charge",
            "type": "integer"
          },
          "previous_unpaid_balance": {
            "default": null,
            "description": "Previous unpaid balance in a financial transaction.",
            "title": "Previous Unpaid Balance",
            "type": "integer"
          },
          "prior_balance": {
            "default": null,
            "description": "Prior balance before the current financial transaction.",
            "title": "Prior Balance",
            "type": "integer"
          },
          "payment_terms": {
            "default": null,
            "description": "Terms and conditions for payment.",
            "title": "Payment Terms",
            "type": "string"
          },
          "payment_method": {
            "default": null,
            "description": "Payment method used in the financial transaction.",
            "title": "Payment Method",
            "type": "string"
          },
          "payment_card_number": {
            "default": null,
            "description": "Card number used in the payment.",
            "title": "Payment Card Number",
            "type": "string"
          },
          "payment_auth_code": {
            "default": null,
            "description": "Authorization code for the payment.",
            "title": "Payment Auth Code",
            "type": "string"
          },
          "shipping_handling_charge": {
            "default": null,
            "description": "Charge for shipping and handling in a financial transaction.",
            "title": "Shipping Handling Charge",
            "type": "integer"
          },
          "transaction_number": {
            "default": null,
            "description": "Unique identifier for the financial transaction.",
            "title": "Transaction Number",
            "type": "string"
          },
          "transaction_reference": {
            "default": null,
            "description": "Reference number for the financial transaction.",
            "title": "Transaction Reference",
            "type": "string"
          }
        },
        "title": "FinancialPaymentInformation",
        "type": "object"
      },
      "GeneralSentimentEnum": {
        "enum": [
          "Positive",
          "Negative",
          "Neutral"
        ],
        "type": "string"
      },
      "GeneratedImageDataClass": {
        "properties": {
          "image": {
            "title": "Image",
            "type": "string"
          },
          "image_resource_url": {
            "title": "Image Resource Url",
            "type": "string"
          }
        },
        "required": [
          "image",
          "image_resource_url"
        ],
        "title": "GeneratedImageDataClass",
        "type": "object"
      },
      "HateAndExtremismSubCategoryType": {
        "enum": [
          "Hate",
          "Harassment",
          "Threatening",
          "Extremist",
          "Racy"
        ],
        "title": "HateAndExtremismSubCategoryType",
        "type": "string"
      },
      "IdentificationNumbersSubCategoryType": {
        "enum": [
          "SocialSecurityNumber",
          "NationalIdentificationNumber",
          "NationalHealthService",
          "ResidentRegistrationNumber",
          "DriverLicenseNumber",
          "PassportNumber"
        ],
        "title": "IdentificationNumbersSubCategoryType",
        "type": "string"
      },
      "InfosCustomNamedEntityRecognitionDataClass": {
        "properties": {
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "category": {
            "title": "Category",
            "type": "string"
          }
        },
        "required": [
          "entity",
          "category"
        ],
        "title": "InfosCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "InfosIdentityParserDataClass": {
        "properties": {
          "last_name": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "given_names": {
            "items": {
              "$ref": "#/components/schemas/ItemIdentityParserDataClass"
            },
            "title": "Given Names",
            "type": "array"
          },
          "birth_place": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "birth_date": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "issuance_date": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "expire_date": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "document_id": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "issuing_state": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "address": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "age": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "document_type": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "gender": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "image_id": {
            "items": {
              "$ref": "#/components/schemas/ItemIdentityParserDataClass"
            },
            "title": "Image Id",
            "type": "array"
          },
          "image_signature": {
            "items": {
              "$ref": "#/components/schemas/ItemIdentityParserDataClass"
            },
            "title": "Image Signature",
            "type": "array"
          },
          "mrz": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "nationality": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          }
        },
        "required": [
          "last_name",
          "birth_place",
          "birth_date",
          "issuance_date",
          "expire_date",
          "document_id",
          "issuing_state",
          "address",
          "age",
          "country",
          "document_type",
          "gender",
          "mrz",
          "nationality"
        ],
        "title": "InfosIdentityParserDataClass",
        "type": "object"
      },
      "InfosInvoiceParserDataClass": {
        "properties": {
          "customer_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInformationInvoice"
              }
            ],
            "default": {
              "abn_number": null,
              "customer_address": null,
              "customer_billing_address": null,
              "customer_email": null,
              "customer_id": null,
              "customer_mailing_address": null,
              "customer_name": null,
              "customer_remittance_address": null,
              "customer_service_address": null,
              "customer_shipping_address": null,
              "customer_tax_id": null,
              "gst_number": null,
              "pan_number": null,
              "siren_number": null,
              "siret_number": null,
              "vat_number": null
            }
          },
          "merchant_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantInformationInvoice"
              }
            ],
            "default": {
              "abn_number": null,
              "gst_number": null,
              "merchant_address": null,
              "merchant_email": null,
              "merchant_fax": null,
              "merchant_name": null,
              "merchant_phone": null,
              "merchant_siren": null,
              "merchant_siret": null,
              "merchant_tax_id": null,
              "merchant_website": null,
              "pan_number": null,
              "vat_number": null
            }
          },
          "invoice_number": {
            "default": null,
            "title": "Invoice Number",
            "type": "string"
          },
          "invoice_total": {
            "default": null,
            "title": "Invoice Total",
            "type": "integer"
          },
          "invoice_subtotal": {
            "default": null,
            "title": "Invoice Subtotal",
            "type": "integer"
          },
          "gratuity": {
            "default": null,
            "title": "Gratuity",
            "type": "integer"
          },
          "amount_due": {
            "default": null,
            "title": "Amount Due",
            "type": "integer"
          },
          "previous_unpaid_balance": {
            "default": null,
            "title": "Previous Unpaid Balance",
            "type": "integer"
          },
          "discount": {
            "default": null,
            "title": "Discount",
            "type": "integer"
          },
          "taxes": {
            "items": {
              "$ref": "#/components/schemas/TaxesInvoice"
            },
            "title": "Taxes",
            "type": "array"
          },
          "service_charge": {
            "default": null,
            "title": "Service Charge",
            "type": "integer"
          },
          "payment_term": {
            "default": null,
            "title": "Payment Term",
            "type": "string"
          },
          "purchase_order": {
            "default": null,
            "title": "Purchase Order",
            "type": "string"
          },
          "date": {
            "default": null,
            "title": "Date",
            "type": "string"
          },
          "due_date": {
            "default": null,
            "title": "Due Date",
            "type": "string"
          },
          "service_date": {
            "default": null,
            "title": "Service Date",
            "type": "string"
          },
          "service_due_date": {
            "default": null,
            "title": "Service Due Date",
            "type": "string"
          },
          "po_number": {
            "default": null,
            "title": "Po Number",
            "type": "string"
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocaleInvoice"
              }
            ],
            "default": {
              "currency": null,
              "language": null
            }
          },
          "bank_informations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BankInvoice"
              }
            ],
            "default": {
              "account_number": null,
              "bsb": null,
              "iban": null,
              "rooting_number": null,
              "sort_code": null,
              "swift": null,
              "vat_number": null
            }
          },
          "item_lines": {
            "items": {
              "$ref": "#/components/schemas/ItemLinesInvoice"
            },
            "title": "Item Lines",
            "type": "array"
          }
        },
        "title": "InfosInvoiceParserDataClass",
        "type": "object"
      },
      "InfosKeywordExtractionDataClass": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          }
        },
        "required": [
          "keyword",
          "importance"
        ],
        "title": "InfosKeywordExtractionDataClass",
        "type": "object"
      },
      "InfosLanguageDetectionDataClass": {
        "properties": {
          "language": {
            "title": "Language",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "language",
          "display_name",
          "confidence"
        ],
        "title": "InfosLanguageDetectionDataClass",
        "type": "object"
      },
      "InfosNamedEntityRecognitionDataClass": {
        "properties": {
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "category": {
            "title": "Category",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          }
        },
        "required": [
          "entity",
          "category",
          "importance"
        ],
        "title": "InfosNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "InfosReceiptParserDataClass": {
        "properties": {
          "invoice_number": {
            "default": null,
            "title": "Invoice Number",
            "type": "string"
          },
          "invoice_total": {
            "default": null,
            "title": "Invoice Total",
            "type": "integer"
          },
          "invoice_subtotal": {
            "default": null,
            "title": "Invoice Subtotal",
            "type": "integer"
          },
          "barcodes": {
            "items": {
              "$ref": "#/components/schemas/BarCode"
            },
            "title": "Barcodes",
            "type": "array"
          },
          "category": {
            "default": null,
            "title": "Category",
            "type": "string"
          },
          "date": {
            "default": null,
            "title": "Date",
            "type": "string"
          },
          "due_date": {
            "default": null,
            "title": "Due Date",
            "type": "string"
          },
          "time": {
            "default": null,
            "title": "Time",
            "type": "string"
          },
          "customer_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInformation"
              }
            ],
            "default": {
              "customer_name": null
            }
          },
          "merchant_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantInformation"
              }
            ],
            "default": {
              "merchant_abn_number": null,
              "merchant_address": null,
              "merchant_gst_number": null,
              "merchant_name": null,
              "merchant_phone": null,
              "merchant_siren": null,
              "merchant_siret": null,
              "merchant_url": null,
              "merchant_vat_number": null
            }
          },
          "payment_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentInformation"
              }
            ],
            "default": {
              "card_number": null,
              "card_type": null,
              "cash": null,
              "change": null,
              "discount": null,
              "tip": null
            }
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Locale"
              }
            ],
            "default": {
              "country": null,
              "currency": null,
              "language": null
            }
          },
          "taxes": {
            "items": {
              "$ref": "#/components/schemas/Taxes"
            },
            "title": "Taxes",
            "type": "array"
          },
          "receipt_infos": {
            "title": "Receipt Infos",
            "type": "object"
          },
          "item_lines": {
            "items": {
              "$ref": "#/components/schemas/ItemLines"
            },
            "title": "Item Lines",
            "type": "array"
          }
        },
        "title": "InfosReceiptParserDataClass",
        "type": "object"
      },
      "InfosSearchDataClass": {
        "properties": {
          "object": {
            "title": "Object",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "integer"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "object",
          "document",
          "score"
        ],
        "title": "InfosSearchDataClass",
        "type": "object"
      },
      "InfosSyntaxAnalysisDataClass": {
        "properties": {
          "word": {
            "title": "Word",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          },
          "tag": {
            "title": "Tag",
            "type": "string"
          },
          "lemma": {
            "title": "Lemma",
            "type": "string"
          },
          "others": {
            "title": "Others",
            "type": "object"
          }
        },
        "required": [
          "word",
          "importance",
          "tag",
          "lemma"
        ],
        "title": "InfosSyntaxAnalysisDataClass",
        "type": "object"
      },
      "ItemBankCheckParsingDataClass": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "integer"
          },
          "amount_text": {
            "title": "Amount Text",
            "type": "string"
          },
          "bank_address": {
            "title": "Bank Address",
            "type": "string"
          },
          "bank_name": {
            "title": "Bank Name",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "type": "string"
          },
          "memo": {
            "title": "Memo",
            "type": "string"
          },
          "payer_address": {
            "title": "Payer Address",
            "type": "string"
          },
          "payer_name": {
            "title": "Payer Name",
            "type": "string"
          },
          "receiver_address": {
            "title": "Receiver Address",
            "type": "string"
          },
          "receiver_name": {
            "title": "Receiver Name",
            "type": "string"
          },
          "currency": {
            "title": "Currency",
            "type": "string"
          },
          "micr": {
            "$ref": "#/components/schemas/MicrModel"
          }
        },
        "required": [
          "amount",
          "amount_text",
          "bank_address",
          "bank_name",
          "date",
          "memo",
          "payer_address",
          "payer_name",
          "receiver_address",
          "receiver_name",
          "currency",
          "micr"
        ],
        "title": "ItemBankCheckParsingDataClass",
        "type": "object"
      },
      "ItemCustomClassificationDataClass": {
        "properties": {
          "input": {
            "title": "Input",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "input",
          "label",
          "confidence"
        ],
        "title": "ItemCustomClassificationDataClass",
        "type": "object"
      },
      "ItemDataExtraction": {
        "properties": {
          "key": {
            "title": "Key",
            "type": "string"
          },
          "value": {
            "title": "Value"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/BoundingBox"
          },
          "confidence_score": {
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Score",
            "type": "integer"
          }
        },
        "required": [
          "key",
          "value",
          "bounding_box",
          "confidence_score"
        ],
        "title": "ItemDataExtraction",
        "type": "object"
      },
      "ItemIdentityParserDataClass": {
        "properties": {
          "value": {
            "default": null,
            "title": "Value",
            "type": "string"
          },
          "confidence": {
            "default": null,
            "title": "Confidence",
            "type": "integer"
          }
        },
        "title": "ItemIdentityParserDataClass",
        "type": "object"
      },
      "ItemLines": {
        "properties": {
          "description": {
            "default": null,
            "title": "Description",
            "type": "string"
          },
          "quantity": {
            "default": null,
            "title": "Quantity",
            "type": "integer"
          },
          "amount": {
            "default": null,
            "title": "Amount",
            "type": "integer"
          },
          "unit_price": {
            "default": null,
            "title": "Unit Price",
            "type": "integer"
          }
        },
        "title": "ItemLines",
        "type": "object"
      },
      "ItemLinesInvoice": {
        "properties": {
          "description": {
            "default": null,
            "title": "Description",
            "type": "string"
          },
          "quantity": {
            "default": null,
            "title": "Quantity",
            "type": "integer"
          },
          "amount": {
            "default": null,
            "title": "Amount",
            "type": "integer"
          },
          "unit_price": {
            "default": null,
            "title": "Unit Price",
            "type": "integer"
          },
          "discount": {
            "default": null,
            "title": "Discount",
            "type": "integer"
          },
          "product_code": {
            "default": null,
            "title": "Product Code",
            "type": "string"
          },
          "date_item": {
            "default": null,
            "title": "Date Item",
            "type": "string"
          },
          "tax_item": {
            "default": null,
            "title": "Tax Item",
            "type": "integer"
          },
          "tax_rate": {
            "default": null,
            "title": "Tax Rate",
            "type": "integer"
          }
        },
        "title": "ItemLinesInvoice",
        "type": "object"
      },
      "LandmarkItem": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_box": {
            "items": {
              "$ref": "#/components/schemas/LandmarkVertice"
            },
            "title": "Bounding Box",
            "type": "array"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/LandmarkLocation"
            },
            "title": "Locations",
            "type": "array"
          }
        },
        "required": [
          "description",
          "confidence"
        ],
        "title": "LandmarkItem",
        "type": "object"
      },
      "LandmarkLatLng": {
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "integer"
          },
          "longitude": {
            "title": "Longitude",
            "type": "integer"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "LandmarkLatLng",
        "type": "object"
      },
      "LandmarkLocation": {
        "properties": {
          "lat_lng": {
            "$ref": "#/components/schemas/LandmarkLatLng"
          }
        },
        "required": [
          "lat_lng"
        ],
        "title": "LandmarkLocation",
        "type": "object"
      },
      "LandmarkVertice": {
        "properties": {
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "title": "LandmarkVertice",
        "type": "object"
      },
      "LandmarksVideo": {
        "properties": {
          "eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Left",
            "type": "array"
          },
          "eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Right",
            "type": "array"
          },
          "nose": {
            "items": {
              "type": "integer"
            },
            "title": "Nose",
            "type": "array"
          },
          "mouth_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Left",
            "type": "array"
          },
          "mouth_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Right",
            "type": "array"
          }
        },
        "title": "LandmarksVideo",
        "type": "object"
      },
      "LaunchAsyncJobResponse": {
        "type": "object",
        "properties": {
          "public_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "public_id"
        ]
      },
      "Line": {
        "description": "Line of a document\n\n    Attributes:\n        text (str): Text detected in the line\n        bounding_boxes (Sequence[BoundingBox]): Bounding boxes of the words in the line\n        words (Sequence[Word]): List of words of the line\n        confidence (float): Confidence of the line\n    ",
        "properties": {
          "text": {
            "description": "Text detected in the line",
            "title": "Text",
            "type": "string"
          },
          "words": {
            "description": "List of words",
            "items": {
              "$ref": "#/components/schemas/Word"
            },
            "title": "Words",
            "type": "array"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Bounding boxes of the words in the line"
          },
          "confidence": {
            "description": "Confidence of the line",
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "bounding_box",
          "confidence"
        ],
        "title": "Line",
        "type": "object"
      },
      "ListAsyncJobResponse": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncJobList"
            }
          }
        },
        "required": [
          "jobs"
        ]
      },
      "Locale": {
        "properties": {
          "currency": {
            "default": null,
            "title": "Currency",
            "type": "string"
          },
          "language": {
            "default": null,
            "title": "Language",
            "type": "string"
          },
          "country": {
            "default": null,
            "title": "Country",
            "type": "string"
          }
        },
        "title": "Locale",
        "type": "object"
      },
      "LocaleInvoice": {
        "properties": {
          "currency": {
            "title": "Currency",
            "type": "string"
          },
          "language": {
            "title": "Language",
            "type": "string"
          }
        },
        "required": [
          "currency",
          "language"
        ],
        "title": "LocaleInvoice",
        "type": "object"
      },
      "LocationInformationSubCategoryType": {
        "enum": [
          "Address",
          "Location"
        ],
        "title": "LocationInformationSubCategoryType",
        "type": "string"
      },
      "LogoBoundingPoly": {
        "properties": {
          "vertices": {
            "items": {
              "$ref": "#/components/schemas/LogoVertice"
            },
            "title": "Vertices",
            "type": "array"
          }
        },
        "required": [
          "vertices"
        ],
        "title": "LogoBoundingPoly",
        "type": "object"
      },
      "LogoItem": {
        "properties": {
          "bounding_poly": {
            "$ref": "#/components/schemas/LogoBoundingPoly"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "bounding_poly",
          "description",
          "score"
        ],
        "title": "LogoItem",
        "type": "object"
      },
      "LogoTrack": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "tracking": {
            "items": {
              "$ref": "#/components/schemas/VideoLogo"
            },
            "title": "Tracking",
            "type": "array"
          }
        },
        "required": [
          "description"
        ],
        "title": "LogoTrack",
        "type": "object"
      },
      "LogoVertice": {
        "properties": {
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "title": "LogoVertice",
        "type": "object"
      },
      "LowerCloth": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "confidence"
        ],
        "title": "LowerCloth",
        "type": "object"
      },
      "MerchantInformation": {
        "properties": {
          "merchant_name": {
            "default": null,
            "title": "Merchant Name",
            "type": "string"
          },
          "merchant_address": {
            "default": null,
            "title": "Merchant Address",
            "type": "string"
          },
          "merchant_phone": {
            "default": null,
            "title": "Merchant Phone",
            "type": "string"
          },
          "merchant_url": {
            "default": null,
            "title": "Merchant Url",
            "type": "string"
          },
          "merchant_siret": {
            "default": null,
            "title": "Merchant Siret",
            "type": "string"
          },
          "merchant_siren": {
            "default": null,
            "title": "Merchant Siren",
            "type": "string"
          },
          "merchant_vat_number": {
            "default": null,
            "title": "Merchant Vat Number",
            "type": "string"
          },
          "merchant_gst_number": {
            "default": null,
            "title": "Merchant Gst Number",
            "type": "string"
          },
          "merchant_abn_number": {
            "default": null,
            "title": "Merchant Abn Number",
            "type": "string"
          }
        },
        "title": "MerchantInformation",
        "type": "object"
      },
      "MerchantInformationInvoice": {
        "properties": {
          "merchant_name": {
            "title": "Merchant Name",
            "type": "string"
          },
          "merchant_address": {
            "title": "Merchant Address",
            "type": "string"
          },
          "merchant_phone": {
            "title": "Merchant Phone",
            "type": "string"
          },
          "merchant_email": {
            "title": "Merchant Email",
            "type": "string"
          },
          "merchant_fax": {
            "title": "Merchant Fax",
            "type": "string"
          },
          "merchant_website": {
            "title": "Merchant Website",
            "type": "string"
          },
          "merchant_tax_id": {
            "title": "Merchant Tax Id",
            "type": "string"
          },
          "merchant_siret": {
            "title": "Merchant Siret",
            "type": "string"
          },
          "merchant_siren": {
            "title": "Merchant Siren",
            "type": "string"
          },
          "abn_number": {
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "title": "Gst Number",
            "type": "string"
          },
          "pan_number": {
            "title": "Pan Number",
            "type": "string"
          },
          "vat_number": {
            "title": "Vat Number",
            "type": "string"
          }
        },
        "required": [
          "merchant_name",
          "merchant_address",
          "merchant_phone",
          "merchant_email",
          "merchant_fax",
          "merchant_website",
          "merchant_tax_id",
          "merchant_siret",
          "merchant_siren",
          "abn_number",
          "gst_number",
          "pan_number",
          "vat_number"
        ],
        "title": "MerchantInformationInvoice",
        "type": "object"
      },
      "MicrModel": {
        "properties": {
          "raw": {
            "title": "Raw",
            "type": "string"
          },
          "account_number": {
            "title": "Account Number",
            "type": "string"
          },
          "routing_number": {
            "title": "Routing Number",
            "type": "string"
          },
          "serial_number": {
            "title": "Serial Number",
            "type": "string"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          }
        },
        "required": [
          "raw",
          "account_number",
          "routing_number",
          "serial_number",
          "check_number"
        ],
        "title": "MicrModel",
        "type": "object"
      },
      "MiscellaneousSubCategoryType": {
        "enum": [
          "URL",
          "IP",
          "MAC",
          "VehicleIdentificationNumber",
          "LicensePlate",
          "VoterNumber",
          "AWSKeys",
          "AzureKeys",
          "Password"
        ],
        "title": "MiscellaneousSubCategoryType",
        "type": "string"
      },
      "NestedBadRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/FieldError"
          }
        },
        "required": [
          "message",
          "type"
        ]
      },
      "NestedError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "type"
        ]
      },
      "NotFoundResponse": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "default": "Not Found"
          }
        }
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "ObjectFrame": {
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoObjectBoundingBox"
          }
        },
        "required": [
          "timestamp",
          "bounding_box"
        ],
        "title": "ObjectFrame",
        "type": "object"
      },
      "ObjectItem": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "x_min": {
            "title": "X Min",
            "type": "integer"
          },
          "x_max": {
            "title": "X Max",
            "type": "integer"
          },
          "y_min": {
            "title": "Y Min",
            "type": "integer"
          },
          "y_max": {
            "title": "Y Max",
            "type": "integer"
          }
        },
        "required": [
          "label",
          "confidence",
          "x_min",
          "x_max",
          "y_min",
          "y_max"
        ],
        "title": "ObjectItem",
        "type": "object"
      },
      "ObjectTrack": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "frames": {
            "items": {
              "$ref": "#/components/schemas/ObjectFrame"
            },
            "title": "Frames",
            "type": "array"
          }
        },
        "required": [
          "description",
          "confidence"
        ],
        "title": "ObjectTrack",
        "type": "object"
      },
      "OcrTablesAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          }
        },
        "required": [
          "providers"
        ]
      },
      "OptionEnum": {
        "enum": [
          "FEMALE",
          "MALE"
        ],
        "type": "string",
        "description": "* `FEMALE` - Female\n* `MALE` - Male"
      },
      "OrganizationSubCategoryType": {
        "enum": [
          "CompanyName",
          "CompanyNumber",
          "BuisnessNumber"
        ],
        "title": "OrganizationSubCategoryType",
        "type": "string"
      },
      "OtherSubCategoryType": {
        "enum": [
          "Spoof",
          "Religion",
          "Offensive",
          "Other"
        ],
        "title": "OtherSubCategoryType",
        "type": "string"
      },
      "Page": {
        "description": "Page of a document\n\n    Attributes:\n        lines (Sequence[Line]): List of lines of the page\n    ",
        "properties": {
          "lines": {
            "description": "List of lines",
            "items": {
              "$ref": "#/components/schemas/Line"
            },
            "title": "Lines",
            "type": "array"
          }
        },
        "title": "Page",
        "type": "object"
      },
      "PaginatedBatchResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total requests made"
          },
          "current_page": {
            "type": "integer",
            "description": "Current page number"
          },
          "last_page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer",
            "description": "Number of requests per page"
          },
          "From": {
            "type": "integer"
          },
          "to": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string",
            "format": "uri"
          },
          "next_page_url": {
            "type": "string",
            "format": "uri"
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchResponseRequest"
            }
          },
          "status": {
            "$ref": "#/components/schemas/StatusE80Enum"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "From",
          "created",
          "current_page",
          "last_page",
          "per_page",
          "requests",
          "to",
          "total",
          "updated"
        ]
      },
      "PatchedAskYodaProjectUpdateRequest": {
        "type": "object",
        "properties": {
          "llm_provider": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default LLM provider to use in your project."
          },
          "llm_model": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default Model for LLM provider to use in your project"
          }
        }
      },
      "PatchedAssetUpdateRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "PatchedDocParserUpdateRequest": {
        "type": "object",
        "properties": {
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "PatchedPromptTextRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1
          },
          "feature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "PatchedResourceUpdateRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        }
      },
      "PatchedUniversalTranslatorCreatetRequest": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code from which the text will be translated",
            "maxLength": 10
          },
          "target_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code in which the text will be translated",
            "maxLength": 10
          },
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "The project name",
            "maxLength": 200
          },
          "fall_back_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            }
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        }
      },
      "PatchedWorkflowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "output_node": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          }
        }
      },
      "PaymentInformation": {
        "properties": {
          "card_type": {
            "default": null,
            "title": "Card Type",
            "type": "string"
          },
          "card_number": {
            "default": null,
            "title": "Card Number",
            "type": "string"
          },
          "cash": {
            "default": null,
            "title": "Cash",
            "type": "string"
          },
          "tip": {
            "default": null,
            "title": "Tip",
            "type": "string"
          },
          "discount": {
            "default": null,
            "title": "Discount",
            "type": "string"
          },
          "change": {
            "default": null,
            "title": "Change",
            "type": "string"
          }
        },
        "title": "PaymentInformation",
        "type": "object"
      },
      "PersonAttributes": {
        "properties": {
          "upper_cloths": {
            "items": {
              "$ref": "#/components/schemas/UpperCloth"
            },
            "title": "Upper Cloths",
            "type": "array"
          },
          "lower_cloths": {
            "items": {
              "$ref": "#/components/schemas/LowerCloth"
            },
            "title": "Lower Cloths",
            "type": "array"
          }
        },
        "title": "PersonAttributes",
        "type": "object"
      },
      "PersonLandmarks": {
        "properties": {
          "eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Left",
            "type": "array"
          },
          "eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Right",
            "type": "array"
          },
          "nose": {
            "items": {
              "type": "integer"
            },
            "title": "Nose",
            "type": "array"
          },
          "ear_left": {
            "items": {
              "type": "integer"
            },
            "title": "Ear Left",
            "type": "array"
          },
          "ear_right": {
            "items": {
              "type": "integer"
            },
            "title": "Ear Right",
            "type": "array"
          },
          "shoulder_left": {
            "items": {
              "type": "integer"
            },
            "title": "Shoulder Left",
            "type": "array"
          },
          "shoulder_right": {
            "items": {
              "type": "integer"
            },
            "title": "Shoulder Right",
            "type": "array"
          },
          "elbow_left": {
            "items": {
              "type": "integer"
            },
            "title": "Elbow Left",
            "type": "array"
          },
          "elbow_right": {
            "items": {
              "type": "integer"
            },
            "title": "Elbow Right",
            "type": "array"
          },
          "wrist_left": {
            "items": {
              "type": "integer"
            },
            "title": "Wrist Left",
            "type": "array"
          },
          "wrist_right": {
            "items": {
              "type": "integer"
            },
            "title": "Wrist Right",
            "type": "array"
          },
          "hip_left": {
            "items": {
              "type": "integer"
            },
            "title": "Hip Left",
            "type": "array"
          },
          "hip_right": {
            "items": {
              "type": "integer"
            },
            "title": "Hip Right",
            "type": "array"
          },
          "knee_left": {
            "items": {
              "type": "integer"
            },
            "title": "Knee Left",
            "type": "array"
          },
          "knee_right": {
            "items": {
              "type": "integer"
            },
            "title": "Knee Right",
            "type": "array"
          },
          "ankle_left": {
            "items": {
              "type": "integer"
            },
            "title": "Ankle Left",
            "type": "array"
          },
          "ankle_right": {
            "items": {
              "type": "integer"
            },
            "title": "Ankle Right",
            "type": "array"
          },
          "mouth_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Left",
            "type": "array"
          },
          "mouth_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Right",
            "type": "array"
          }
        },
        "title": "PersonLandmarks",
        "type": "object"
      },
      "PersonTracking": {
        "properties": {
          "offset": {
            "title": "Offset",
            "type": "integer"
          },
          "attributes": {
            "$ref": "#/components/schemas/PersonAttributes"
          },
          "landmarks": {
            "$ref": "#/components/schemas/PersonLandmarks"
          },
          "poses": {
            "$ref": "#/components/schemas/VideoPersonPoses"
          },
          "quality": {
            "$ref": "#/components/schemas/VideoPersonQuality"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoTrackingBoundingBox"
          }
        },
        "required": [
          "offset",
          "bounding_box"
        ],
        "title": "PersonTracking",
        "type": "object"
      },
      "PersonalInformationSubCategoryType": {
        "enum": [
          "Name",
          "Age",
          "Email",
          "Phone",
          "PersonType"
        ],
        "title": "PersonalInformationSubCategoryType",
        "type": "string"
      },
      "PipelineRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "The input text for the first feature of the pipeline"
          },
          "texts": {
            "type": "string",
            "minLength": 1,
            "description": "List of texts for the first feature of the pipeline"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The input file for the first feature of the pipeline"
          },
          "return_only_last": {
            "type": "boolean",
            "default": true,
            "description": "This parameter allows user to choose to output only the final result or all the intermediate results."
          }
        },
        "required": [
          "description"
        ]
      },
      "PlagiaDetectionCandidate": {
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "plagia_score": {
            "title": "Plagia Score",
            "type": "integer"
          },
          "prediction": {
            "title": "Prediction",
            "type": "string"
          },
          "plagiarized_text": {
            "title": "Plagiarized Text",
            "type": "string"
          }
        },
        "required": [
          "url",
          "plagia_score",
          "prediction",
          "plagiarized_text"
        ],
        "title": "PlagiaDetectionCandidate",
        "type": "object"
      },
      "PlagiaDetectionItem": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "candidates": {
            "items": {
              "$ref": "#/components/schemas/PlagiaDetectionCandidate"
            },
            "title": "Candidates",
            "type": "array"
          }
        },
        "required": [
          "text"
        ],
        "title": "PlagiaDetectionItem",
        "type": "object"
      },
      "PriceUnitTypeEnum": {
        "enum": [
          "file",
          "image",
          "page",
          "size",
          "request",
          "seconde",
          "minute",
          "free",
          "hour",
          "char",
          "token",
          "exec_time",
          "unknown"
        ],
        "type": "string",
        "description": "* `file` - File\n* `image` - Image\n* `page` - Page\n* `size` - Size\n* `request` - Request\n* `seconde` - Second\n* `minute` - Minute\n* `free` - Free\n* `hour` - Hour\n* `char` - Characters\n* `token` - Token\n* `exec_time` - Execution Time\n* `unknown` - Unknown"
      },
      "PricingSerialzier": {
        "type": "object",
        "properties": {
          "model_name": {
            "type": "string",
            "description": "Model name, default to 'default' if no models to chose from",
            "maxLength": 255
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,6}(?:\\.\\d{0,9})?$"
          },
          "price_unit_quantity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "min_price_quantity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_unit_type": {
            "$ref": "#/components/schemas/PriceUnitTypeEnum"
          },
          "detail_type": {
            "nullable": true,
            "description": "(Optional) type of extra value, MUST be the same name as the feature parameter name. eg: resolution\n\n* `resolution` - Resolution\n* `document_type` - Document Type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DetailTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "detail_value": {
            "type": "string",
            "nullable": true,
            "description": "(Optional) extra value for detailed pricing, eg: 250x250 for resolution",
            "maxLength": 255
          },
          "get_detail_type_display": {
            "type": "string",
            "readOnly": true
          },
          "is_post_call": {
            "type": "boolean"
          }
        },
        "required": [
          "get_detail_type_display"
        ]
      },
      "Prompt": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "text": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "feature",
          "name",
          "provider",
          "subfeature",
          "text",
          "updated_at"
        ]
      },
      "PromptDataClass": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "PromptDataClass",
        "type": "object"
      },
      "PromptHistory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "text": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "readOnly": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "feature",
          "name",
          "provider",
          "subfeature",
          "text",
          "updated_at"
        ]
      },
      "PromptRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "text": {
            "type": "string",
            "minLength": 1
          },
          "feature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "feature",
          "name",
          "provider",
          "subfeature",
          "text"
        ]
      },
      "PromptText": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "text": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "feature",
          "name",
          "provider",
          "subfeature",
          "text",
          "updated_at"
        ]
      },
      "PromptTextRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1
          },
          "feature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "feature",
          "provider",
          "subfeature",
          "text"
        ]
      },
      "Provider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "fullname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "ProviderSubfeature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "readOnly": true
          },
          "pricings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingSerialzier"
            }
          },
          "is_working": {
            "type": "boolean"
          },
          "description_title": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "description_content": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "feature": {
            "$ref": "#/components/schemas/Feature"
          },
          "subfeature": {
            "$ref": "#/components/schemas/Subfeature"
          },
          "constraints": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "models": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "language_name": {
                  "type": "string"
                },
                "language_code": {
                  "type": "string"
                }
              }
            },
            "readOnly": true
          },
          "phase": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "constraints",
          "feature",
          "languages",
          "models",
          "name",
          "phase",
          "pricings",
          "provider",
          "subfeature",
          "version"
        ]
      },
      "RepresentationEnum": {
        "enum": [
          "document",
          "query",
          "symetric"
        ],
        "type": "string",
        "description": "* `document` - document\n* `query` - query\n* `symetric` - symetric"
      },
      "ResolutionEnum": {
        "enum": [
          "256x256",
          "512x512",
          "1024x1024"
        ],
        "type": "string",
        "description": "* `256x256` - 256x256\n* `512x512` - 512x512\n* `1024x1024` - 1024x1024"
      },
      "ResourceCreate": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceCreateRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceList": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "string",
            "format": "byte",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "maxLength": 100
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetList"
            }
          }
        },
        "required": [
          "assets",
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceUpdate": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "maxLength": 100
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetList"
            },
            "readOnly": true
          }
        },
        "required": [
          "assets",
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceUpdateRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResumeEducation": {
        "properties": {
          "total_years_education": {
            "title": "Total Years Education",
            "type": "integer"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/ResumeEducationEntry"
            },
            "title": "Entries",
            "type": "array"
          }
        },
        "required": [
          "total_years_education"
        ],
        "title": "ResumeEducation",
        "type": "object"
      },
      "ResumeEducationEntry": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/ResumeLocation"
          },
          "establishment": {
            "title": "Establishment",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "gpa": {
            "title": "Gpa",
            "type": "string"
          },
          "accreditation": {
            "title": "Accreditation",
            "type": "string"
          }
        },
        "required": [
          "title",
          "start_date",
          "end_date",
          "location",
          "establishment",
          "description",
          "gpa",
          "accreditation"
        ],
        "title": "ResumeEducationEntry",
        "type": "object"
      },
      "ResumeExtractedData": {
        "properties": {
          "personal_infos": {
            "$ref": "#/components/schemas/ResumePersonalInfo"
          },
          "education": {
            "$ref": "#/components/schemas/ResumeEducation"
          },
          "work_experience": {
            "$ref": "#/components/schemas/ResumeWorkExp"
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/ResumeLang"
            },
            "title": "Languages",
            "type": "array"
          },
          "skills": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Skills",
            "type": "array"
          },
          "certifications": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Certifications",
            "type": "array"
          },
          "courses": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Courses",
            "type": "array"
          },
          "publications": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Publications",
            "type": "array"
          },
          "interests": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Interests",
            "type": "array"
          }
        },
        "required": [
          "personal_infos",
          "education",
          "work_experience"
        ],
        "title": "ResumeExtractedData",
        "type": "object"
      },
      "ResumeLang": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "code": {
            "title": "Code",
            "type": "string"
          }
        },
        "required": [
          "name",
          "code"
        ],
        "title": "ResumeLang",
        "type": "object"
      },
      "ResumeLocation": {
        "properties": {
          "formatted_location": {
            "title": "Formatted Location",
            "type": "string"
          },
          "postal_code": {
            "title": "Postal Code",
            "type": "string"
          },
          "region": {
            "title": "Region",
            "type": "string"
          },
          "country": {
            "title": "Country",
            "type": "string"
          },
          "country_code": {
            "title": "Country Code",
            "type": "string"
          },
          "raw_input_location": {
            "title": "Raw Input Location",
            "type": "string"
          },
          "street": {
            "title": "Street",
            "type": "string"
          },
          "street_number": {
            "title": "Street Number",
            "type": "string"
          },
          "appartment_number": {
            "title": "Appartment Number",
            "type": "string"
          },
          "city": {
            "title": "City",
            "type": "string"
          }
        },
        "required": [
          "formatted_location",
          "postal_code",
          "region",
          "country",
          "country_code",
          "raw_input_location",
          "street",
          "street_number",
          "appartment_number",
          "city"
        ],
        "title": "ResumeLocation",
        "type": "object"
      },
      "ResumePersonalInfo": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ResumePersonalName"
          },
          "address": {
            "$ref": "#/components/schemas/ResumeLocation"
          },
          "self_summary": {
            "title": "Self Summary",
            "type": "string"
          },
          "objective": {
            "title": "Objective",
            "type": "string"
          },
          "date_of_birth": {
            "title": "Date Of Birth",
            "type": "string"
          },
          "place_of_birth": {
            "title": "Place Of Birth",
            "type": "string"
          },
          "phones": {
            "items": {
              "type": "string"
            },
            "title": "Phones",
            "type": "array"
          },
          "mails": {
            "items": {
              "type": "string"
            },
            "title": "Mails",
            "type": "array"
          },
          "urls": {
            "items": {
              "type": "string"
            },
            "title": "Urls",
            "type": "array"
          },
          "fax": {
            "items": {
              "type": "string"
            },
            "title": "Fax",
            "type": "array"
          },
          "current_profession": {
            "title": "Current Profession",
            "type": "string"
          },
          "gender": {
            "title": "Gender",
            "type": "string"
          },
          "nationality": {
            "title": "Nationality",
            "type": "string"
          },
          "martial_status": {
            "title": "Martial Status",
            "type": "string"
          },
          "current_salary": {
            "title": "Current Salary",
            "type": "string"
          }
        },
        "required": [
          "name",
          "address",
          "self_summary",
          "objective",
          "date_of_birth",
          "place_of_birth",
          "current_profession",
          "gender",
          "nationality",
          "martial_status",
          "current_salary"
        ],
        "title": "ResumePersonalInfo",
        "type": "object"
      },
      "ResumePersonalName": {
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "raw_name": {
            "title": "Raw Name",
            "type": "string"
          },
          "middle": {
            "title": "Middle",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "prefix": {
            "title": "Prefix",
            "type": "string"
          },
          "sufix": {
            "title": "Sufix",
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "raw_name",
          "middle",
          "title",
          "prefix",
          "sufix"
        ],
        "title": "ResumePersonalName",
        "type": "object"
      },
      "ResumeSkill": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "ResumeSkill",
        "type": "object"
      },
      "ResumeWorkExp": {
        "properties": {
          "total_years_experience": {
            "title": "Total Years Experience",
            "type": "string"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/ResumeWorkExpEntry"
            },
            "title": "Entries",
            "type": "array"
          }
        },
        "required": [
          "total_years_experience"
        ],
        "title": "ResumeWorkExp",
        "type": "object"
      },
      "ResumeWorkExpEntry": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "company": {
            "title": "Company",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/ResumeLocation"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "industry": {
            "title": "Industry",
            "type": "string"
          }
        },
        "required": [
          "title",
          "start_date",
          "end_date",
          "company",
          "location",
          "description",
          "industry"
        ],
        "title": "ResumeWorkExpEntry",
        "type": "object"
      },
      "Row": {
        "properties": {
          "cells": {
            "items": {
              "$ref": "#/components/schemas/Cell"
            },
            "title": "Cells",
            "type": "array"
          }
        },
        "title": "Row",
        "type": "object"
      },
      "SafeSubCategoryType": {
        "enum": [
          "Safe",
          "NotSafe"
        ],
        "title": "SafeSubCategoryType",
        "type": "string"
      },
      "SegmentSentimentAnalysisDataClass": {
        "description": "This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\n    Args:\n        - segment (str): The segment analyzed\n        - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n        - sentiment_rate (float between 0 and 1): Rate of sentiment\n    ",
        "properties": {
          "segment": {
            "title": "Segment",
            "type": "string"
          },
          "sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SentimentB6eEnum"
              }
            ],
            "title": "Sentiment"
          },
          "sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "Sentiment Rate",
            "type": "integer"
          }
        },
        "required": [
          "segment",
          "sentiment",
          "sentiment_rate"
        ],
        "title": "SegmentSentimentAnalysisDataClass",
        "type": "object"
      },
      "SentimentB6eEnum": {
        "enum": [
          "Positive",
          "Negative",
          "Neutral"
        ],
        "type": "string"
      },
      "SexualSubCategoryType": {
        "enum": [
          "SexualActivity",
          "SexualSituations",
          "Nudity",
          "PartialNudity",
          "Suggestive",
          "AdultToys",
          "RevealingClothes",
          "Sexual"
        ],
        "title": "SexualSubCategoryType",
        "type": "string"
      },
      "SimilarityMetricEnum": {
        "enum": [
          "cosine",
          "manhattan",
          "euclidean"
        ],
        "type": "string",
        "description": "* `cosine` - cosine\n* `manhattan` - manhattan\n* `euclidean` - euclidean"
      },
      "SpeechDiarization": {
        "properties": {
          "total_speakers": {
            "title": "Total Speakers",
            "type": "integer"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/SpeechDiarizationEntry"
            },
            "title": "Entries",
            "type": "array"
          },
          "error_message": {
            "default": null,
            "title": "Error Message",
            "type": "string"
          }
        },
        "required": [
          "total_speakers"
        ],
        "title": "SpeechDiarization",
        "type": "object"
      },
      "SpeechDiarizationEntry": {
        "properties": {
          "segment": {
            "title": "Segment",
            "type": "string"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string"
          },
          "end_time": {
            "title": "End Time",
            "type": "string"
          },
          "speaker": {
            "title": "Speaker",
            "type": "integer"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "segment",
          "start_time",
          "end_time",
          "speaker",
          "confidence"
        ],
        "title": "SpeechDiarizationEntry",
        "type": "object"
      },
      "SpeechToTextAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "provider_params": {
            "type": "string",
            "description": "\nParameters specific to the provider that you want to send along the request.\n\nit should take a *provider* name as key and an object of parameters as value.\n\nExample:\n\n    {\n      \"deepgram\": {\n        \"filler_words\": true,\n        \"smart_format\": true,\n        \"callback\": \"https://webhook.site/0000\"\n      },\n      \"assembly\": {\n        \"webhook_url\": \"https://webhook.site/0000\"\n      }\n    }\n\nPlease refer to the documentation of each provider to see which parameters to send.\n"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code expected (ex: en, fr)"
          },
          "speakers": {
            "type": "integer",
            "nullable": true,
            "default": 2,
            "description": "Number of speakers in the file audio"
          },
          "profanity_filter": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather or not the service will filter profanity and replace inappropriate words with a series of asterisks"
          },
          "custom_vocabulary": {
            "type": "string",
            "default": "",
            "description": "List of words or composed words to be detected by the speech to text engine. (Ex: Word, Mike, Draw, Los Angeles,...)"
          },
          "convert_to_wav": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the audio/video file to wav format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "SpellCheckItem": {
        "description": "Represents a spell check item with suggestions.\n\n    Args:\n        text (str): The text to spell check.\n        type (str, optional): The type of the text.\n        offset (int): The offset of the text.\n        length (int): The length of the text.\n        suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\n    Raises:\n        ValueError: If the offset or length is not positive.\n\n    Returns:\n        SpellCheckItem: An instance of the SpellCheckItem class.\n    ",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "offset": {
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          },
          "length": {
            "minimum": 0,
            "title": "Length",
            "type": "integer"
          },
          "suggestions": {
            "items": {
              "$ref": "#/components/schemas/SuggestionItem"
            },
            "title": "Suggestions",
            "type": "array"
          }
        },
        "required": [
          "text",
          "type",
          "offset",
          "length"
        ],
        "title": "SpellCheckItem",
        "type": "object"
      },
      "StateEnum": {
        "enum": [
          "finished",
          "failed",
          "Timeout error",
          "processing"
        ],
        "type": "string",
        "description": "* `finished` - finished\n* `failed` - failed\n* `Timeout error` - Timeout error\n* `processing` - processing"
      },
      "StatusE80Enum": {
        "enum": [
          "succeeded",
          "failed",
          "finished",
          "processing"
        ],
        "type": "string",
        "description": "* `succeeded` - Status Succeeded\n* `failed` - Status Failed\n* `finished` - Status Finished\n* `processing` - Status Processing"
      },
      "StatusF43Enum": {
        "enum": [
          "sucess",
          "fail"
        ],
        "type": "string"
      },
      "Subfeature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "fullname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "SuggestionItem": {
        "description": "\n    Represents a suggestion for a misspelled word.\n\n    Args:\n        suggestion (str): The suggested text.\n        score (float, optional): The score of the suggested text (between 0 and 1).\n\n    Raises:\n        ValueError: If the score is not between 0 and 1.\n\n    Returns:\n        SuggestionItem: An instance of the SuggestionItem class.\n    ",
        "properties": {
          "suggestion": {
            "title": "Suggestion",
            "type": "string"
          },
          "score": {
            "maximum": 1,
            "minimum": 0,
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "suggestion",
          "score"
        ],
        "title": "SuggestionItem",
        "type": "object"
      },
      "Table": {
        "properties": {
          "rows": {
            "items": {
              "$ref": "#/components/schemas/Row"
            },
            "title": "Rows",
            "type": "array"
          },
          "num_rows": {
            "title": "Num Rows",
            "type": "integer"
          },
          "num_cols": {
            "title": "Num Cols",
            "type": "integer"
          }
        },
        "required": [
          "num_rows",
          "num_cols"
        ],
        "title": "Table",
        "type": "object"
      },
      "TargetProviderEnum": {
        "enum": [
          "google",
          "openai",
          "cohere"
        ],
        "type": "string",
        "description": "* `google` - google\n* `openai` - openai\n* `cohere` - cohere"
      },
      "Taxes": {
        "properties": {
          "taxes": {
            "default": null,
            "title": "Taxes",
            "type": "integer"
          },
          "rate": {
            "default": null,
            "title": "Rate",
            "type": "integer"
          }
        },
        "title": "Taxes",
        "type": "object"
      },
      "TaxesInvoice": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "integer"
          },
          "rate": {
            "title": "Rate",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "rate"
        ],
        "title": "TaxesInvoice",
        "type": "object"
      },
      "TextModerationItem": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "likelihood": {
            "title": "Likelihood",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "subcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToxicSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ContentSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SexualSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ViolenceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/DrugAndAlcoholSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/FinanceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/HateAndExtremismSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SafeSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OtherSubCategoryType"
              }
            ],
            "title": "Subcategory"
          },
          "likelihood_score": {
            "title": "Likelihood Score",
            "type": "integer"
          }
        },
        "required": [
          "label",
          "likelihood",
          "category",
          "subcategory",
          "likelihood_score"
        ],
        "title": "TextModerationItem",
        "type": "object"
      },
      "TextToSpeechAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Language code expected (ex: en, fr)"
          },
          "option": {
            "default": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OptionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              }
            ]
          },
          "rate": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "nullable": true,
            "default": 0,
            "description": "Increase or decrease the speaking rate by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "pitch": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "nullable": true,
            "default": 0,
            "description": "Increase or decrease the speaking pitch by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "volume": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "nullable": true,
            "default": 0,
            "description": "Increase or decrease the audio volume by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "audio_format": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Optional parameter to specify the audio format in which the audio will be generated. By default,             audios are encoded in MP3, except for lovoai which use the wav container."
          },
          "sampling_rate": {
            "type": "integer",
            "maximum": 200000,
            "minimum": 0,
            "nullable": true,
            "default": 0,
            "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified, the audio will be converted             either to the right passed value, or to a the nearest value acceptable by the provider"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "ToxicSubCategoryType": {
        "enum": [
          "Insult",
          "Obscene",
          "Derogatory",
          "Profanity",
          "Threat",
          "Toxic"
        ],
        "title": "ToxicSubCategoryType",
        "type": "string"
      },
      "TypeEnum": {
        "enum": [
          "db",
          "bucket",
          "db_vector",
          "ai"
        ],
        "type": "string",
        "description": "* `db` - Db\n* `bucket` - Bucket\n* `db_vector` - Db Vector\n* `ai` - Ai"
      },
      "TypeOfDataEnum": {
        "enum": [
          "TRAINING",
          "TEST"
        ],
        "type": "string",
        "description": "* `TRAINING` - TRAINING\n* `TEST` - TEST"
      },
      "UniversalTranslatorCallRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "Source language code (ex: en, fr)"
          },
          "target_language": {
            "type": "string",
            "minLength": 1,
            "description": "Target language code (ex: en, fr)"
          }
        },
        "required": [
          "target_language",
          "text"
        ]
      },
      "UniversalTranslatorCreatet": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "The language code from which the text will be translated",
            "maxLength": 10
          },
          "target_language": {
            "type": "string",
            "nullable": true,
            "description": "The language code in which the text will be translated",
            "maxLength": 10
          },
          "project_name": {
            "type": "string",
            "description": "The project name",
            "maxLength": 200
          },
          "fall_back_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 30
            }
          },
          "provider": {
            "type": "string",
            "maxLength": 50
          }
        },
        "required": [
          "project_name",
          "provider"
        ]
      },
      "UniversalTranslatorCreatetRequest": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code from which the text will be translated",
            "maxLength": 10
          },
          "target_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code in which the text will be translated",
            "maxLength": 10
          },
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "The project name",
            "maxLength": 200
          },
          "fall_back_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            }
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        },
        "required": [
          "project_name",
          "provider"
        ]
      },
      "UniversalTranslatorList": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The language code from which the text will be translated"
          },
          "target_language": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The language code in which the text will be translated"
          },
          "project_name": {
            "type": "string",
            "readOnly": true,
            "description": "The project name"
          },
          "fall_back_providers": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "Providers to use in case of an error"
          },
          "provider": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "fall_back_providers",
          "project_id",
          "project_name",
          "provider",
          "source_language",
          "target_language"
        ]
      },
      "UpperCloth": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "confidence"
        ],
        "title": "UpperCloth",
        "type": "object"
      },
      "VideoBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoBoundingBox",
        "type": "object"
      },
      "VideoFace": {
        "properties": {
          "offset": {
            "title": "Offset",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoBoundingBox"
          },
          "attributes": {
            "$ref": "#/components/schemas/FaceAttributes"
          },
          "landmarks": {
            "$ref": "#/components/schemas/LandmarksVideo"
          }
        },
        "required": [
          "offset",
          "bounding_box",
          "attributes",
          "landmarks"
        ],
        "title": "VideoFace",
        "type": "object"
      },
      "VideoFacePoses": {
        "properties": {
          "pitch": {
            "title": "Pitch",
            "type": "integer"
          },
          "roll": {
            "title": "Roll",
            "type": "integer"
          },
          "yawn": {
            "title": "Yawn",
            "type": "integer"
          }
        },
        "required": [
          "pitch",
          "roll",
          "yawn"
        ],
        "title": "VideoFacePoses",
        "type": "object"
      },
      "VideoLabel": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "timestamp": {
            "items": {
              "$ref": "#/components/schemas/VideoLabelTimeStamp"
            },
            "title": "Timestamp",
            "type": "array"
          },
          "category": {
            "items": {
              "type": "string"
            },
            "title": "Category",
            "type": "array"
          },
          "bounding_box": {
            "items": {
              "$ref": "#/components/schemas/VideoLabelBoundingBox"
            },
            "title": "Bounding Box",
            "type": "array"
          }
        },
        "required": [
          "name",
          "confidence"
        ],
        "title": "VideoLabel",
        "type": "object"
      },
      "VideoLabelBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoLabelBoundingBox",
        "type": "object"
      },
      "VideoLabelTimeStamp": {
        "properties": {
          "start": {
            "title": "Start",
            "type": "integer"
          },
          "end": {
            "title": "End",
            "type": "integer"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "title": "VideoLabelTimeStamp",
        "type": "object"
      },
      "VideoLogo": {
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoLogoBoundingBox"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "timestamp",
          "bounding_box",
          "confidence"
        ],
        "title": "VideoLogo",
        "type": "object"
      },
      "VideoLogoBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoLogoBoundingBox",
        "type": "object"
      },
      "VideoObjectBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoObjectBoundingBox",
        "type": "object"
      },
      "VideoPersonPoses": {
        "properties": {
          "pitch": {
            "title": "Pitch",
            "type": "integer"
          },
          "roll": {
            "title": "Roll",
            "type": "integer"
          },
          "yaw": {
            "title": "Yaw",
            "type": "integer"
          }
        },
        "required": [
          "pitch",
          "roll",
          "yaw"
        ],
        "title": "VideoPersonPoses",
        "type": "object"
      },
      "VideoPersonQuality": {
        "properties": {
          "brightness": {
            "title": "Brightness",
            "type": "integer"
          },
          "sharpness": {
            "title": "Sharpness",
            "type": "integer"
          }
        },
        "required": [
          "brightness",
          "sharpness"
        ],
        "title": "VideoPersonQuality",
        "type": "object"
      },
      "VideoText": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "frames": {
            "items": {
              "$ref": "#/components/schemas/VideoTextFrames"
            },
            "title": "Frames",
            "type": "array"
          }
        },
        "required": [
          "text"
        ],
        "title": "VideoText",
        "type": "object"
      },
      "VideoTextBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoTextBoundingBox",
        "type": "object"
      },
      "VideoTextFrames": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoTextBoundingBox"
          }
        },
        "required": [
          "confidence",
          "timestamp",
          "bounding_box"
        ],
        "title": "VideoTextFrames",
        "type": "object"
      },
      "VideoTrackingBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoTrackingBoundingBox",
        "type": "object"
      },
      "VideoTrackingPerson": {
        "properties": {
          "tracked": {
            "items": {
              "$ref": "#/components/schemas/PersonTracking"
            },
            "title": "Tracked",
            "type": "array"
          }
        },
        "title": "VideoTrackingPerson",
        "type": "object"
      },
      "ViolenceSubCategoryType": {
        "enum": [
          "GraphicViolenceOrGore",
          "PhysicalViolence",
          "WeaponViolence",
          "Violence"
        ],
        "title": "ViolenceSubCategoryType",
        "type": "string"
      },
      "Word": {
        "description": "Word of a document\n\n    Attributes:\n        text (str): Text detected in the word\n        bounding_boxes (Sequence[BoundingBox]): Bounding boxes of the words in the word\n        confidence (float): Confidence score of the word\n    ",
        "properties": {
          "text": {
            "description": "Text detected in the word",
            "title": "Text",
            "type": "string"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Bounding boxes of the words in the word"
          },
          "confidence": {
            "description": "Confidence score of the word",
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "bounding_box",
          "confidence"
        ],
        "title": "Word",
        "type": "object"
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "output_node": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          }
        },
        "required": [
          "content",
          "created_at",
          "id",
          "updated_at"
        ]
      },
      "WorkflowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "output_node": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          }
        },
        "required": [
          "content"
        ]
      },
      "WorklowResponseType": {
        "oneOf": [],
        "discriminator": {
          "propertyName": "type",
          "mapping": {}
        }
      },
      "XMergeList": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "readOnly": true
          },
          "project_type": {
            "$ref": "#/components/schemas/XMergeListProjectTypeEnum"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "created",
          "project_id",
          "project_name",
          "project_type",
          "subfeature"
        ]
      },
      "XMergeListProjectTypeEnum": {
        "enum": [
          "DOC_PARSER",
          "TEXT"
        ],
        "type": "string",
        "description": "* `DOC_PARSER` - Doc Parser\n* `TEXT` - Text"
      },
      "YodaAskLlmResponse": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "llm_provider": {
            "title": "Llm Provider",
            "type": "string"
          },
          "llm_model": {
            "title": "Llm Model",
            "type": "string"
          }
        },
        "required": [
          "result",
          "llm_provider",
          "llm_model"
        ],
        "title": "YodaAskLlmResponse",
        "type": "object"
      },
      "YodaCreateProjectResponse": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "title": "Project Id",
            "type": "string"
          }
        },
        "required": [
          "project_id"
        ],
        "title": "YodaCreateProjectResponse",
        "type": "object"
      },
      "YodaDeleteResponse": {
        "properties": {
          "result": {
            "default": "Done!",
            "title": "Result",
            "type": "string"
          }
        },
        "title": "YodaDeleteResponse",
        "type": "object"
      },
      "YodaInfoResponse": {
        "properties": {
          "db_provider": {
            "title": "Db Provider",
            "type": "string"
          },
          "embeddings_provider": {
            "title": "Embeddings Provider",
            "type": "string"
          },
          "llm_provider": {
            "title": "Llm Provider",
            "type": "string"
          },
          "llm_model": {
            "title": "Llm Model",
            "type": "string"
          },
          "collection_size": {
            "title": "Collection Size",
            "type": "integer"
          }
        },
        "required": [
          "db_provider",
          "embeddings_provider",
          "llm_provider",
          "llm_model",
          "collection_size"
        ],
        "title": "YodaInfoResponse",
        "type": "object"
      },
      "YodaQueryResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/YodaQueryResponseItem"
            },
            "title": "Result",
            "type": "array"
          }
        },
        "required": [
          "result"
        ],
        "title": "YodaQueryResponse",
        "type": "object"
      },
      "YodaQueryResponseItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "payload": {
            "$ref": "#/components/schemas/YodaQueryResponsePayload"
          },
          "vector": {
            "title": "Vector"
          }
        },
        "required": [
          "id",
          "version",
          "score",
          "payload",
          "vector"
        ],
        "title": "YodaQueryResponseItem",
        "type": "object"
      },
      "YodaQueryResponsePayload": {
        "properties": {
          "metadata": {
            "title": "Metadata",
            "type": "object"
          },
          "page_content": {
            "title": "Page Content",
            "type": "string"
          }
        },
        "required": [
          "metadata",
          "page_content"
        ],
        "title": "YodaQueryResponsePayload",
        "type": "object"
      },
      "asyncaudiospeech_to_text_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/audiospeech_to_text_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncaudiospeech_to_text_asyncResponseModel",
        "type": "object"
      },
      "asyncaudiotext_to_speech_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/audiotext_to_speech_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncaudiotext_to_speech_asyncResponseModel",
        "type": "object"
      },
      "asyncocranonymization_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocranonymization_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocranonymization_asyncResponseModel",
        "type": "object"
      },
      "asyncocrcustom_document_parsing_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocrcustom_document_parsing_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocrcustom_document_parsing_asyncResponseModel",
        "type": "object"
      },
      "asyncocrocr_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocrocr_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocrocr_asyncResponseModel",
        "type": "object"
      },
      "asyncocrocr_tables_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocrocr_tables_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocrocr_tables_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoexplicit_content_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoexplicit_content_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoexplicit_content_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoface_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoface_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoface_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideolabel_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videolabel_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideolabel_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideologo_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videologo_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideologo_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoobject_tracking_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoobject_tracking_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoobject_tracking_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoperson_tracking_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoperson_tracking_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoperson_tracking_asyncResponseModel",
        "type": "object"
      },
      "asyncvideotext_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videotext_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideotext_detection_asyncResponseModel",
        "type": "object"
      },
      "audiospeech_to_text_asyncModel": {
        "properties": {
          "deepgram": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839481056"
              }
            ],
            "default": null
          },
          "revai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839889456"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298837206192"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298833190400"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845390192"
              }
            ],
            "default": null
          },
          "speechmatics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839918240"
              }
            ],
            "default": null
          },
          "faker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845378320"
              }
            ],
            "default": null
          },
          "assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839915120"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845332816"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839417168"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839421056"
              }
            ],
            "default": null
          },
          "symbl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839423152"
              }
            ],
            "default": null
          },
          "voci": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845470704"
              }
            ],
            "default": null
          },
          "gladia": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839482784"
              }
            ],
            "default": null
          },
          "voxist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839486128"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845200832"
              }
            ],
            "default": null
          }
        },
        "title": "audiospeech_to_text_asyncModel",
        "type": "object"
      },
      "audiotext_to_speechResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839115888"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839114848"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839113808"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839112768"
              }
            ],
            "default": null
          },
          "elevenlabs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839111728"
              }
            ],
            "default": null
          },
          "lovoai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839110688"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839227376"
              }
            ],
            "default": null
          }
        },
        "title": "audiotext_to_speechResponseModel",
        "type": "object"
      },
      "audiotext_to_speechTextToSpeechRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Language code expected (ex: en, fr)"
          },
          "option": {
            "default": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OptionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              }
            ]
          },
          "rate": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "default": 0,
            "description": "Increase or decrease the speaking rate by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "pitch": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "default": 0,
            "description": "Increase or decrease the speaking pitch by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "volume": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "default": 0,
            "description": "Increase or decrease the audio volume by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "audio_format": {
            "type": "string",
            "default": "",
            "description": "Optional parameter to specify the audio format in which the audio will be generated. By default,             audios are encoded in MP3, except for lovoai which use the wav container."
          },
          "sampling_rate": {
            "type": "integer",
            "maximum": 200000,
            "minimum": 0,
            "default": 0,
            "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified, the audio will be converted             either to the right passed value, or to a the nearest value acceptable by the provider"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "audiotext_to_speech_asyncModel": {
        "properties": {
          "lovoai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845117472"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845118416"
              }
            ],
            "default": null
          }
        },
        "title": "audiotext_to_speech_asyncModel",
        "type": "object"
      },
      "imageanonymizationAnonymizationDataClass": {
        "properties": {
          "image": {
            "title": "Image",
            "type": "string"
          },
          "image_resource_url": {
            "title": "Image Resource Url",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image",
          "image_resource_url",
          "status"
        ],
        "title": "imageanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "imageanonymizationResponseModel": {
        "properties": {
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/imageanonymizationAnonymizationDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "imageanonymizationResponseModel",
        "type": "object"
      },
      "imageanonymizationimagelandmark_detectionimageexplicit_contentImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageautoml_classificationAutomlClassificationCreateProjectDataClass": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "project_id": {
            "title": "Project Id",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "name",
          "project_id",
          "status"
        ],
        "title": "imageautoml_classificationAutomlClassificationCreateProjectDataClass",
        "type": "object"
      },
      "imageautoml_classificationResponseModel": {
        "properties": {
          "nyckel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/imageautoml_classificationAutomlClassificationCreateProjectDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "imageautoml_classificationResponseModel",
        "type": "object"
      },
      "imageautoml_classificationcreate_projectAutomlClassificationCreateProjectRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Name of your project",
            "maxLength": 250
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageautoml_classificationdelete_projectAutomlClassificationDeleteRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          }
        },
        "required": [
          "project_id",
          "providers"
        ]
      },
      "imagebackground_removalBackgroundRemovalRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "provider_params": {
            "type": "string",
            "default": {},
            "description": "Provider specific parameters"
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagebackground_removalResponseModel": {
        "properties": {
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844865376"
              }
            ],
            "default": null
          },
          "stabilityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844863184"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844874864"
              }
            ],
            "default": null
          },
          "photoroom": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844875808"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844869024"
              }
            ],
            "default": null
          }
        },
        "title": "imagebackground_removalResponseModel",
        "type": "object"
      },
      "imageembeddingsEmbeddingsDataClass": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "imageembeddingsEmbeddingsRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "representation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RepresentationEnum"
              }
            ],
            "description": "The type of embedding representation to embed the image with\n\n* `document` - document\n* `query` - query\n* `symetric` - symetric"
          }
        },
        "required": [
          "providers",
          "representation"
        ]
      },
      "imageembeddingsResponseModel": {
        "properties": {
          "alephalpha": {
            "allOf": [
              {
                "$ref": "#/components/schemas/imageembeddingsEmbeddingsDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "imageembeddingsResponseModel",
        "type": "object"
      },
      "imageexplicit_contentResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845288352"
              }
            ],
            "default": null
          },
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845292720"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298839469312"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840244848"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840266080"
              }
            ],
            "default": null
          },
          "picpurify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840275136"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840284192"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840291376"
              }
            ],
            "default": null
          }
        },
        "title": "imageexplicit_contentResponseModel",
        "type": "object"
      },
      "imageface_compareFaceCompareRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file1": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file1_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file2": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file2_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageface_compareResponseModel": {
        "properties": {
          "facepp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_compareFaceCompareDataClass_94298844720224"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_compareFaceCompareDataClass_94298844702784"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_compareFaceCompareDataClass_94298844703728"
              }
            ],
            "default": null
          }
        },
        "title": "imageface_compareResponseModel",
        "type": "object"
      },
      "imageface_detectionFaceDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageface_detectionResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839908320"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845132480"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845054992"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839858384"
              }
            ],
            "default": null
          },
          "skybiometry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845061024"
              }
            ],
            "default": null
          },
          "picpurify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845317744"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839454304"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839873520"
              }
            ],
            "default": null
          }
        },
        "title": "imageface_detectionResponseModel",
        "type": "object"
      },
      "imageface_recognitionResponseModel": {
        "properties": {
          "facepp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844687504"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844699968"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844689792"
              }
            ],
            "default": null
          }
        },
        "title": "imageface_recognitionResponseModel",
        "type": "object"
      },
      "imageface_recognitiondelete_faceFaceRecognitionDeleteFaceRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "face_id": {
            "type": "string",
            "minLength": 1,
            "description": "ID of face to delete"
          }
        },
        "required": [
          "face_id",
          "providers"
        ]
      },
      "imageface_recognitionrecognizeimageface_recognitionadd_faceFaceRecognitionDetectFaceRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|bmp)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagegenerationGenerationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Description of the desired image(s). The maximum length is 1000 characters",
            "maxLength": 1000
          },
          "resolution": {
            "$ref": "#/components/schemas/ResolutionEnum"
          },
          "num_images": {
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "default": 1,
            "description": "The number of images to generate. Must be between 1 and 10."
          }
        },
        "required": [
          "providers",
          "resolution",
          "text"
        ]
      },
      "imagegenerationResponseModel": {
        "properties": {
          "replicate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844751248"
              }
            ],
            "default": null
          },
          "stabilityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844775808"
              }
            ],
            "default": null
          },
          "deepai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844764064"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844768368"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844783328"
              }
            ],
            "default": null
          }
        },
        "title": "imagegenerationResponseModel",
        "type": "object"
      },
      "imagelandmark_detectionResponseModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298840305136"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298843639776"
              }
            ],
            "default": null
          }
        },
        "title": "imagelandmark_detectionResponseModel",
        "type": "object"
      },
      "imagelogo_detectionLogoDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagelogo_detectionResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843678848"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843679792"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843671904"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843686208"
              }
            ],
            "default": null
          },
          "smartclick": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843689376"
              }
            ],
            "default": null
          }
        },
        "title": "imagelogo_detectionResponseModel",
        "type": "object"
      },
      "imageobject_detectionObjectDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageobject_detectionResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298839225760"
              }
            ],
            "default": null
          },
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845333760"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845543616"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845547920"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845087168"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845092080"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845095248"
              }
            ],
            "default": null
          }
        },
        "title": "imageobject_detectionResponseModel",
        "type": "object"
      },
      "imagequestion_answerQuestionAnswerRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "question": {
            "type": "string",
            "minLength": 1,
            "description": "Question about the image"
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 2048,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagequestion_answerResponseModel": {
        "properties": {
          "alephalpha": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844842592"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844822496"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844826800"
              }
            ],
            "default": null
          }
        },
        "title": "imagequestion_answerResponseModel",
        "type": "object"
      },
      "imagesearchResponseModel": {
        "properties": {
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagesearchSearchDeleteImageDataClass_94298843754592"
              }
            ],
            "default": null
          },
          "nyckel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagesearchSearchDeleteImageDataClass_94298843751472"
              }
            ],
            "default": null
          }
        },
        "title": "imagesearchResponseModel",
        "type": "object"
      },
      "imagesearchdelete_imageDeleteImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "image_name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "image_name",
          "providers"
        ]
      },
      "imagesearchlaunch_similaritySearchImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagesearchupload_imageUploadImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "image_name": {
            "type": "string",
            "minLength": 1,
            "description": "The image name need to have the extension of the file."
          }
        },
        "required": [
          "image_name",
          "providers"
        ]
      },
      "ocranonymization_asyncModel": {
        "properties": {
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844311232"
              }
            ],
            "default": null
          },
          "privateai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298848301136"
              }
            ],
            "default": null
          },
          "readyredact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844336272"
              }
            ],
            "default": null
          }
        },
        "title": "ocranonymization_asyncModel",
        "type": "object"
      },
      "ocrbank_check_parsingBankCheckParsingRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrbank_check_parsingResponseModel": {
        "properties": {
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844728656"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844949824"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844988352"
              }
            ],
            "default": null
          },
          "extracta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844008032"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844024768"
              }
            ],
            "default": null
          }
        },
        "title": "ocrbank_check_parsingResponseModel",
        "type": "object"
      },
      "ocrcustom_document_parsing_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844288368"
              }
            ],
            "default": null
          },
          "extracta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844306784"
              }
            ],
            "default": null
          }
        },
        "title": "ocrcustom_document_parsing_asyncModel",
        "type": "object"
      },
      "ocrdata_extractionDataExtractionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrdata_extractionResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848270944"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848274704"
              }
            ],
            "default": null
          }
        },
        "title": "ocrdata_extractionResponseModel",
        "type": "object"
      },
      "ocrfinancial_parserFinancialParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          },
          "document_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentTypeEnum"
              }
            ],
            "default": "invoice",
            "description": "Specify the type of your document. Can be Set to 'auto-detect' for automatic detection if the provider supports it. Otherwise, the default is 'invoice'.\n\n* `auto-detect` - auto-detect\n* `invoice` - invoice\n* `receipt` - receipt"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrfinancial_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848721216"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848704768"
              }
            ],
            "default": null
          },
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848717936"
              }
            ],
            "default": null
          },
          "dataleon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848364176"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848694960"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848375584"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848402640"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848388816"
              }
            ],
            "default": null
          },
          "tabscanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848389760"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848590304"
              }
            ],
            "default": null
          }
        },
        "title": "ocrfinancial_parserResponseModel",
        "type": "object"
      },
      "ocridentity_parserIdentityParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocridentity_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844123024"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844246800"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844235456"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844379456"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844255440"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844262112"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844265872"
              }
            ],
            "default": null
          }
        },
        "title": "ocridentity_parserResponseModel",
        "type": "object"
      },
      "ocrinvoice_parserInvoiceParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrinvoice_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298844917760"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843835248"
              }
            ],
            "default": null
          },
          "rossum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843882080"
              }
            ],
            "default": null
          },
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843874432"
              }
            ],
            "default": null
          },
          "dataleon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843901776"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843920288"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843913232"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843934656"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843953168"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843907904"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843967536"
              }
            ],
            "default": null
          }
        },
        "title": "ocrinvoice_parserResponseModel",
        "type": "object"
      },
      "ocrocrOcrRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrocrResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298843655008"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298839917200"
              }
            ],
            "default": null
          },
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298844818144"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298843729184"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298845006480"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298845010784"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298845015088"
              }
            ],
            "default": null
          }
        },
        "title": "ocrocrResponseModel",
        "type": "object"
      },
      "ocrocr_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844316224"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844372512"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844369168"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844322000"
              }
            ],
            "default": null
          }
        },
        "title": "ocrocr_asyncModel",
        "type": "object"
      },
      "ocrocr_tables_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844035072"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844005984"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844006928"
              }
            ],
            "default": null
          }
        },
        "title": "ocrocr_tables_asyncModel",
        "type": "object"
      },
      "ocrreceipt_parserReceiptParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrreceipt_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844148672"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844103664"
              }
            ],
            "default": null
          },
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844132736"
              }
            ],
            "default": null
          },
          "dataleon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844192272"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844196576"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844154400"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844161664"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844176864"
              }
            ],
            "default": null
          },
          "tabscanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844181168"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844188432"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844205440"
              }
            ],
            "default": null
          }
        },
        "title": "ocrreceipt_parserResponseModel",
        "type": "object"
      },
      "ocrresume_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298844060400"
              }
            ],
            "default": null
          },
          "extracta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298844049904"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298844075136"
              }
            ],
            "default": null
          },
          "senseloaf": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298845178144"
              }
            ],
            "default": null
          },
          "hireability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298845171232"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298845176416"
              }
            ],
            "default": null
          }
        },
        "title": "ocrresume_parserResponseModel",
        "type": "object"
      },
      "ocrresume_parserResumeParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298833190400": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298837206192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839417168": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839421056": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839423152": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839481056": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839482784": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839486128": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839889456": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839915120": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839918240": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845200832": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845332816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845378320": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845390192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845470704": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839110688": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839111728": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839112768": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839113808": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839114848": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839115888": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839227376": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845117472": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "id",
          "final_status"
        ],
        "title": "audiotext_to_speech_asyncTextToSpeechAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845118416": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "id",
          "final_status"
        ],
        "title": "audiotext_to_speech_asyncTextToSpeechAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844863184": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844865376": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844869024": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844874864": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844875808": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298839469312": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840244848": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840266080": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840275136": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840284192": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840291376": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845288352": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845292720": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_compareFaceCompareDataClass_94298844702784": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceMatch"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_compareFaceCompareDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_compareFaceCompareDataClass_94298844703728": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceMatch"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_compareFaceCompareDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_compareFaceCompareDataClass_94298844720224": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceMatch"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_compareFaceCompareDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839454304": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839858384": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839873520": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839908320": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845054992": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845061024": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845132480": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845317744": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844687504": {
        "properties": {
          "face_ids": {
            "items": {
              "type": "string"
            },
            "title": "Face Ids",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "face_ids",
          "status"
        ],
        "title": "imageface_recognitionFaceRecognitionAddFaceDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844689792": {
        "properties": {
          "face_ids": {
            "items": {
              "type": "string"
            },
            "title": "Face Ids",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "face_ids",
          "status"
        ],
        "title": "imageface_recognitionFaceRecognitionAddFaceDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844699968": {
        "properties": {
          "face_ids": {
            "items": {
              "type": "string"
            },
            "title": "Face Ids",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "face_ids",
          "status"
        ],
        "title": "imageface_recognitionFaceRecognitionAddFaceDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844751248": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844764064": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844768368": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844775808": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844783328": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298840305136": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LandmarkItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelandmark_detectionLandmarkDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298843639776": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LandmarkItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelandmark_detectionLandmarkDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843671904": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843678848": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843679792": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843686208": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843689376": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298839225760": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845087168": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845092080": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845095248": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845333760": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845543616": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845547920": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844822496": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagequestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844826800": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagequestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844842592": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagequestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__imagesearchSearchDeleteImageDataClass_94298843751472": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagesearchSearchDeleteImageDataClass",
        "type": "object"
      },
      "pydantic__main__imagesearchSearchDeleteImageDataClass_94298843754592": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagesearchSearchDeleteImageDataClass",
        "type": "object"
      },
      "pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844311232": {
        "properties": {
          "document": {
            "title": "Document",
            "type": "string"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "document",
          "document_url",
          "id",
          "final_status"
        ],
        "title": "ocranonymization_asyncAnonymizationAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844336272": {
        "properties": {
          "document": {
            "title": "Document",
            "type": "string"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "document",
          "document_url",
          "id",
          "final_status"
        ],
        "title": "ocranonymization_asyncAnonymizationAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298848301136": {
        "properties": {
          "document": {
            "title": "Document",
            "type": "string"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "document",
          "document_url",
          "id",
          "final_status"
        ],
        "title": "ocranonymization_asyncAnonymizationAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844008032": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844024768": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844728656": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844949824": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844988352": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844288368": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CustomDocumentParsingAsyncItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844306784": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CustomDocumentParsingAsyncItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848270944": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ItemDataExtraction"
            },
            "title": "Fields",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrdata_extractionDataExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848274704": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ItemDataExtraction"
            },
            "title": "Fields",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrdata_extractionDataExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848364176": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848375584": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848388816": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848389760": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848402640": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848590304": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848694960": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848704768": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848717936": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848721216": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844123024": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844235456": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844246800": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844255440": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844262112": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844265872": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844379456": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843835248": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843874432": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843882080": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843901776": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843907904": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843913232": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843920288": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843934656": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843953168": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843967536": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298844917760": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298839917200": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298843655008": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298843729184": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298844818144": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298845006480": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298845010784": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298845015088": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844316224": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844322000": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844369168": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844372512": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844005984": {
        "properties": {
          "pages": {
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "num_pages": {
            "title": "Num Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "num_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_tables_asyncOcrTablesAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844006928": {
        "properties": {
          "pages": {
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "num_pages": {
            "title": "Num Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "num_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_tables_asyncOcrTablesAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844035072": {
        "properties": {
          "pages": {
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "num_pages": {
            "title": "Num Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "num_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_tables_asyncOcrTablesAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844103664": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844132736": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844148672": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844154400": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844161664": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844176864": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844181168": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844188432": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844192272": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844196576": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844205440": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298844049904": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298844060400": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298844075136": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298845171232": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298845176416": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298845178144": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__textai_detectionAiDetectionDataClass_94298849793920": {
        "properties": {
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AiDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "ai_score",
          "status"
        ],
        "title": "textai_detectionAiDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textai_detectionAiDetectionDataClass_94298849859616": {
        "properties": {
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AiDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "ai_score",
          "status"
        ],
        "title": "textai_detectionAiDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textai_detectionAiDetectionDataClass_94298849860560": {
        "properties": {
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AiDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "ai_score",
          "status"
        ],
        "title": "textai_detectionAiDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298848351488": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298848365712": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298848410368": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298849569760": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298849579280": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849719376": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849720432": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849809152": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849818992": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849819936": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849822160": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849835104": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textcode_generationCodeGenerationDataClass_94298849609568": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textcode_generationCodeGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textcode_generationCodeGenerationDataClass_94298849610512": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textcode_generationCodeGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textcode_generationCodeGenerationDataClass_94298849664528": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textcode_generationCodeGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849705808": {
        "properties": {
          "classifications": {
            "items": {
              "$ref": "#/components/schemas/ItemCustomClassificationDataClass"
            },
            "title": "Classifications",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_classificationCustomClassificationDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849714720": {
        "properties": {
          "classifications": {
            "items": {
              "$ref": "#/components/schemas/ItemCustomClassificationDataClass"
            },
            "title": "Classifications",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_classificationCustomClassificationDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298844098480": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosCustomNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849633584": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosCustomNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849634528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosCustomNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849775920": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849780224": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849784528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849797840": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849798784": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849912528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298843986192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmotionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textemotion_detectionEmotionDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298850634960": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmotionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textemotion_detectionEmotionDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textentity_sentimentEntitySentimentDataClass_94298849904960": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "items",
          "status"
        ],
        "title": "textentity_sentimentEntitySentimentDataClass",
        "type": "object"
      },
      "pydantic__main__textentity_sentimentEntitySentimentDataClass_94298850605232": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "items",
          "status"
        ],
        "title": "textentity_sentimentEntitySentimentDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298848404528": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849617920": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849618864": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849621952": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849622896": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849623840": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849625664": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849635600": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849636544": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849365664": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849393104": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849394048": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849407344": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849411616": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849415920": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849420224": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849425136": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849429440": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849433744": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849387792": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849505728": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849513040": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849526560": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849447392": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849452304": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849461152": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849466672": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849470992": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849477040": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849481344": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849485648": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849493664": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849495392": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849499696": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298849892560": {
        "properties": {
          "plagia_score": {
            "title": "Plagia Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PlagiaDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "plagia_score",
          "status"
        ],
        "title": "textplagia_detectionPlagiaDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298850613760": {
        "properties": {
          "plagia_score": {
            "title": "Plagia Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PlagiaDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "plagia_score",
          "status"
        ],
        "title": "textplagia_detectionPlagiaDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298840306624": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298844680048": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849554064": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849581824": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textsearchSearchDataClass_94298844722160": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSearchDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsearchSearchDataClass",
        "type": "object"
      },
      "pydantic__main__textsearchSearchDataClass_94298848399744": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSearchDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsearchSearchDataClass",
        "type": "object"
      },
      "pydantic__main__textsearchSearchDataClass_94298848587408": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSearchDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsearchSearchDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844319616": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844349104": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844354976": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848357856": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848376528": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848428944": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848600544": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848622160": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848623104": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848636272": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848670192": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848718880": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849674736": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849726656": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849730960": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849733184": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849738816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849754512": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849758816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843792544": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843850736": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843877392": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843880304": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843887616": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843925824": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843958704": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843981952": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298844743520": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298845024272": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298845036048": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298848589120": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298849535008": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298848615840": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849350544": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849352912": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849367088": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849373152": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849381776": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298843973664": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848408320": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848409264": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848598208": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298849608080": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850676352": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850677296": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850685056": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850687872": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850688816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850691584": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850692528": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850695888": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850696832": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850700192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850655600": {
        "properties": {
          "file": {
            "title": "File",
            "type": "string"
          },
          "document_resource_url": {
            "title": "Document Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "file",
          "document_resource_url",
          "status"
        ],
        "title": "translationdocument_translationDocumentTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850740176": {
        "properties": {
          "file": {
            "title": "File",
            "type": "string"
          },
          "document_resource_url": {
            "title": "Document Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "file",
          "document_resource_url",
          "status"
        ],
        "title": "translationdocument_translationDocumentTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850609536": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850611552": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850624416": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850663200": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850706560": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850709632": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850716528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850727152": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850731456": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851358336": {
        "properties": {
          "moderation": {
            "items": {
              "$ref": "#/components/schemas/ContentNSFW"
            },
            "title": "Moderation",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851409072": {
        "properties": {
          "moderation": {
            "items": {
              "$ref": "#/components/schemas/ContentNSFW"
            },
            "title": "Moderation",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298839188672": {
        "properties": {
          "faces": {
            "items": {
              "$ref": "#/components/schemas/VideoFace"
            },
            "title": "Faces",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoface_detection_asyncFaceDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298850854608": {
        "properties": {
          "faces": {
            "items": {
              "$ref": "#/components/schemas/VideoFace"
            },
            "title": "Faces",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoface_detection_asyncFaceDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298845461120": {
        "properties": {
          "labels": {
            "items": {
              "$ref": "#/components/schemas/VideoLabel"
            },
            "title": "Labels",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videolabel_detection_asyncLabelDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298850764256": {
        "properties": {
          "labels": {
            "items": {
              "$ref": "#/components/schemas/VideoLabel"
            },
            "title": "Labels",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videolabel_detection_asyncLabelDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850902704": {
        "properties": {
          "persons": {
            "items": {
              "$ref": "#/components/schemas/VideoTrackingPerson"
            },
            "title": "Persons",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoperson_tracking_asyncPersonTrackingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850916240": {
        "properties": {
          "persons": {
            "items": {
              "$ref": "#/components/schemas/VideoTrackingPerson"
            },
            "title": "Persons",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoperson_tracking_asyncPersonTrackingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850781920": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/VideoText"
            },
            "title": "Texts",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videotext_detection_asyncTextDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850838128": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/VideoText"
            },
            "title": "Texts",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videotext_detection_asyncTextDetectionAsyncDataClass",
        "type": "object"
      },
      "textai_detectionAiDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          },
          "provider_params": {
            "type": "string",
            "description": "\nParameters specific to the provider that you want to send along the request.\n\nit should take a *provider* name as key and an object of parameters as value.\n\nExample:\n\n    {\n      \"deepgram\": {\n        \"filler_words\": true,\n        \"smart_format\": true,\n        \"callback\": \"https://webhook.site/0000\"\n      },\n      \"assembly\": {\n        \"webhook_url\": \"https://webhook.site/0000\"\n      }\n    }\n\nPlease refer to the documentation of each provider to see which parameters to send.\n"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textai_detectionResponseModel": {
        "properties": {
          "sapling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textai_detectionAiDetectionDataClass_94298849793920"
              }
            ],
            "default": null
          },
          "originalityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textai_detectionAiDetectionDataClass_94298849859616"
              }
            ],
            "default": null
          },
          "winstonai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textai_detectionAiDetectionDataClass_94298849860560"
              }
            ],
            "default": null
          }
        },
        "title": "textai_detectionResponseModel",
        "type": "object"
      },
      "textanonymizationResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298848410368"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298848365712"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298849579280"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298849569760"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298848351488"
              }
            ],
            "default": null
          }
        },
        "title": "textanonymizationResponseModel",
        "type": "object"
      },
      "textchatChatRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Start your conversation here..."
          },
          "chatbot_global_action": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "A system message that helps set the behavior of the assistant. For example, 'You are a helpful assistant'."
          },
          "previous_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {},
              "description": "A dictionary representing a single conversation in the previous history. Must contain 'role' and 'message' fields."
            },
            "description": "A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'role' and 'message'. The 'role' key specifies the role of the speaker and can have the values 'user' or 'assistant'. The 'message' key contains the text of the conversation from the respective role. For example: [{'role': 'user', 'message': 'Hello'}, {'role': 'assistant', 'message': 'Hi, how can I help you?'}, ...]. This format allows easy identification of the speaker's role and their corresponding message."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 2,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 16385,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "providers"
        ]
      },
      "textchatChatStreamRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Start your conversation here..."
          },
          "chatbot_global_action": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "A system message that helps set the behavior of the assistant. For example, 'You are a helpful assistant'."
          },
          "previous_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {},
              "description": "A dictionary representing a single conversation in the previous history. Must contain 'role' and 'message' fields."
            },
            "description": "A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'role' and 'message'. The 'role' key specifies the role of the speaker and can have the values 'user' or 'assistant'. The 'message' key contains the text of the conversation from the respective role. For example: [{'role': 'user', 'message': 'Hello'}, {'role': 'assistant', 'message': 'Hi, how can I help you?'}, ...]. This format allows easy identification of the speaker's role and their corresponding message."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 2,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 16385,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          },
          "fallback_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FallbackTypeEnum"
              }
            ],
            "default": "continue"
          }
        },
        "required": [
          "providers"
        ]
      },
      "textchatResponseModel": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849720432"
              }
            ],
            "default": null
          },
          "perplexityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849719376"
              }
            ],
            "default": null
          },
          "replicate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849822160"
              }
            ],
            "default": null
          },
          "mistral": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849809152"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849818992"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849819936"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849835104"
              }
            ],
            "default": null
          }
        },
        "title": "textchatResponseModel",
        "type": "object"
      },
      "textcode_generationCodeGenerationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "prompt": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Entrer the source code that will be used as a context."
          },
          "instruction": {
            "type": "string",
            "minLength": 1,
            "description": "Entrer the instruction you want to be followed."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 4096,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "instruction",
          "providers"
        ]
      },
      "textcode_generationResponseModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcode_generationCodeGenerationDataClass_94298849664528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcode_generationCodeGenerationDataClass_94298849609568"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcode_generationCodeGenerationDataClass_94298849610512"
              }
            ],
            "default": null
          }
        },
        "title": "textcode_generationResponseModel",
        "type": "object"
      },
      "textcustom_classificationCustomClassificationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of texts to classify"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of the labels (classes) you want the texts to be classified as."
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "maxItems": 2,
              "minItems": 2
            },
            "description": "List of text/label pairs (eg: [['I need help please wire me $1000 right now', 'spam'],]"
          }
        },
        "required": [
          "examples",
          "labels",
          "providers",
          "texts"
        ]
      },
      "textcustom_classificationResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849705808"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849714720"
              }
            ],
            "default": null
          }
        },
        "title": "textcustom_classificationResponseModel",
        "type": "object"
      },
      "textcustom_named_entity_recognitionCustomNamedEntityRecognitionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Enter your input text."
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of entities (at least two) to extract from your text eg : ['job', 'country'].",
            "minItems": 2
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "description": "List of examples eg : [{'text': 'an input text', 'entities' : [{'entity':'entity_1', 'category':'category_1'}, ...]}, ...]"
          }
        },
        "required": [
          "entities",
          "providers",
          "text"
        ]
      },
      "textcustom_named_entity_recognitionResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298844098480"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849633584"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849634528"
              }
            ],
            "default": null
          }
        },
        "title": "textcustom_named_entity_recognitionResponseModel",
        "type": "object"
      },
      "textembeddingsEmbeddingsRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of texts to transform into embeddings."
          }
        },
        "required": [
          "providers",
          "texts"
        ]
      },
      "textembeddingsResponseModel": {
        "properties": {
          "jina": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849798784"
              }
            ],
            "default": null
          },
          "mistral": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849797840"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849775920"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849780224"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849784528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849912528"
              }
            ],
            "default": null
          }
        },
        "title": "textembeddingsResponseModel",
        "type": "object"
      },
      "textemotion_detectionEmotionDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textemotion_detectionResponseModel": {
        "properties": {
          "vernai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298843986192"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298850634960"
              }
            ],
            "default": null
          }
        },
        "title": "textemotion_detectionResponseModel",
        "type": "object"
      },
      "textentity_sentimentEntitySentimentRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textentity_sentimentResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textentity_sentimentEntitySentimentDataClass_94298849904960"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textentity_sentimentEntitySentimentDataClass_94298850605232"
              }
            ],
            "default": null
          }
        },
        "title": "textentity_sentimentResponseModel",
        "type": "object"
      },
      "textgenerationGenerationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Enter your prompt"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 4048,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textgenerationResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298848404528"
              }
            ],
            "default": null
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849617920"
              }
            ],
            "default": null
          },
          "mistral": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849618864"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849635600"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849636544"
              }
            ],
            "default": null
          },
          "anthropic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849621952"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849622896"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849623840"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849625664"
              }
            ],
            "default": null
          }
        },
        "title": "textgenerationResponseModel",
        "type": "object"
      },
      "textkeyword_extractionResponseModel": {
        "properties": {
          "corticalio": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849407344"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849393104"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849394048"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849365664"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849411616"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849415920"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849420224"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849425136"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849429440"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849433744"
              }
            ],
            "default": null
          }
        },
        "title": "textkeyword_extractionResponseModel",
        "type": "object"
      },
      "textmoderationResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849387792"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849513040"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849505728"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849526560"
              }
            ],
            "default": null
          }
        },
        "title": "textmoderationResponseModel",
        "type": "object"
      },
      "textnamed_entity_recognitionResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849493664"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849447392"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849470992"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849452304"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849466672"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849461152"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849477040"
              }
            ],
            "default": null
          },
          "lettria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849481344"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849485648"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849495392"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849499696"
              }
            ],
            "default": null
          }
        },
        "title": "textnamed_entity_recognitionResponseModel",
        "type": "object"
      },
      "textplagia_detectionPlagiaDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "A text content on which a plagiarism detection analysis will be run"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Content title"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textplagia_detectionResponseModel": {
        "properties": {
          "originalityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298849892560"
              }
            ],
            "default": null
          },
          "winstonai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298850613760"
              }
            ],
            "default": null
          }
        },
        "title": "textplagia_detectionResponseModel",
        "type": "object"
      },
      "textprompt_optimizationPromptOptimizationDataClass": {
        "properties": {
          "missing_information": {
            "title": "Missing Information",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PromptDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "missing_information",
          "status"
        ],
        "title": "textprompt_optimizationPromptOptimizationDataClass",
        "type": "object"
      },
      "textprompt_optimizationPromptOptimizationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Description of the desired prompt."
          },
          "target_provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetProviderEnum"
              }
            ],
            "description": "Select the provider for the prompt optimization\n\n* `google` - google\n* `openai` - openai\n* `cohere` - cohere"
          }
        },
        "required": [
          "providers",
          "target_provider",
          "text"
        ]
      },
      "textprompt_optimizationResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/textprompt_optimizationPromptOptimizationDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "textprompt_optimizationResponseModel",
        "type": "object"
      },
      "textquestion_answerQuestionAnswerRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of texts to analyze"
          },
          "question": {
            "type": "string",
            "minLength": 1,
            "description": "Question about the text content"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "examples_context": {
            "type": "string",
            "minLength": 1,
            "description": "example text serving as context"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "maxItems": 2,
              "minItems": 2
            },
            "description": "List of question/answer pairs (eg: [['When was Barack Obama elected president?', 'in 2009.'],]"
          }
        },
        "required": [
          "examples",
          "examples_context",
          "providers",
          "question",
          "texts"
        ]
      },
      "textquestion_answerResponseModel": {
        "properties": {
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849581824"
              }
            ],
            "default": null
          },
          "huggingface": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849554064"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298840306624"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298844680048"
              }
            ],
            "default": null
          }
        },
        "title": "textquestion_answerResponseModel",
        "type": "object"
      },
      "textsearchResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsearchSearchDataClass_94298848399744"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsearchSearchDataClass_94298848587408"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsearchSearchDataClass_94298844722160"
              }
            ],
            "default": null
          }
        },
        "title": "textsearchResponseModel",
        "type": "object"
      },
      "textsearchSearchRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "A list of texts to search in.",
            "minItems": 2
          },
          "query": {
            "type": "string",
            "minLength": 1,
            "description": "Your text query."
          },
          "similarity_metric": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimilarityMetricEnum"
              }
            ],
            "default": "cosine",
            "description": "Is used to specify the similarity function that calculates the similarity between embedding vectors when performing text searches. This parameter allows you to customize how text similarity is measured, which can be crucial in various natural language processing tasks such as document retrieval, recommendation systems, and clustering.\n\n* `cosine` - cosine\n* `manhattan` - manhattan\n* `euclidean` - euclidean"
          }
        },
        "required": [
          "providers",
          "query",
          "texts"
        ]
      },
      "textsentiment_analysisResponseModel": {
        "properties": {
          "connexun": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844349104"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848670192"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844354976"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844319616"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848622160"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848718880"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848376528"
              }
            ],
            "default": null
          },
          "lettria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848428944"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848623104"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848636272"
              }
            ],
            "default": null
          },
          "sapling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848600544"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848357856"
              }
            ],
            "default": null
          }
        },
        "title": "textsentiment_analysisResponseModel",
        "type": "object"
      },
      "textspell_checkResponseModel": {
        "properties": {
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849733184"
              }
            ],
            "default": null
          },
          "prowritingaid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849674736"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849738816"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849726656"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849730960"
              }
            ],
            "default": null
          },
          "sapling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849754512"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849758816"
              }
            ],
            "default": null
          }
        },
        "title": "textspell_checkResponseModel",
        "type": "object"
      },
      "textspell_checkSpellCheckRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textsummarizeResponseModel": {
        "properties": {
          "connexun": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843958704"
              }
            ],
            "default": null
          },
          "alephalpha": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843981952"
              }
            ],
            "default": null
          },
          "huggingface": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298848589120"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843850736"
              }
            ],
            "default": null
          },
          "anthropic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843877392"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843925824"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843880304"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843887616"
              }
            ],
            "default": null
          },
          "writesonic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298845024272"
              }
            ],
            "default": null
          },
          "meaningcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298844743520"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843792544"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298849535008"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298845036048"
              }
            ],
            "default": null
          }
        },
        "title": "textsummarizeResponseModel",
        "type": "object"
      },
      "textsummarizeSummarizeRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "output_sentences": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textsyntax_analysisResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849367088"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849381776"
              }
            ],
            "default": null
          },
          "lettria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298848615840"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849350544"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849373152"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849352912"
              }
            ],
            "default": null
          }
        },
        "title": "textsyntax_analysisResponseModel",
        "type": "object"
      },
      "texttopic_extractionResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848598208"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298843973664"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848408320"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848409264"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298849608080"
              }
            ],
            "default": null
          }
        },
        "title": "texttopic_extractionResponseModel",
        "type": "object"
      },
      "texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "translationautomatic_translationAutomaticTranslationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "Source language code (ex: en, fr)"
          },
          "target_language": {
            "type": "string",
            "minLength": 1,
            "description": "Target language code (ex: en, fr)"
          }
        },
        "required": [
          "providers",
          "target_language",
          "text"
        ]
      },
      "translationautomatic_translationResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850676352"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850677296"
              }
            ],
            "default": null
          },
          "huggingface": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850685056"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850687872"
              }
            ],
            "default": null
          },
          "modernmt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850688816"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850691584"
              }
            ],
            "default": null
          },
          "deepl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850692528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850695888"
              }
            ],
            "default": null
          },
          "phedone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850696832"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850700192"
              }
            ],
            "default": null
          }
        },
        "title": "translationautomatic_translationResponseModel",
        "type": "object"
      },
      "translationdocument_translationDocumentTranslationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "Source language code (ex: en, fr)"
          },
          "target_language": {
            "type": "string",
            "minLength": 1,
            "description": "Target language code (ex: en, fr)"
          }
        },
        "required": [
          "providers",
          "target_language"
        ]
      },
      "translationdocument_translationResponseModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850740176"
              }
            ],
            "default": null
          },
          "deepl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850655600"
              }
            ],
            "default": null
          }
        },
        "title": "translationdocument_translationResponseModel",
        "type": "object"
      },
      "translationlanguage_detectionLanguageDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "translationlanguage_detectionResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850663200"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850709632"
              }
            ],
            "default": null
          },
          "modernmt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850706560"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850624416"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850716528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850609536"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850611552"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850727152"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850731456"
              }
            ],
            "default": null
          }
        },
        "title": "translationlanguage_detectionResponseModel",
        "type": "object"
      },
      "videoexplicit_content_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851358336"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851409072"
              }
            ],
            "default": null
          }
        },
        "title": "videoexplicit_content_detection_asyncModel",
        "type": "object"
      },
      "videoface_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298839188672"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298850854608"
              }
            ],
            "default": null
          }
        },
        "title": "videoface_detection_asyncModel",
        "type": "object"
      },
      "videolabel_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298845461120"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298850764256"
              }
            ],
            "default": null
          }
        },
        "title": "videolabel_detection_asyncModel",
        "type": "object"
      },
      "videologo_detection_asyncLogoDetectionAsyncDataClass": {
        "properties": {
          "logos": {
            "items": {
              "$ref": "#/components/schemas/LogoTrack"
            },
            "title": "Logos",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videologo_detection_asyncLogoDetectionAsyncDataClass",
        "type": "object"
      },
      "videologo_detection_asyncModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/videologo_detection_asyncLogoDetectionAsyncDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "videologo_detection_asyncModel",
        "type": "object"
      },
      "videoobject_tracking_asyncModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/videoobject_tracking_asyncObjectTrackingAsyncDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "videoobject_tracking_asyncModel",
        "type": "object"
      },
      "videoobject_tracking_asyncObjectTrackingAsyncDataClass": {
        "properties": {
          "objects": {
            "items": {
              "$ref": "#/components/schemas/ObjectTrack"
            },
            "title": "Objects",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoobject_tracking_asyncObjectTrackingAsyncDataClass",
        "type": "object"
      },
      "videoperson_tracking_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850902704"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850916240"
              }
            ],
            "default": null
          }
        },
        "title": "videoperson_tracking_asyncModel",
        "type": "object"
      },
      "videotext_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850781920"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850838128"
              }
            ],
            "default": null
          }
        },
        "title": "videotext_detection_asyncModel",
        "type": "object"
      }
    },
    "securitySchemes": {
      "FeatureApiAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}