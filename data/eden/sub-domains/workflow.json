{
  "openapi": "3.0.3",
  "info": {
    "title": "Eden AI",
    "version": "2.0",
    "description": "Your project description"
  },
  "paths": {
    "/workflow/": {
      "get": {
        "operationId": "workflow_workflow_list",
        "description": "List all workflows or create a new workflow.",
        "tags": [
          "workflow"
        ],
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Workflow"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "workflow_workflow_create",
        "description": "List all workflows or create a new workflow.",
        "tags": [
          "workflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/workflow/{workflow_id}/": {
      "get": {
        "operationId": "workflow_workflow_retrieve",
        "description": "Retrieve or update specific workflow.",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "workflow_workflow_update",
        "description": "Retrieve or update specific workflow.",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "workflow_workflow_partial_update",
        "description": "Retrieve or update specific workflow.",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWorkflowRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWorkflowRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedWorkflowRequest"
              }
            }
          }
        },
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workflow"
                }
              }
            },
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "workflow_workflow_destroy",
        "description": "Retrieve or update specific workflow.",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "204": {
            "description": "No response body"
          }
        }
      }
    },
    "/workflow/{workflow_id}/execution/": {
      "get": {
        "operationId": "workflow_workflow_execution_list",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Execution"
                  }
                }
              }
            },
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "workflow_workflow_execution_create",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/workflow/{workflow_id}/execution/{execution_id}/": {
      "get": {
        "operationId": "workflow_workflow_execution_retrieve",
        "description": "Retrieve a specific execution.",
        "parameters": [
          {
            "in": "path",
            "name": "execution_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "workflow_id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true
          }
        ],
        "tags": [
          "workflow"
        ],
        "security": [
          {
            "FeatureApiAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Execution"
                }
              }
            },
            "description": ""
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.edenai.run/v2"
    }
  ],
  "components": {
    "schemas": {
      "AIProject": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "project_name": {
            "type": "string",
            "maxLength": 100
          },
          "project_type": {
            "$ref": "#/components/schemas/AIProjectProjectTypeEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "user": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "created_at",
          "project_id",
          "project_name",
          "project_type",
          "user"
        ]
      },
      "AIProjectProjectTypeEnum": {
        "enum": [
          "AskYoDa",
          "Translathor",
          "X-Merge"
        ],
        "type": "string",
        "description": "* `AskYoDa` - Askyoda\n* `Translathor` - Translathor\n* `X-Merge` - X Merge"
      },
      "AddFileRequest": {
        "type": "object",
        "properties": {
          "data_type": {
            "$ref": "#/components/schemas/DataTypeEnum"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "Add to your project files",
            "pattern": "(?:pdf|csv|amr|flac|wav|ogg|mp3|mp4|webm)$"
          },
          "metadata": {
            "type": "string",
            "minLength": 1,
            "description": "Optional parameter: Attach metadata to the uploaded file data in your database. Provide a stringified JSON with key-value pairs. Useful in `filter_document` when querying the language model, it allows you to filter data with your Chatbot by considering only documents that have the specified metadata."
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "default": "",
            "description": "Select a provider to use, only for audio (speech-to-text) & pdf (ocr-async) files."
          }
        },
        "required": [
          "data_type"
        ]
      },
      "AddTextRequest": {
        "type": "object",
        "properties": {
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "LLM Query"
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "default": []
          }
        },
        "required": [
          "texts"
        ]
      },
      "AddUrlRequest": {
        "type": "object",
        "properties": {
          "urls": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "Add multiple urls into the database, it loads all the text from HTML webpages into a document format."
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "default": []
          }
        },
        "required": [
          "urls"
        ]
      },
      "AiDetectionItem": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "prediction": {
            "title": "Prediction",
            "type": "string"
          },
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "ai_score_detail": {
            "title": "Ai Score Detail",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "prediction",
          "ai_score",
          "ai_score_detail"
        ],
        "title": "AiDetectionItem",
        "type": "object"
      },
      "AnonymizationAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          }
        },
        "required": [
          "providers"
        ]
      },
      "AnonymizationBoundingBox": {
        "properties": {
          "x_min": {
            "title": "X Min",
            "type": "integer"
          },
          "x_max": {
            "title": "X Max",
            "type": "integer"
          },
          "y_min": {
            "title": "Y Min",
            "type": "integer"
          },
          "y_max": {
            "title": "Y Max",
            "type": "integer"
          }
        },
        "required": [
          "x_min",
          "x_max",
          "y_min",
          "y_max"
        ],
        "title": "AnonymizationBoundingBox",
        "type": "object"
      },
      "AnonymizationEntity": {
        "description": "This model represents an entity extracted from the text.\n\n    Attributes:\n        offset (int): The offset of the entity in the text.\n        length (int): The lenght of the entity in the text.\n        category (CategoryType): The category of the entity.\n        subcategory (SubCategoryType): The subcategory of the entity.\n        original_label (str): The original label of the entity.\n        content (str): The content of the entity.\n    ",
        "properties": {
          "offset": {
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          },
          "length": {
            "exclusiveMinimum": true,
            "title": "Length",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "subcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FinancialInformationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/PersonalInformationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/IdentificationNumbersSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/MiscellaneousSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OrganizationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/DateAndTimeSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/LocationInformationSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OtherSubCategoryType"
              }
            ],
            "title": "Subcategory"
          },
          "original_label": {
            "minLength": 1,
            "title": "Original Label",
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "title": "Content",
            "type": "string"
          },
          "confidence_score": {
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Score",
            "type": "integer"
          }
        },
        "required": [
          "offset",
          "length",
          "category",
          "subcategory",
          "original_label",
          "content",
          "confidence_score"
        ],
        "title": "AnonymizationEntity",
        "type": "object"
      },
      "AnonymizationItem": {
        "properties": {
          "kind": {
            "title": "Kind",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_boxes": {
            "$ref": "#/components/schemas/AnonymizationBoundingBox"
          }
        },
        "required": [
          "kind",
          "confidence",
          "bounding_boxes"
        ],
        "title": "AnonymizationItem",
        "type": "object"
      },
      "AskLLMRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "minLength": 1,
            "description": "Enter your question or query about the data. The large language model (LLM) will provide a response."
          },
          "llm_provider": {
            "type": "string",
            "minLength": 1,
            "default": "openai",
            "description": "Select a provider for the large language model for processing. Leave empty for default."
          },
          "llm_model": {
            "type": "string",
            "minLength": 1,
            "description": "Specify the model to use for language processing. Leave empty for default."
          },
          "k": {
            "type": "integer",
            "minimum": 1,
            "default": 3,
            "description": "How many results chunk you want to return"
          },
          "history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {},
              "description": "A dictionary representing a single conversation in the previous history. Must contain 'user' and 'assistant' fields."
            },
            "default": [],
            "description": "A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'user' and 'assistant'."
          },
          "personality": {
            "type": "object",
            "additionalProperties": {},
            "default": {},
            "description": "A dictionary representing the personality of the bot. Must contain 'personality','company_name', 'name', 'job_title' and 'language'"
          },
          "filter_documents": {
            "type": "object",
            "additionalProperties": {},
            "default": {},
            "description": "Filter uploaded documents based on their metadata. Specify key-value pairs where the key represents the metadata field and the value is the desired metadata value. Please ensure that the provided metadata keys are available in your database."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 2,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 16385,
            "minimum": 1,
            "default": 100,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "query"
        ]
      },
      "AskYourDataProjectRequest": {
        "type": "object",
        "properties": {
          "credential": {
            "type": "string",
            "nullable": true,
            "description": "The credential resource name",
            "maxLength": 255
          },
          "asset": {
            "type": "string",
            "nullable": true,
            "description": "The asset sub_resource name",
            "maxLength": 255
          },
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "Project name"
          },
          "collection_name": {
            "type": "string",
            "minLength": 1,
            "description": "Database Collection Name"
          },
          "db_provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DbProviderEnum"
              }
            ],
            "default": "qdrant",
            "description": "Database Provider\n\n* `qdrant` - qdrant\n* `supabase` - supabase"
          },
          "embeddings_provider": {
            "type": "string",
            "minLength": 1,
            "default": "cohere",
            "description": "Select an embedding provider to use in your search database. Leave empty for default."
          },
          "llm_provider": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default LLM provider to use in your project."
          },
          "llm_model": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default Model for LLM provider to use in your project"
          }
        },
        "required": [
          "collection_name",
          "project_name"
        ]
      },
      "AssetCreate": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetCreateRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetList": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "string",
            "format": "byte",
            "readOnly": true
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetListRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "required": [
          "sub_resource"
        ]
      },
      "AssetUpdate": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AssetUpdateRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "data",
          "sub_resource"
        ]
      },
      "AsyncJobList": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string"
          },
          "nb": {
            "type": "integer"
          },
          "nb_ok": {
            "type": "integer"
          },
          "public_id": {
            "type": "string",
            "format": "uuid"
          },
          "state": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "created_at",
          "nb",
          "nb_ok",
          "providers",
          "public_id",
          "state"
        ]
      },
      "AsyncOcrRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          }
        },
        "required": [
          "providers"
        ]
      },
      "AsyncVideoAnalysisRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:mov|mp4|avi)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "AutomlClassificationListProjectsResponse": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/AutomlClassificationProject"
            },
            "title": "Projects",
            "type": "array"
          }
        },
        "required": [
          "projects"
        ],
        "title": "AutomlClassificationListProjectsResponse",
        "type": "object"
      },
      "AutomlClassificationPredictRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "project_id",
          "providers"
        ]
      },
      "AutomlClassificationProject": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "title": "Project Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "provider": {
            "title": "Provider",
            "type": "string"
          }
        },
        "required": [
          "project_id",
          "name",
          "provider"
        ],
        "title": "AutomlClassificationProject",
        "type": "object"
      },
      "AutomlClassificationTrainRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          }
        },
        "required": [
          "project_id",
          "providers"
        ]
      },
      "AutomlClassificationUploadDataRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          },
          "label": {
            "type": "string",
            "minLength": 1,
            "description": "Label of the image",
            "maxLength": 200
          },
          "type_of_data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeOfDataEnum"
              }
            ],
            "description": "Type of data : TRAINING or TEST\n\n* `TRAINING` - TRAINING\n* `TEST` - TEST"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "label",
          "project_id",
          "providers",
          "type_of_data"
        ]
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/NestedBadRequest"
          }
        },
        "required": [
          "error"
        ]
      },
      "BankInvoice": {
        "properties": {
          "account_number": {
            "title": "Account Number",
            "type": "string"
          },
          "iban": {
            "title": "Iban",
            "type": "string"
          },
          "bsb": {
            "title": "Bsb",
            "type": "string"
          },
          "sort_code": {
            "title": "Sort Code",
            "type": "string"
          },
          "vat_number": {
            "title": "Vat Number",
            "type": "string"
          },
          "rooting_number": {
            "title": "Rooting Number",
            "type": "string"
          },
          "swift": {
            "title": "Swift",
            "type": "string"
          }
        },
        "required": [
          "account_number",
          "iban",
          "bsb",
          "sort_code",
          "vat_number",
          "rooting_number",
          "swift"
        ],
        "title": "BankInvoice",
        "type": "object"
      },
      "BarCode": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "value",
          "type"
        ],
        "title": "BarCode",
        "type": "object"
      },
      "BatchLaunchFailedRequest": {
        "properties": {
          "name": {
            "description": "Request name, if any were given",
            "title": "Name",
            "type": "string"
          },
          "public_id": {
            "description": "Request ID",
            "title": "Public Id",
            "type": "integer"
          },
          "body": {
            "description": "Parameters passed to the request",
            "title": "Body",
            "type": "object"
          },
          "errors": {
            "description": "Error received from the request validator",
            "title": "Errors",
            "type": "object"
          }
        },
        "required": [
          "name",
          "public_id",
          "body",
          "errors"
        ],
        "title": "BatchLaunchFailedRequest",
        "type": "object"
      },
      "BatchLaunchResponse": {
        "properties": {
          "job_id": {
            "description": "Job ID/name",
            "title": "Job Id",
            "type": "string"
          },
          "nb_launched": {
            "description": "Number of successfully launched requests",
            "title": "Nb Launched",
            "type": "integer"
          },
          "nb_failed": {
            "description": "Number of failed_requests",
            "title": "Nb Failed",
            "type": "integer"
          },
          "total": {
            "description": "Total number of requests sent",
            "title": "Total",
            "type": "integer"
          },
          "failed_requests": {
            "description": "if any requests failed, they will be shown in this list",
            "items": {
              "$ref": "#/components/schemas/BatchLaunchFailedRequest"
            },
            "title": "Failed Requests",
            "type": "array"
          }
        },
        "required": [
          "job_id",
          "nb_launched",
          "nb_failed",
          "total",
          "failed_requests"
        ],
        "title": "BatchLaunchResponse",
        "type": "object"
      },
      "BatchList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 1023
          },
          "status": {
            "$ref": "#/components/schemas/StatusE80Enum"
          },
          "feature": {
            "type": "string",
            "readOnly": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "total_requests": {
            "type": "integer",
            "readOnly": true
          },
          "nb_processing": {
            "type": "integer",
            "readOnly": true
          },
          "nb_succeeded": {
            "type": "integer",
            "readOnly": true
          },
          "nb_failed": {
            "type": "integer",
            "readOnly": true
          },
          "get_response_url": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "feature",
          "get_response_url",
          "nb_failed",
          "nb_processing",
          "nb_succeeded",
          "subfeature",
          "total_requests"
        ]
      },
      "BatchRequest": {
        "type": "object",
        "properties": {
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1
          },
          "requests": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          }
        },
        "required": [
          "requests"
        ]
      },
      "BatchResponseRequest": {
        "type": "object",
        "properties": {
          "public_id": {
            "type": "integer",
            "readOnly": true
          },
          "status": {
            "$ref": "#/components/schemas/StatusE80Enum"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 1023
          },
          "errors": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "response": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "public_id"
        ]
      },
      "BlankEnum": {
        "enum": [
          ""
        ]
      },
      "BoundingBox": {
        "description": "Bounding box of a word in the image\n\n    Attributes:\n        left (float): Left coordinate of the bounding box\n        top (float): Top coordinate of the bounding box\n        width (float): Width of the bounding box\n        height (float): Height of the bounding box\n        text (str): Text detected in the bounding box\n\n    Constructor:\n        from_json (classmethod): Create a new instance of BoundingBox from a JSON object\n        from_normalized_vertices (classmethod): Create a new instance of BoundingBox from normalized vertices\n        unknown (classmethod): Return a invalid bouding_box with all field filled with `-1`\n    ",
        "properties": {
          "left": {
            "description": "Left coordinate of the bounding box",
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "description": "Top coordinate of the bounding box",
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "description": "Width of the bounding box",
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "description": "Height of the bounding box",
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "BoundingBox",
        "type": "object"
      },
      "Bounding_box": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "Bounding_box",
        "type": "object"
      },
      "BoundixBoxOCRTable": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "BoundixBoxOCRTable",
        "type": "object"
      },
      "CategoryType": {
        "description": "This enum are used to categorize the explicit content extracted from the text",
        "enum": [
          "Toxic",
          "Content",
          "Sexual",
          "Violence",
          "DrugAndAlcohol",
          "Finance",
          "HateAndExtremism",
          "Safe",
          "Other"
        ],
        "title": "CategoryType",
        "type": "string"
      },
      "Cell": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "row_index": {
            "title": "Row Index",
            "type": "integer"
          },
          "col_index": {
            "title": "Col Index",
            "type": "integer"
          },
          "row_span": {
            "title": "Row Span",
            "type": "integer"
          },
          "col_span": {
            "title": "Col Span",
            "type": "integer"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/BoundixBoxOCRTable"
          },
          "is_header": {
            "default": false,
            "title": "Is Header",
            "type": "boolean"
          }
        },
        "required": [
          "text",
          "row_index",
          "col_index",
          "row_span",
          "col_span",
          "confidence",
          "bounding_box"
        ],
        "title": "Cell",
        "type": "object"
      },
      "ChatMessageDataClass": {
        "properties": {
          "role": {
            "title": "Role",
            "type": "string"
          },
          "message": {
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "role",
          "message"
        ],
        "title": "ChatMessageDataClass",
        "type": "object"
      },
      "ContentNSFW": {
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "category": {
            "title": "Category",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "confidence",
          "category"
        ],
        "title": "ContentNSFW",
        "type": "object"
      },
      "ContentSubCategoryType": {
        "enum": [
          "MiddleFinger",
          "PublicSafety",
          "Health",
          "Explicit",
          "QRCode",
          "Medical",
          "Politics",
          "Legal"
        ],
        "title": "ContentSubCategoryType",
        "type": "string"
      },
      "Country": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "alpha2": {
            "title": "Alpha2",
            "type": "string"
          },
          "alpha3": {
            "title": "Alpha3",
            "type": "string"
          },
          "confidence": {
            "default": null,
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "name",
          "alpha2",
          "alpha3"
        ],
        "title": "Country",
        "type": "object"
      },
      "CustomDocumentParsingAsyncBoundingBox": {
        "properties": {
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          }
        },
        "required": [
          "left",
          "top",
          "width",
          "height"
        ],
        "title": "CustomDocumentParsingAsyncBoundingBox",
        "type": "object"
      },
      "CustomDocumentParsingAsyncItem": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "value": {
            "title": "Value",
            "type": "string"
          },
          "query": {
            "title": "Query",
            "type": "string"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/CustomDocumentParsingAsyncBoundingBox"
          },
          "page": {
            "title": "Page",
            "type": "integer"
          }
        },
        "required": [
          "confidence",
          "value",
          "query",
          "bounding_box",
          "page"
        ],
        "title": "CustomDocumentParsingAsyncItem",
        "type": "object"
      },
      "CustomDocumentParsingAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "queries": {
            "type": "string",
            "minLength": 1,
            "description": "Your queries need to be a list of dict containing the questions you want answered and the page to look for the information in :  '[{'query':'your query','pages':'your pages'},{'query':'your query','pages':'your pages'}]'"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers",
          "queries"
        ]
      },
      "CustomerInformation": {
        "properties": {
          "customer_name": {
            "default": null,
            "title": "Customer Name",
            "type": "string"
          }
        },
        "title": "CustomerInformation",
        "type": "object"
      },
      "CustomerInformationInvoice": {
        "properties": {
          "customer_name": {
            "title": "Customer Name",
            "type": "string"
          },
          "customer_address": {
            "title": "Customer Address",
            "type": "string"
          },
          "customer_email": {
            "title": "Customer Email",
            "type": "string"
          },
          "customer_id": {
            "title": "Customer Id",
            "type": "string"
          },
          "customer_tax_id": {
            "title": "Customer Tax Id",
            "type": "string"
          },
          "customer_mailing_address": {
            "title": "Customer Mailing Address",
            "type": "string"
          },
          "customer_billing_address": {
            "title": "Customer Billing Address",
            "type": "string"
          },
          "customer_shipping_address": {
            "title": "Customer Shipping Address",
            "type": "string"
          },
          "customer_service_address": {
            "title": "Customer Service Address",
            "type": "string"
          },
          "customer_remittance_address": {
            "title": "Customer Remittance Address",
            "type": "string"
          },
          "abn_number": {
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "title": "Gst Number",
            "type": "string"
          },
          "pan_number": {
            "title": "Pan Number",
            "type": "string"
          },
          "vat_number": {
            "title": "Vat Number",
            "type": "string"
          },
          "siret_number": {
            "default": null,
            "title": "Siret Number",
            "type": "string"
          },
          "siren_number": {
            "default": null,
            "title": "Siren Number",
            "type": "string"
          }
        },
        "required": [
          "customer_name",
          "customer_address",
          "customer_email",
          "customer_id",
          "customer_tax_id",
          "customer_mailing_address",
          "customer_billing_address",
          "customer_shipping_address",
          "customer_service_address",
          "customer_remittance_address",
          "abn_number",
          "gst_number",
          "pan_number",
          "vat_number"
        ],
        "title": "CustomerInformationInvoice",
        "type": "object"
      },
      "DataTypeEnum": {
        "enum": [
          "pdf",
          "audio",
          "csv"
        ],
        "type": "string",
        "description": "* `pdf` - pdf\n* `audio` - audio\n* `csv` - csv"
      },
      "DateAndTimeSubCategoryType": {
        "enum": [
          "Date",
          "Time",
          "DateTime",
          "Duration"
        ],
        "title": "DateAndTimeSubCategoryType",
        "type": "string"
      },
      "DbProviderEnum": {
        "enum": [
          "qdrant",
          "supabase"
        ],
        "type": "string",
        "description": "* `qdrant` - qdrant\n* `supabase` - supabase"
      },
      "DetailTypeEnum": {
        "enum": [
          "resolution",
          "document_type"
        ],
        "type": "string",
        "description": "* `resolution` - Resolution\n* `document_type` - Document Type"
      },
      "DocParserCallParametersRequest": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          }
        }
      },
      "DocParserCreate": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "description": "The project name",
            "maxLength": 200
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "maxLength": 30
          }
        },
        "required": [
          "project_name",
          "subfeature"
        ]
      },
      "DocParserCreateRequest": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "The project name",
            "maxLength": 200
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 30
          }
        },
        "required": [
          "project_name",
          "subfeature"
        ]
      },
      "DocParserList": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "description": "The project name",
            "maxLength": 200
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "project_id",
          "project_name",
          "subfeature"
        ]
      },
      "DocParserUpdate": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "readOnly": true,
            "description": "The project name"
          },
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "project_name",
          "subfeature"
        ]
      },
      "DocumentTypeEnum": {
        "enum": [
          "auto-detect",
          "invoice",
          "receipt"
        ],
        "type": "string",
        "description": "* `auto-detect` - auto-detect\n* `invoice` - invoice\n* `receipt` - receipt"
      },
      "DrugAndAlcoholSubCategoryType": {
        "enum": [
          "DrugProducts",
          "DrugUse",
          "Tobacco",
          "Smoking",
          "Alcohol",
          "Drinking"
        ],
        "title": "DrugAndAlcoholSubCategoryType",
        "type": "string"
      },
      "EmbeddingDataClass": {
        "properties": {
          "embedding": {
            "items": {
              "type": "integer"
            },
            "title": "Embedding",
            "type": "array"
          }
        },
        "required": [
          "embedding"
        ],
        "title": "EmbeddingDataClass",
        "type": "object"
      },
      "EmotionItem": {
        "description": "This class is used in EmotionAnalysisDataClass to list emotion analysed.\n    Args:\n        - emotion (EmotionEnum): emotion of the text\n        - emotion_score (float): score of the emotion\n    ",
        "properties": {
          "emotion": {
            "title": "Emotion",
            "type": "string"
          },
          "emotion_score": {
            "maximum": 100,
            "minimum": 0,
            "title": "Emotion Score",
            "type": "integer"
          }
        },
        "required": [
          "emotion",
          "emotion_score"
        ],
        "title": "EmotionItem",
        "type": "object"
      },
      "Entity": {
        "properties": {
          "type": {
            "description": "Recognized Entity type",
            "title": "Type",
            "type": "string"
          },
          "text": {
            "description": "Text corresponding to the entity",
            "title": "Text",
            "type": "string"
          },
          "sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntitySentimentEnum"
              }
            ],
            "title": "Sentiment"
          },
          "begin_offset": {
            "default": null,
            "title": "Begin Offset",
            "type": "integer"
          },
          "end_offset": {
            "default": null,
            "title": "End Offset",
            "type": "integer"
          }
        },
        "required": [
          "type",
          "text",
          "sentiment"
        ],
        "title": "Entity",
        "type": "object"
      },
      "EntitySentimentEnum": {
        "enum": [
          "Positive",
          "Negative",
          "Neutral",
          "Mixed"
        ],
        "type": "string"
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/NestedError"
          }
        },
        "required": [
          "error"
        ]
      },
      "Execution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "content": {
            "type": "object",
            "additionalProperties": {}
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "content",
          "created_at",
          "id",
          "updated_at"
        ]
      },
      "ExecutionRequest": {
        "type": "object",
        "properties": {
          "content": {
            "type": "object",
            "additionalProperties": {}
          }
        },
        "required": [
          "content"
        ]
      },
      "ExplicitItem": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "likelihood": {
            "title": "Likelihood",
            "type": "integer"
          },
          "likelihood_score": {
            "title": "Likelihood Score",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "subcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToxicSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ContentSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SexualSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ViolenceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/DrugAndAlcoholSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/FinanceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/HateAndExtremismSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SafeSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OtherSubCategoryType"
              }
            ],
            "title": "Subcategory"
          }
        },
        "required": [
          "label",
          "likelihood",
          "likelihood_score",
          "category",
          "subcategory"
        ],
        "title": "ExplicitItem",
        "type": "object"
      },
      "ExtractedTopic": {
        "properties": {
          "category": {
            "title": "Category",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          }
        },
        "required": [
          "category",
          "importance"
        ],
        "title": "ExtractedTopic",
        "type": "object"
      },
      "FaceAccessories": {
        "properties": {
          "sunglasses": {
            "title": "Sunglasses",
            "type": "integer"
          },
          "reading_glasses": {
            "title": "Reading Glasses",
            "type": "integer"
          },
          "swimming_goggles": {
            "title": "Swimming Goggles",
            "type": "integer"
          },
          "face_mask": {
            "title": "Face Mask",
            "type": "integer"
          },
          "eyeglasses": {
            "title": "Eyeglasses",
            "type": "integer"
          },
          "headwear": {
            "title": "Headwear",
            "type": "integer"
          }
        },
        "required": [
          "sunglasses",
          "reading_glasses",
          "swimming_goggles",
          "face_mask",
          "eyeglasses",
          "headwear"
        ],
        "title": "FaceAccessories",
        "type": "object"
      },
      "FaceAttributes": {
        "properties": {
          "headwear": {
            "title": "Headwear",
            "type": "integer"
          },
          "frontal_gaze": {
            "title": "Frontal Gaze",
            "type": "integer"
          },
          "eyes_visible": {
            "title": "Eyes Visible",
            "type": "integer"
          },
          "glasses": {
            "title": "Glasses",
            "type": "integer"
          },
          "mouth_open": {
            "title": "Mouth Open",
            "type": "integer"
          },
          "smiling": {
            "title": "Smiling",
            "type": "integer"
          },
          "brightness": {
            "title": "Brightness",
            "type": "integer"
          },
          "sharpness": {
            "title": "Sharpness",
            "type": "integer"
          },
          "pose": {
            "$ref": "#/components/schemas/VideoFacePoses"
          }
        },
        "required": [
          "headwear",
          "frontal_gaze",
          "eyes_visible",
          "glasses",
          "mouth_open",
          "smiling",
          "brightness",
          "sharpness",
          "pose"
        ],
        "title": "FaceAttributes",
        "type": "object"
      },
      "FaceBoundingBox": {
        "properties": {
          "x_min": {
            "title": "X Min",
            "type": "integer"
          },
          "x_max": {
            "title": "X Max",
            "type": "integer"
          },
          "y_min": {
            "title": "Y Min",
            "type": "integer"
          },
          "y_max": {
            "title": "Y Max",
            "type": "integer"
          }
        },
        "required": [
          "x_min",
          "x_max",
          "y_min",
          "y_max"
        ],
        "title": "FaceBoundingBox",
        "type": "object"
      },
      "FaceCompareBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "FaceCompareBoundingBox",
        "type": "object"
      },
      "FaceEmotions": {
        "properties": {
          "joy": {
            "title": "Joy",
            "type": "integer"
          },
          "sorrow": {
            "title": "Sorrow",
            "type": "integer"
          },
          "anger": {
            "title": "Anger",
            "type": "integer"
          },
          "surprise": {
            "title": "Surprise",
            "type": "integer"
          },
          "disgust": {
            "title": "Disgust",
            "type": "integer"
          },
          "fear": {
            "title": "Fear",
            "type": "integer"
          },
          "confusion": {
            "title": "Confusion",
            "type": "integer"
          },
          "calm": {
            "title": "Calm",
            "type": "integer"
          },
          "unknown": {
            "title": "Unknown",
            "type": "integer"
          },
          "neutral": {
            "title": "Neutral",
            "type": "integer"
          },
          "contempt": {
            "title": "Contempt",
            "type": "integer"
          }
        },
        "required": [
          "joy",
          "sorrow",
          "anger",
          "surprise",
          "disgust",
          "fear",
          "confusion",
          "calm",
          "unknown",
          "neutral",
          "contempt"
        ],
        "title": "FaceEmotions",
        "type": "object"
      },
      "FaceFacialHair": {
        "properties": {
          "moustache": {
            "title": "Moustache",
            "type": "integer"
          },
          "beard": {
            "title": "Beard",
            "type": "integer"
          },
          "sideburns": {
            "title": "Sideburns",
            "type": "integer"
          }
        },
        "required": [
          "moustache",
          "beard",
          "sideburns"
        ],
        "title": "FaceFacialHair",
        "type": "object"
      },
      "FaceFeatures": {
        "properties": {
          "eyes_open": {
            "title": "Eyes Open",
            "type": "integer"
          },
          "smile": {
            "title": "Smile",
            "type": "integer"
          },
          "mouth_open": {
            "title": "Mouth Open",
            "type": "integer"
          }
        },
        "required": [
          "eyes_open",
          "smile",
          "mouth_open"
        ],
        "title": "FaceFeatures",
        "type": "object"
      },
      "FaceHair": {
        "properties": {
          "hair_color": {
            "items": {
              "$ref": "#/components/schemas/FaceHairColor"
            },
            "title": "Hair Color",
            "type": "array"
          },
          "bald": {
            "title": "Bald",
            "type": "integer"
          },
          "invisible": {
            "title": "Invisible",
            "type": "boolean"
          }
        },
        "required": [
          "bald",
          "invisible"
        ],
        "title": "FaceHair",
        "type": "object"
      },
      "FaceHairColor": {
        "properties": {
          "color": {
            "title": "Color",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "color",
          "confidence"
        ],
        "title": "FaceHairColor",
        "type": "object"
      },
      "FaceItem": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "landmarks": {
            "$ref": "#/components/schemas/FaceLandmarks"
          },
          "emotions": {
            "$ref": "#/components/schemas/FaceEmotions"
          },
          "poses": {
            "$ref": "#/components/schemas/FacePoses"
          },
          "age": {
            "title": "Age",
            "type": "integer"
          },
          "gender": {
            "title": "Gender",
            "type": "string"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/FaceBoundingBox"
          },
          "hair": {
            "$ref": "#/components/schemas/FaceHair"
          },
          "facial_hair": {
            "$ref": "#/components/schemas/FaceFacialHair"
          },
          "quality": {
            "$ref": "#/components/schemas/FaceQuality"
          },
          "makeup": {
            "$ref": "#/components/schemas/FaceMakeup"
          },
          "accessories": {
            "$ref": "#/components/schemas/FaceAccessories"
          },
          "occlusions": {
            "$ref": "#/components/schemas/FaceOcclusions"
          },
          "features": {
            "$ref": "#/components/schemas/FaceFeatures"
          }
        },
        "required": [
          "confidence",
          "landmarks",
          "emotions",
          "poses",
          "age",
          "gender",
          "bounding_box",
          "hair",
          "facial_hair",
          "quality",
          "makeup",
          "accessories",
          "occlusions",
          "features"
        ],
        "title": "FaceItem",
        "type": "object"
      },
      "FaceLandmarks": {
        "properties": {
          "left_eye": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye",
            "type": "array"
          },
          "left_eye_top": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Top",
            "type": "array"
          },
          "left_eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Right",
            "type": "array"
          },
          "left_eye_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Bottom",
            "type": "array"
          },
          "left_eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eye Left",
            "type": "array"
          },
          "right_eye": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye",
            "type": "array"
          },
          "right_eye_top": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Top",
            "type": "array"
          },
          "right_eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Right",
            "type": "array"
          },
          "right_eye_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Bottom",
            "type": "array"
          },
          "right_eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eye Left",
            "type": "array"
          },
          "left_eyebrow_left": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eyebrow Left",
            "type": "array"
          },
          "left_eyebrow_right": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eyebrow Right",
            "type": "array"
          },
          "left_eyebrow_top": {
            "items": {
              "type": "integer"
            },
            "title": "Left Eyebrow Top",
            "type": "array"
          },
          "right_eyebrow_left": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eyebrow Left",
            "type": "array"
          },
          "right_eyebrow_right": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eyebrow Right",
            "type": "array"
          },
          "left_pupil": {
            "items": {
              "type": "integer"
            },
            "title": "Left Pupil",
            "type": "array"
          },
          "right_pupil": {
            "items": {
              "type": "integer"
            },
            "title": "Right Pupil",
            "type": "array"
          },
          "nose_tip": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Tip",
            "type": "array"
          },
          "nose_bottom_right": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Bottom Right",
            "type": "array"
          },
          "nose_bottom_left": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Bottom Left",
            "type": "array"
          },
          "mouth_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Left",
            "type": "array"
          },
          "mouth_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Right",
            "type": "array"
          },
          "right_eyebrow_top": {
            "items": {
              "type": "integer"
            },
            "title": "Right Eyebrow Top",
            "type": "array"
          },
          "midpoint_between_eyes": {
            "items": {
              "type": "integer"
            },
            "title": "Midpoint Between Eyes",
            "type": "array"
          },
          "nose_bottom_center": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Bottom Center",
            "type": "array"
          },
          "nose_left_alar_out_tip": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Left Alar Out Tip",
            "type": "array"
          },
          "nose_left_alar_top": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Left Alar Top",
            "type": "array"
          },
          "nose_right_alar_out_tip": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Right Alar Out Tip",
            "type": "array"
          },
          "nose_right_alar_top": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Right Alar Top",
            "type": "array"
          },
          "nose_root_left": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Root Left",
            "type": "array"
          },
          "nose_root_right": {
            "items": {
              "type": "integer"
            },
            "title": "Nose Root Right",
            "type": "array"
          },
          "upper_lip": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Lip",
            "type": "array"
          },
          "under_lip": {
            "items": {
              "type": "integer"
            },
            "title": "Under Lip",
            "type": "array"
          },
          "under_lip_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Under Lip Bottom",
            "type": "array"
          },
          "under_lip_top": {
            "items": {
              "type": "integer"
            },
            "title": "Under Lip Top",
            "type": "array"
          },
          "upper_lip_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Lip Bottom",
            "type": "array"
          },
          "upper_lip_top": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Lip Top",
            "type": "array"
          },
          "mouth_center": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Center",
            "type": "array"
          },
          "mouth_top": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Top",
            "type": "array"
          },
          "mouth_bottom": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Bottom",
            "type": "array"
          },
          "left_ear_tragion": {
            "items": {
              "type": "integer"
            },
            "title": "Left Ear Tragion",
            "type": "array"
          },
          "right_ear_tragion": {
            "items": {
              "type": "integer"
            },
            "title": "Right Ear Tragion",
            "type": "array"
          },
          "forehead_glabella": {
            "items": {
              "type": "integer"
            },
            "title": "Forehead Glabella",
            "type": "array"
          },
          "chin_gnathion": {
            "items": {
              "type": "integer"
            },
            "title": "Chin Gnathion",
            "type": "array"
          },
          "chin_left_gonion": {
            "items": {
              "type": "integer"
            },
            "title": "Chin Left Gonion",
            "type": "array"
          },
          "chin_right_gonion": {
            "items": {
              "type": "integer"
            },
            "title": "Chin Right Gonion",
            "type": "array"
          },
          "upper_jawline_left": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Jawline Left",
            "type": "array"
          },
          "mid_jawline_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mid Jawline Left",
            "type": "array"
          },
          "mid_jawline_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mid Jawline Right",
            "type": "array"
          },
          "upper_jawline_right": {
            "items": {
              "type": "integer"
            },
            "title": "Upper Jawline Right",
            "type": "array"
          },
          "left_cheek_center": {
            "items": {
              "type": "integer"
            },
            "title": "Left Cheek Center",
            "type": "array"
          },
          "right_cheek_center": {
            "items": {
              "type": "integer"
            },
            "title": "Right Cheek Center",
            "type": "array"
          }
        },
        "title": "FaceLandmarks",
        "type": "object"
      },
      "FaceMakeup": {
        "properties": {
          "eye_make": {
            "title": "Eye Make",
            "type": "boolean"
          },
          "lip_make": {
            "title": "Lip Make",
            "type": "boolean"
          }
        },
        "required": [
          "eye_make",
          "lip_make"
        ],
        "title": "FaceMakeup",
        "type": "object"
      },
      "FaceMatch": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/FaceCompareBoundingBox"
          }
        },
        "required": [
          "confidence",
          "bounding_box"
        ],
        "title": "FaceMatch",
        "type": "object"
      },
      "FaceOcclusions": {
        "properties": {
          "eye_occluded": {
            "title": "Eye Occluded",
            "type": "boolean"
          },
          "forehead_occluded": {
            "title": "Forehead Occluded",
            "type": "boolean"
          },
          "mouth_occluded": {
            "title": "Mouth Occluded",
            "type": "boolean"
          }
        },
        "required": [
          "eye_occluded",
          "forehead_occluded",
          "mouth_occluded"
        ],
        "title": "FaceOcclusions",
        "type": "object"
      },
      "FacePoses": {
        "properties": {
          "pitch": {
            "title": "Pitch",
            "type": "integer"
          },
          "roll": {
            "title": "Roll",
            "type": "integer"
          },
          "yaw": {
            "title": "Yaw",
            "type": "integer"
          }
        },
        "required": [
          "pitch",
          "roll",
          "yaw"
        ],
        "title": "FacePoses",
        "type": "object"
      },
      "FaceQuality": {
        "properties": {
          "noise": {
            "title": "Noise",
            "type": "integer"
          },
          "exposure": {
            "title": "Exposure",
            "type": "integer"
          },
          "blur": {
            "title": "Blur",
            "type": "integer"
          },
          "brightness": {
            "title": "Brightness",
            "type": "integer"
          },
          "sharpness": {
            "title": "Sharpness",
            "type": "integer"
          }
        },
        "required": [
          "noise",
          "exposure",
          "blur",
          "brightness",
          "sharpness"
        ],
        "title": "FaceQuality",
        "type": "object"
      },
      "FallbackTypeEnum": {
        "enum": [
          "rerun",
          "continue"
        ],
        "type": "string",
        "description": "* `rerun` - Rerun\n* `continue` - Continue"
      },
      "Feature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "fullname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "FieldError": {
        "type": "object",
        "properties": {
          "<parameter_name>": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "<parameter_name>"
        ]
      },
      "FinalStatusEnum": {
        "enum": [
          "sucess",
          "fail"
        ],
        "type": "string"
      },
      "FinanceSubCategoryType": {
        "enum": [
          "Gambling",
          "Finance",
          "MoneyContent"
        ],
        "title": "FinanceSubCategoryType",
        "type": "string"
      },
      "FinancialBankInformation": {
        "properties": {
          "iban": {
            "default": null,
            "description": "International Bank Account Number.",
            "title": "Iban",
            "type": "string"
          },
          "swift": {
            "default": null,
            "description": "Society for Worldwide Interbank Financial Telecommunication code.",
            "title": "Swift",
            "type": "string"
          },
          "bsb": {
            "default": null,
            "description": "Bank State Branch code (Australia).",
            "title": "Bsb",
            "type": "string"
          },
          "sort_code": {
            "default": null,
            "description": "Sort code for UK banks.",
            "title": "Sort Code",
            "type": "string"
          },
          "account_number": {
            "default": null,
            "description": "Bank account number.",
            "title": "Account Number",
            "type": "string"
          },
          "routing_number": {
            "default": null,
            "description": "Routing number for banks in the United States.",
            "title": "Routing Number",
            "type": "string"
          },
          "bic": {
            "default": null,
            "description": "Bank Identifier Code.",
            "title": "Bic",
            "type": "string"
          }
        },
        "title": "FinancialBankInformation",
        "type": "object"
      },
      "FinancialBarcode": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "value",
          "type"
        ],
        "title": "FinancialBarcode",
        "type": "object"
      },
      "FinancialCustomerInformation": {
        "properties": {
          "name": {
            "default": null,
            "description": "The name of the invoiced customer.",
            "title": "Name",
            "type": "string"
          },
          "id_reference": {
            "default": null,
            "description": "Unique reference ID for the customer.",
            "title": "Id Reference",
            "type": "string"
          },
          "mailling_address": {
            "default": null,
            "description": "The mailing address of the customer.",
            "title": "Mailling Address",
            "type": "string"
          },
          "billing_address": {
            "default": null,
            "description": "The explicit billing address for the customer.",
            "title": "Billing Address",
            "type": "string"
          },
          "shipping_address": {
            "default": null,
            "description": "The shipping address for the customer.",
            "title": "Shipping Address",
            "type": "string"
          },
          "service_address": {
            "default": null,
            "description": "The service address associated with the customer.",
            "title": "Service Address",
            "type": "string"
          },
          "remittance_address": {
            "default": null,
            "description": "The address to which payments should be remitted.",
            "title": "Remittance Address",
            "type": "string"
          },
          "email": {
            "default": null,
            "description": "The email address of the customer.",
            "title": "Email",
            "type": "string"
          },
          "phone": {
            "default": null,
            "description": "The phone number associated with the customer.",
            "title": "Phone",
            "type": "string"
          },
          "vat_number": {
            "default": null,
            "description": "VAT (Value Added Tax) number of the customer.",
            "title": "Vat Number",
            "type": "string"
          },
          "abn_number": {
            "default": null,
            "description": "ABN (Australian Business Number) of the customer.",
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "default": null,
            "description": "GST (Goods and Services Tax) number of the customer.",
            "title": "Gst Number",
            "type": "string"
          },
          "pan_number": {
            "default": null,
            "description": "PAN (Permanent Account Number) of the customer.",
            "title": "Pan Number",
            "type": "string"
          },
          "business_number": {
            "default": null,
            "description": "Business registration number of the customer.",
            "title": "Business Number",
            "type": "string"
          },
          "siret_number": {
            "default": null,
            "description": "SIRET (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises et de leurs \u00c9tablissements) number of the customer.",
            "title": "Siret Number",
            "type": "string"
          },
          "siren_number": {
            "default": null,
            "description": "SIREN (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises) number of the customer.",
            "title": "Siren Number",
            "type": "string"
          },
          "customer_number": {
            "default": null,
            "description": "Customer identification number.",
            "title": "Customer Number",
            "type": "string"
          },
          "coc_number": {
            "default": null,
            "description": "Chamber of Commerce registration number.",
            "title": "Coc Number",
            "type": "string"
          },
          "fiscal_number": {
            "default": null,
            "description": "Fiscal identification number of the customer.",
            "title": "Fiscal Number",
            "type": "string"
          },
          "registration_number": {
            "default": null,
            "description": "Official registration number of the customer.",
            "title": "Registration Number",
            "type": "string"
          },
          "tax_id": {
            "default": null,
            "description": "Tax identification number of the customer.",
            "title": "Tax Id",
            "type": "string"
          },
          "website": {
            "default": null,
            "description": "The website associated with the customer.",
            "title": "Website",
            "type": "string"
          },
          "remit_to_name": {
            "default": null,
            "description": "The name associated with the customer's remittance address.",
            "title": "Remit To Name",
            "type": "string"
          },
          "city": {
            "default": null,
            "description": "The city associated with the customer's address.",
            "title": "City",
            "type": "string"
          },
          "country": {
            "default": null,
            "description": "The country associated with the customer's address.",
            "title": "Country",
            "type": "string"
          },
          "house_number": {
            "default": null,
            "description": "The house number associated with the customer's address.",
            "title": "House Number",
            "type": "string"
          },
          "province": {
            "default": null,
            "description": "The province associated with the customer's address.",
            "title": "Province",
            "type": "string"
          },
          "street_name": {
            "default": null,
            "description": "The street name associated with the customer's address.",
            "title": "Street Name",
            "type": "string"
          },
          "zip_code": {
            "default": null,
            "description": "The ZIP code associated with the customer's address.",
            "title": "Zip Code",
            "type": "string"
          },
          "municipality": {
            "default": null,
            "description": "The municipality associated with the customer's address.",
            "title": "Municipality",
            "type": "string"
          }
        },
        "title": "FinancialCustomerInformation",
        "type": "object"
      },
      "FinancialDocumentInformation": {
        "properties": {
          "invoice_receipt_id": {
            "default": null,
            "description": "Identifier for the invoice.",
            "title": "Invoice Receipt Id",
            "type": "string"
          },
          "purchase_order": {
            "default": null,
            "description": "Purchase order related to the document.",
            "title": "Purchase Order",
            "type": "string"
          },
          "invoice_date": {
            "default": null,
            "description": "Date of the invoice.",
            "title": "Invoice Date",
            "type": "string"
          },
          "time": {
            "default": null,
            "description": "Time associated with the document.",
            "title": "Time",
            "type": "string"
          },
          "invoice_due_date": {
            "default": null,
            "description": "Due date for the invoice.",
            "title": "Invoice Due Date",
            "type": "string"
          },
          "service_start_date": {
            "default": null,
            "description": "Start date of the service associated with the document.",
            "title": "Service Start Date",
            "type": "string"
          },
          "service_end_date": {
            "default": null,
            "description": "End date of the service associated with the document.",
            "title": "Service End Date",
            "type": "string"
          },
          "reference": {
            "default": null,
            "description": "Reference number associated with the document.",
            "title": "Reference",
            "type": "string"
          },
          "biller_code": {
            "default": null,
            "description": "Biller code associated with the document.",
            "title": "Biller Code",
            "type": "string"
          },
          "order_date": {
            "default": null,
            "description": "Date of the order associated with the document.",
            "title": "Order Date",
            "type": "string"
          },
          "tracking_number": {
            "default": null,
            "description": "Tracking number associated with the document.",
            "title": "Tracking Number",
            "type": "string"
          },
          "barcodes": {
            "description": "List of barcodes associated with the document.",
            "items": {
              "$ref": "#/components/schemas/FinancialBarcode"
            },
            "title": "Barcodes",
            "type": "array"
          }
        },
        "title": "FinancialDocumentInformation",
        "type": "object"
      },
      "FinancialDocumentMetadata": {
        "properties": {
          "document_index": {
            "default": null,
            "description": "Index of the detected document.",
            "title": "Document Index",
            "type": "integer"
          },
          "document_page_number": {
            "default": null,
            "description": "Page number within the document.",
            "title": "Document Page Number",
            "type": "integer"
          },
          "document_type": {
            "default": null,
            "description": "Type or category of the document.",
            "title": "Document Type",
            "type": "string"
          }
        },
        "title": "FinancialDocumentMetadata",
        "type": "object"
      },
      "FinancialInformationSubCategoryType": {
        "enum": [
          "CreditCard",
          "CardExpiry",
          "BankAccountNumber",
          "BankRoutingNumber",
          "SwiftCode",
          "TaxIdentificationNumber"
        ],
        "title": "FinancialInformationSubCategoryType",
        "type": "string"
      },
      "FinancialLineItem": {
        "properties": {
          "tax": {
            "default": null,
            "description": "Tax amount for the line item.",
            "title": "Tax",
            "type": "integer"
          },
          "amount_line": {
            "default": null,
            "description": "Total amount for the line item.",
            "title": "Amount Line",
            "type": "integer"
          },
          "description": {
            "default": null,
            "description": "Description of the line item.",
            "title": "Description",
            "type": "string"
          },
          "quantity": {
            "default": null,
            "description": "Quantity of units for the line item.",
            "title": "Quantity",
            "type": "integer"
          },
          "unit_price": {
            "default": null,
            "description": "Unit price for each unit in the line item.",
            "title": "Unit Price",
            "type": "integer"
          },
          "unit_type": {
            "default": null,
            "description": "Type of unit (e.g., hours, items).",
            "title": "Unit Type",
            "type": "string"
          },
          "date": {
            "default": null,
            "description": "Date associated with the line item.",
            "title": "Date",
            "type": "string"
          },
          "product_code": {
            "default": null,
            "description": "Product code or identifier for the line item.",
            "title": "Product Code",
            "type": "string"
          },
          "purchase_order": {
            "default": null,
            "description": "Purchase order related to the line item.",
            "title": "Purchase Order",
            "type": "string"
          },
          "tax_rate": {
            "default": null,
            "description": "Tax rate applied to the line item.",
            "title": "Tax Rate",
            "type": "integer"
          },
          "base_total": {
            "default": null,
            "description": "Base total amount before any discounts or taxes.",
            "title": "Base Total",
            "type": "integer"
          },
          "sub_total": {
            "default": null,
            "description": "Subtotal amount for the line item.",
            "title": "Sub Total",
            "type": "integer"
          },
          "discount_amount": {
            "default": null,
            "description": "Amount of discount applied to the line item.",
            "title": "Discount Amount",
            "type": "integer"
          },
          "discount_rate": {
            "default": null,
            "description": "Rate of discount applied to the line item.",
            "title": "Discount Rate",
            "type": "integer"
          },
          "discount_code": {
            "default": null,
            "description": "Code associated with any discount applied to the line item.",
            "title": "Discount Code",
            "type": "string"
          },
          "order_number": {
            "default": null,
            "description": "Order number associated with the line item.",
            "title": "Order Number",
            "type": "string"
          },
          "title": {
            "default": null,
            "description": "Title or name of the line item.",
            "title": "Title",
            "type": "string"
          }
        },
        "title": "FinancialLineItem",
        "type": "object"
      },
      "FinancialLocalInformation": {
        "properties": {
          "currency": {
            "default": null,
            "description": "Currency used in financial transactions.",
            "title": "Currency",
            "type": "string"
          },
          "currency_code": {
            "default": null,
            "description": "Currency code (e.g., USD, EUR).",
            "title": "Currency Code",
            "type": "string"
          },
          "currency_exchange_rate": {
            "default": null,
            "description": "Exchange rate for the specified currency.",
            "title": "Currency Exchange Rate",
            "type": "string"
          },
          "country": {
            "default": null,
            "description": "Country associated with the local financial information.",
            "title": "Country",
            "type": "string"
          },
          "language": {
            "default": null,
            "description": "Language used in financial transactions.",
            "title": "Language",
            "type": "string"
          }
        },
        "title": "FinancialLocalInformation",
        "type": "object"
      },
      "FinancialMerchantInformation": {
        "properties": {
          "name": {
            "default": null,
            "description": "Name of the merchant.",
            "title": "Name",
            "type": "string"
          },
          "address": {
            "default": null,
            "description": "Address of the merchant.",
            "title": "Address",
            "type": "string"
          },
          "phone": {
            "default": null,
            "description": "Phone number of the merchant.",
            "title": "Phone",
            "type": "string"
          },
          "tax_id": {
            "default": null,
            "description": "Tax identification number of the merchant.",
            "title": "Tax Id",
            "type": "string"
          },
          "id_reference": {
            "default": null,
            "description": "Unique reference ID for the merchant.",
            "title": "Id Reference",
            "type": "string"
          },
          "vat_number": {
            "default": null,
            "description": "VAT (Value Added Tax) number of the merchant.",
            "title": "Vat Number",
            "type": "string"
          },
          "abn_number": {
            "default": null,
            "description": "ABN (Australian Business Number) of the merchant.",
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "default": null,
            "description": "GST (Goods and Services Tax) number of the merchant.",
            "title": "Gst Number",
            "type": "string"
          },
          "business_number": {
            "default": null,
            "description": "Business registration number of the merchant.",
            "title": "Business Number",
            "type": "string"
          },
          "siret_number": {
            "default": null,
            "description": "SIRET (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises et de leurs \u00c9tablissements) number of the merchant.",
            "title": "Siret Number",
            "type": "string"
          },
          "siren_number": {
            "default": null,
            "description": "SIREN (Syst\u00e8me d'Identification du R\u00e9pertoire des Entreprises) number of the merchant.",
            "title": "Siren Number",
            "type": "string"
          },
          "pan_number": {
            "default": null,
            "description": "PAN (Permanent Account Number) of the merchant.",
            "title": "Pan Number",
            "type": "string"
          },
          "coc_number": {
            "default": null,
            "description": "Chamber of Commerce registration number of the merchant.",
            "title": "Coc Number",
            "type": "string"
          },
          "fiscal_number": {
            "default": null,
            "description": "Fiscal identification number of the merchant.",
            "title": "Fiscal Number",
            "type": "string"
          },
          "email": {
            "default": null,
            "description": "Email address of the merchant.",
            "title": "Email",
            "type": "string"
          },
          "fax": {
            "default": null,
            "description": "Fax number of the merchant.",
            "title": "Fax",
            "type": "string"
          },
          "website": {
            "default": null,
            "description": "Website of the merchant.",
            "title": "Website",
            "type": "string"
          },
          "registration": {
            "default": null,
            "description": "Official registration information of the merchant.",
            "title": "Registration",
            "type": "string"
          },
          "city": {
            "default": null,
            "description": "City associated with the merchant's address.",
            "title": "City",
            "type": "string"
          },
          "country": {
            "default": null,
            "description": "Country associated with the merchant's address.",
            "title": "Country",
            "type": "string"
          },
          "house_number": {
            "default": null,
            "description": "House number associated with the merchant's address.",
            "title": "House Number",
            "type": "string"
          },
          "province": {
            "default": null,
            "description": "Province associated with the merchant's address.",
            "title": "Province",
            "type": "string"
          },
          "street_name": {
            "default": null,
            "description": "Street name associated with the merchant's address.",
            "title": "Street Name",
            "type": "string"
          },
          "zip_code": {
            "default": null,
            "description": "ZIP code associated with the merchant's address.",
            "title": "Zip Code",
            "type": "string"
          },
          "country_code": {
            "default": null,
            "description": "Country code associated with the merchant's location.",
            "title": "Country Code",
            "type": "string"
          }
        },
        "title": "FinancialMerchantInformation",
        "type": "object"
      },
      "FinancialParserObjectDataClass": {
        "properties": {
          "customer_information": {
            "$ref": "#/components/schemas/FinancialCustomerInformation"
          },
          "merchant_information": {
            "$ref": "#/components/schemas/FinancialMerchantInformation"
          },
          "payment_information": {
            "$ref": "#/components/schemas/FinancialPaymentInformation"
          },
          "financial_document_information": {
            "$ref": "#/components/schemas/FinancialDocumentInformation"
          },
          "local": {
            "$ref": "#/components/schemas/FinancialLocalInformation"
          },
          "bank": {
            "$ref": "#/components/schemas/FinancialBankInformation"
          },
          "item_lines": {
            "description": "List of line items associated with the document.",
            "items": {
              "$ref": "#/components/schemas/FinancialLineItem"
            },
            "title": "Item Lines",
            "type": "array"
          },
          "document_metadata": {
            "$ref": "#/components/schemas/FinancialDocumentMetadata"
          }
        },
        "required": [
          "customer_information",
          "merchant_information",
          "payment_information",
          "financial_document_information",
          "local",
          "bank",
          "document_metadata"
        ],
        "title": "FinancialParserObjectDataClass",
        "type": "object"
      },
      "FinancialPaymentInformation": {
        "properties": {
          "amount_due": {
            "default": null,
            "description": "Amount due for payment.",
            "title": "Amount Due",
            "type": "integer"
          },
          "amount_tip": {
            "default": null,
            "description": "Tip amount in a financial transaction.",
            "title": "Amount Tip",
            "type": "integer"
          },
          "amount_shipping": {
            "default": null,
            "description": "Shipping cost in a financial transaction.",
            "title": "Amount Shipping",
            "type": "integer"
          },
          "amount_change": {
            "default": null,
            "description": "Change amount in a financial transaction.",
            "title": "Amount Change",
            "type": "integer"
          },
          "amount_paid": {
            "default": null,
            "description": "Amount already paid in a financial transaction.",
            "title": "Amount Paid",
            "type": "integer"
          },
          "total": {
            "default": null,
            "description": "Total amount in the invoice.",
            "title": "Total",
            "type": "integer"
          },
          "subtotal": {
            "default": null,
            "description": "Subtotal amount in a financial transaction.",
            "title": "Subtotal",
            "type": "integer"
          },
          "total_tax": {
            "default": null,
            "description": "Total tax amount in a financial transaction.",
            "title": "Total Tax",
            "type": "integer"
          },
          "tax_rate": {
            "default": null,
            "description": "Tax rate applied in a financial transaction.",
            "title": "Tax Rate",
            "type": "integer"
          },
          "discount": {
            "default": null,
            "description": "Discount amount applied in a financial transaction.",
            "title": "Discount",
            "type": "integer"
          },
          "gratuity": {
            "default": null,
            "description": "Gratuity amount in a financial transaction.",
            "title": "Gratuity",
            "type": "integer"
          },
          "service_charge": {
            "default": null,
            "description": "Service charge in a financial transaction.",
            "title": "Service Charge",
            "type": "integer"
          },
          "previous_unpaid_balance": {
            "default": null,
            "description": "Previous unpaid balance in a financial transaction.",
            "title": "Previous Unpaid Balance",
            "type": "integer"
          },
          "prior_balance": {
            "default": null,
            "description": "Prior balance before the current financial transaction.",
            "title": "Prior Balance",
            "type": "integer"
          },
          "payment_terms": {
            "default": null,
            "description": "Terms and conditions for payment.",
            "title": "Payment Terms",
            "type": "string"
          },
          "payment_method": {
            "default": null,
            "description": "Payment method used in the financial transaction.",
            "title": "Payment Method",
            "type": "string"
          },
          "payment_card_number": {
            "default": null,
            "description": "Card number used in the payment.",
            "title": "Payment Card Number",
            "type": "string"
          },
          "payment_auth_code": {
            "default": null,
            "description": "Authorization code for the payment.",
            "title": "Payment Auth Code",
            "type": "string"
          },
          "shipping_handling_charge": {
            "default": null,
            "description": "Charge for shipping and handling in a financial transaction.",
            "title": "Shipping Handling Charge",
            "type": "integer"
          },
          "transaction_number": {
            "default": null,
            "description": "Unique identifier for the financial transaction.",
            "title": "Transaction Number",
            "type": "string"
          },
          "transaction_reference": {
            "default": null,
            "description": "Reference number for the financial transaction.",
            "title": "Transaction Reference",
            "type": "string"
          }
        },
        "title": "FinancialPaymentInformation",
        "type": "object"
      },
      "GeneralSentimentEnum": {
        "enum": [
          "Positive",
          "Negative",
          "Neutral"
        ],
        "type": "string"
      },
      "GeneratedImageDataClass": {
        "properties": {
          "image": {
            "title": "Image",
            "type": "string"
          },
          "image_resource_url": {
            "title": "Image Resource Url",
            "type": "string"
          }
        },
        "required": [
          "image",
          "image_resource_url"
        ],
        "title": "GeneratedImageDataClass",
        "type": "object"
      },
      "HateAndExtremismSubCategoryType": {
        "enum": [
          "Hate",
          "Harassment",
          "Threatening",
          "Extremist",
          "Racy"
        ],
        "title": "HateAndExtremismSubCategoryType",
        "type": "string"
      },
      "IdentificationNumbersSubCategoryType": {
        "enum": [
          "SocialSecurityNumber",
          "NationalIdentificationNumber",
          "NationalHealthService",
          "ResidentRegistrationNumber",
          "DriverLicenseNumber",
          "PassportNumber"
        ],
        "title": "IdentificationNumbersSubCategoryType",
        "type": "string"
      },
      "InfosCustomNamedEntityRecognitionDataClass": {
        "properties": {
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "category": {
            "title": "Category",
            "type": "string"
          }
        },
        "required": [
          "entity",
          "category"
        ],
        "title": "InfosCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "InfosIdentityParserDataClass": {
        "properties": {
          "last_name": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "given_names": {
            "items": {
              "$ref": "#/components/schemas/ItemIdentityParserDataClass"
            },
            "title": "Given Names",
            "type": "array"
          },
          "birth_place": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "birth_date": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "issuance_date": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "expire_date": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "document_id": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "issuing_state": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "address": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "age": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "country": {
            "$ref": "#/components/schemas/Country"
          },
          "document_type": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "gender": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "image_id": {
            "items": {
              "$ref": "#/components/schemas/ItemIdentityParserDataClass"
            },
            "title": "Image Id",
            "type": "array"
          },
          "image_signature": {
            "items": {
              "$ref": "#/components/schemas/ItemIdentityParserDataClass"
            },
            "title": "Image Signature",
            "type": "array"
          },
          "mrz": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          },
          "nationality": {
            "$ref": "#/components/schemas/ItemIdentityParserDataClass"
          }
        },
        "required": [
          "last_name",
          "birth_place",
          "birth_date",
          "issuance_date",
          "expire_date",
          "document_id",
          "issuing_state",
          "address",
          "age",
          "country",
          "document_type",
          "gender",
          "mrz",
          "nationality"
        ],
        "title": "InfosIdentityParserDataClass",
        "type": "object"
      },
      "InfosInvoiceParserDataClass": {
        "properties": {
          "customer_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInformationInvoice"
              }
            ],
            "default": {
              "abn_number": null,
              "customer_address": null,
              "customer_billing_address": null,
              "customer_email": null,
              "customer_id": null,
              "customer_mailing_address": null,
              "customer_name": null,
              "customer_remittance_address": null,
              "customer_service_address": null,
              "customer_shipping_address": null,
              "customer_tax_id": null,
              "gst_number": null,
              "pan_number": null,
              "siren_number": null,
              "siret_number": null,
              "vat_number": null
            }
          },
          "merchant_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantInformationInvoice"
              }
            ],
            "default": {
              "abn_number": null,
              "gst_number": null,
              "merchant_address": null,
              "merchant_email": null,
              "merchant_fax": null,
              "merchant_name": null,
              "merchant_phone": null,
              "merchant_siren": null,
              "merchant_siret": null,
              "merchant_tax_id": null,
              "merchant_website": null,
              "pan_number": null,
              "vat_number": null
            }
          },
          "invoice_number": {
            "default": null,
            "title": "Invoice Number",
            "type": "string"
          },
          "invoice_total": {
            "default": null,
            "title": "Invoice Total",
            "type": "integer"
          },
          "invoice_subtotal": {
            "default": null,
            "title": "Invoice Subtotal",
            "type": "integer"
          },
          "gratuity": {
            "default": null,
            "title": "Gratuity",
            "type": "integer"
          },
          "amount_due": {
            "default": null,
            "title": "Amount Due",
            "type": "integer"
          },
          "previous_unpaid_balance": {
            "default": null,
            "title": "Previous Unpaid Balance",
            "type": "integer"
          },
          "discount": {
            "default": null,
            "title": "Discount",
            "type": "integer"
          },
          "taxes": {
            "items": {
              "$ref": "#/components/schemas/TaxesInvoice"
            },
            "title": "Taxes",
            "type": "array"
          },
          "service_charge": {
            "default": null,
            "title": "Service Charge",
            "type": "integer"
          },
          "payment_term": {
            "default": null,
            "title": "Payment Term",
            "type": "string"
          },
          "purchase_order": {
            "default": null,
            "title": "Purchase Order",
            "type": "string"
          },
          "date": {
            "default": null,
            "title": "Date",
            "type": "string"
          },
          "due_date": {
            "default": null,
            "title": "Due Date",
            "type": "string"
          },
          "service_date": {
            "default": null,
            "title": "Service Date",
            "type": "string"
          },
          "service_due_date": {
            "default": null,
            "title": "Service Due Date",
            "type": "string"
          },
          "po_number": {
            "default": null,
            "title": "Po Number",
            "type": "string"
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocaleInvoice"
              }
            ],
            "default": {
              "currency": null,
              "language": null
            }
          },
          "bank_informations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BankInvoice"
              }
            ],
            "default": {
              "account_number": null,
              "bsb": null,
              "iban": null,
              "rooting_number": null,
              "sort_code": null,
              "swift": null,
              "vat_number": null
            }
          },
          "item_lines": {
            "items": {
              "$ref": "#/components/schemas/ItemLinesInvoice"
            },
            "title": "Item Lines",
            "type": "array"
          }
        },
        "title": "InfosInvoiceParserDataClass",
        "type": "object"
      },
      "InfosKeywordExtractionDataClass": {
        "properties": {
          "keyword": {
            "title": "Keyword",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          }
        },
        "required": [
          "keyword",
          "importance"
        ],
        "title": "InfosKeywordExtractionDataClass",
        "type": "object"
      },
      "InfosLanguageDetectionDataClass": {
        "properties": {
          "language": {
            "title": "Language",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "language",
          "display_name",
          "confidence"
        ],
        "title": "InfosLanguageDetectionDataClass",
        "type": "object"
      },
      "InfosNamedEntityRecognitionDataClass": {
        "properties": {
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "category": {
            "title": "Category",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          }
        },
        "required": [
          "entity",
          "category",
          "importance"
        ],
        "title": "InfosNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "InfosReceiptParserDataClass": {
        "properties": {
          "invoice_number": {
            "default": null,
            "title": "Invoice Number",
            "type": "string"
          },
          "invoice_total": {
            "default": null,
            "title": "Invoice Total",
            "type": "integer"
          },
          "invoice_subtotal": {
            "default": null,
            "title": "Invoice Subtotal",
            "type": "integer"
          },
          "barcodes": {
            "items": {
              "$ref": "#/components/schemas/BarCode"
            },
            "title": "Barcodes",
            "type": "array"
          },
          "category": {
            "default": null,
            "title": "Category",
            "type": "string"
          },
          "date": {
            "default": null,
            "title": "Date",
            "type": "string"
          },
          "due_date": {
            "default": null,
            "title": "Due Date",
            "type": "string"
          },
          "time": {
            "default": null,
            "title": "Time",
            "type": "string"
          },
          "customer_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerInformation"
              }
            ],
            "default": {
              "customer_name": null
            }
          },
          "merchant_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantInformation"
              }
            ],
            "default": {
              "merchant_abn_number": null,
              "merchant_address": null,
              "merchant_gst_number": null,
              "merchant_name": null,
              "merchant_phone": null,
              "merchant_siren": null,
              "merchant_siret": null,
              "merchant_url": null,
              "merchant_vat_number": null
            }
          },
          "payment_information": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentInformation"
              }
            ],
            "default": {
              "card_number": null,
              "card_type": null,
              "cash": null,
              "change": null,
              "discount": null,
              "tip": null
            }
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Locale"
              }
            ],
            "default": {
              "country": null,
              "currency": null,
              "language": null
            }
          },
          "taxes": {
            "items": {
              "$ref": "#/components/schemas/Taxes"
            },
            "title": "Taxes",
            "type": "array"
          },
          "receipt_infos": {
            "title": "Receipt Infos",
            "type": "object"
          },
          "item_lines": {
            "items": {
              "$ref": "#/components/schemas/ItemLines"
            },
            "title": "Item Lines",
            "type": "array"
          }
        },
        "title": "InfosReceiptParserDataClass",
        "type": "object"
      },
      "InfosSearchDataClass": {
        "properties": {
          "object": {
            "title": "Object",
            "type": "string"
          },
          "document": {
            "title": "Document",
            "type": "integer"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "object",
          "document",
          "score"
        ],
        "title": "InfosSearchDataClass",
        "type": "object"
      },
      "InfosSyntaxAnalysisDataClass": {
        "properties": {
          "word": {
            "title": "Word",
            "type": "string"
          },
          "importance": {
            "title": "Importance",
            "type": "integer"
          },
          "tag": {
            "title": "Tag",
            "type": "string"
          },
          "lemma": {
            "title": "Lemma",
            "type": "string"
          },
          "others": {
            "title": "Others",
            "type": "object"
          }
        },
        "required": [
          "word",
          "importance",
          "tag",
          "lemma"
        ],
        "title": "InfosSyntaxAnalysisDataClass",
        "type": "object"
      },
      "ItemBankCheckParsingDataClass": {
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "integer"
          },
          "amount_text": {
            "title": "Amount Text",
            "type": "string"
          },
          "bank_address": {
            "title": "Bank Address",
            "type": "string"
          },
          "bank_name": {
            "title": "Bank Name",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "type": "string"
          },
          "memo": {
            "title": "Memo",
            "type": "string"
          },
          "payer_address": {
            "title": "Payer Address",
            "type": "string"
          },
          "payer_name": {
            "title": "Payer Name",
            "type": "string"
          },
          "receiver_address": {
            "title": "Receiver Address",
            "type": "string"
          },
          "receiver_name": {
            "title": "Receiver Name",
            "type": "string"
          },
          "currency": {
            "title": "Currency",
            "type": "string"
          },
          "micr": {
            "$ref": "#/components/schemas/MicrModel"
          }
        },
        "required": [
          "amount",
          "amount_text",
          "bank_address",
          "bank_name",
          "date",
          "memo",
          "payer_address",
          "payer_name",
          "receiver_address",
          "receiver_name",
          "currency",
          "micr"
        ],
        "title": "ItemBankCheckParsingDataClass",
        "type": "object"
      },
      "ItemCustomClassificationDataClass": {
        "properties": {
          "input": {
            "title": "Input",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "input",
          "label",
          "confidence"
        ],
        "title": "ItemCustomClassificationDataClass",
        "type": "object"
      },
      "ItemDataExtraction": {
        "properties": {
          "key": {
            "title": "Key",
            "type": "string"
          },
          "value": {
            "title": "Value"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/BoundingBox"
          },
          "confidence_score": {
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Score",
            "type": "integer"
          }
        },
        "required": [
          "key",
          "value",
          "bounding_box",
          "confidence_score"
        ],
        "title": "ItemDataExtraction",
        "type": "object"
      },
      "ItemIdentityParserDataClass": {
        "properties": {
          "value": {
            "default": null,
            "title": "Value",
            "type": "string"
          },
          "confidence": {
            "default": null,
            "title": "Confidence",
            "type": "integer"
          }
        },
        "title": "ItemIdentityParserDataClass",
        "type": "object"
      },
      "ItemLines": {
        "properties": {
          "description": {
            "default": null,
            "title": "Description",
            "type": "string"
          },
          "quantity": {
            "default": null,
            "title": "Quantity",
            "type": "integer"
          },
          "amount": {
            "default": null,
            "title": "Amount",
            "type": "integer"
          },
          "unit_price": {
            "default": null,
            "title": "Unit Price",
            "type": "integer"
          }
        },
        "title": "ItemLines",
        "type": "object"
      },
      "ItemLinesInvoice": {
        "properties": {
          "description": {
            "default": null,
            "title": "Description",
            "type": "string"
          },
          "quantity": {
            "default": null,
            "title": "Quantity",
            "type": "integer"
          },
          "amount": {
            "default": null,
            "title": "Amount",
            "type": "integer"
          },
          "unit_price": {
            "default": null,
            "title": "Unit Price",
            "type": "integer"
          },
          "discount": {
            "default": null,
            "title": "Discount",
            "type": "integer"
          },
          "product_code": {
            "default": null,
            "title": "Product Code",
            "type": "string"
          },
          "date_item": {
            "default": null,
            "title": "Date Item",
            "type": "string"
          },
          "tax_item": {
            "default": null,
            "title": "Tax Item",
            "type": "integer"
          },
          "tax_rate": {
            "default": null,
            "title": "Tax Rate",
            "type": "integer"
          }
        },
        "title": "ItemLinesInvoice",
        "type": "object"
      },
      "LandmarkItem": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "bounding_box": {
            "items": {
              "$ref": "#/components/schemas/LandmarkVertice"
            },
            "title": "Bounding Box",
            "type": "array"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/LandmarkLocation"
            },
            "title": "Locations",
            "type": "array"
          }
        },
        "required": [
          "description",
          "confidence"
        ],
        "title": "LandmarkItem",
        "type": "object"
      },
      "LandmarkLatLng": {
        "properties": {
          "latitude": {
            "title": "Latitude",
            "type": "integer"
          },
          "longitude": {
            "title": "Longitude",
            "type": "integer"
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "title": "LandmarkLatLng",
        "type": "object"
      },
      "LandmarkLocation": {
        "properties": {
          "lat_lng": {
            "$ref": "#/components/schemas/LandmarkLatLng"
          }
        },
        "required": [
          "lat_lng"
        ],
        "title": "LandmarkLocation",
        "type": "object"
      },
      "LandmarkVertice": {
        "properties": {
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "title": "LandmarkVertice",
        "type": "object"
      },
      "LandmarksVideo": {
        "properties": {
          "eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Left",
            "type": "array"
          },
          "eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Right",
            "type": "array"
          },
          "nose": {
            "items": {
              "type": "integer"
            },
            "title": "Nose",
            "type": "array"
          },
          "mouth_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Left",
            "type": "array"
          },
          "mouth_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Right",
            "type": "array"
          }
        },
        "title": "LandmarksVideo",
        "type": "object"
      },
      "LaunchAsyncJobResponse": {
        "type": "object",
        "properties": {
          "public_id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "required": [
          "public_id"
        ]
      },
      "Line": {
        "description": "Line of a document\n\n    Attributes:\n        text (str): Text detected in the line\n        bounding_boxes (Sequence[BoundingBox]): Bounding boxes of the words in the line\n        words (Sequence[Word]): List of words of the line\n        confidence (float): Confidence of the line\n    ",
        "properties": {
          "text": {
            "description": "Text detected in the line",
            "title": "Text",
            "type": "string"
          },
          "words": {
            "description": "List of words",
            "items": {
              "$ref": "#/components/schemas/Word"
            },
            "title": "Words",
            "type": "array"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Bounding boxes of the words in the line"
          },
          "confidence": {
            "description": "Confidence of the line",
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "bounding_box",
          "confidence"
        ],
        "title": "Line",
        "type": "object"
      },
      "ListAsyncJobResponse": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsyncJobList"
            }
          }
        },
        "required": [
          "jobs"
        ]
      },
      "Locale": {
        "properties": {
          "currency": {
            "default": null,
            "title": "Currency",
            "type": "string"
          },
          "language": {
            "default": null,
            "title": "Language",
            "type": "string"
          },
          "country": {
            "default": null,
            "title": "Country",
            "type": "string"
          }
        },
        "title": "Locale",
        "type": "object"
      },
      "LocaleInvoice": {
        "properties": {
          "currency": {
            "title": "Currency",
            "type": "string"
          },
          "language": {
            "title": "Language",
            "type": "string"
          }
        },
        "required": [
          "currency",
          "language"
        ],
        "title": "LocaleInvoice",
        "type": "object"
      },
      "LocationInformationSubCategoryType": {
        "enum": [
          "Address",
          "Location"
        ],
        "title": "LocationInformationSubCategoryType",
        "type": "string"
      },
      "LogoBoundingPoly": {
        "properties": {
          "vertices": {
            "items": {
              "$ref": "#/components/schemas/LogoVertice"
            },
            "title": "Vertices",
            "type": "array"
          }
        },
        "required": [
          "vertices"
        ],
        "title": "LogoBoundingPoly",
        "type": "object"
      },
      "LogoItem": {
        "properties": {
          "bounding_poly": {
            "$ref": "#/components/schemas/LogoBoundingPoly"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "bounding_poly",
          "description",
          "score"
        ],
        "title": "LogoItem",
        "type": "object"
      },
      "LogoTrack": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "tracking": {
            "items": {
              "$ref": "#/components/schemas/VideoLogo"
            },
            "title": "Tracking",
            "type": "array"
          }
        },
        "required": [
          "description"
        ],
        "title": "LogoTrack",
        "type": "object"
      },
      "LogoVertice": {
        "properties": {
          "x": {
            "title": "X",
            "type": "integer"
          },
          "y": {
            "title": "Y",
            "type": "integer"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "title": "LogoVertice",
        "type": "object"
      },
      "LowerCloth": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "confidence"
        ],
        "title": "LowerCloth",
        "type": "object"
      },
      "MerchantInformation": {
        "properties": {
          "merchant_name": {
            "default": null,
            "title": "Merchant Name",
            "type": "string"
          },
          "merchant_address": {
            "default": null,
            "title": "Merchant Address",
            "type": "string"
          },
          "merchant_phone": {
            "default": null,
            "title": "Merchant Phone",
            "type": "string"
          },
          "merchant_url": {
            "default": null,
            "title": "Merchant Url",
            "type": "string"
          },
          "merchant_siret": {
            "default": null,
            "title": "Merchant Siret",
            "type": "string"
          },
          "merchant_siren": {
            "default": null,
            "title": "Merchant Siren",
            "type": "string"
          },
          "merchant_vat_number": {
            "default": null,
            "title": "Merchant Vat Number",
            "type": "string"
          },
          "merchant_gst_number": {
            "default": null,
            "title": "Merchant Gst Number",
            "type": "string"
          },
          "merchant_abn_number": {
            "default": null,
            "title": "Merchant Abn Number",
            "type": "string"
          }
        },
        "title": "MerchantInformation",
        "type": "object"
      },
      "MerchantInformationInvoice": {
        "properties": {
          "merchant_name": {
            "title": "Merchant Name",
            "type": "string"
          },
          "merchant_address": {
            "title": "Merchant Address",
            "type": "string"
          },
          "merchant_phone": {
            "title": "Merchant Phone",
            "type": "string"
          },
          "merchant_email": {
            "title": "Merchant Email",
            "type": "string"
          },
          "merchant_fax": {
            "title": "Merchant Fax",
            "type": "string"
          },
          "merchant_website": {
            "title": "Merchant Website",
            "type": "string"
          },
          "merchant_tax_id": {
            "title": "Merchant Tax Id",
            "type": "string"
          },
          "merchant_siret": {
            "title": "Merchant Siret",
            "type": "string"
          },
          "merchant_siren": {
            "title": "Merchant Siren",
            "type": "string"
          },
          "abn_number": {
            "title": "Abn Number",
            "type": "string"
          },
          "gst_number": {
            "title": "Gst Number",
            "type": "string"
          },
          "pan_number": {
            "title": "Pan Number",
            "type": "string"
          },
          "vat_number": {
            "title": "Vat Number",
            "type": "string"
          }
        },
        "required": [
          "merchant_name",
          "merchant_address",
          "merchant_phone",
          "merchant_email",
          "merchant_fax",
          "merchant_website",
          "merchant_tax_id",
          "merchant_siret",
          "merchant_siren",
          "abn_number",
          "gst_number",
          "pan_number",
          "vat_number"
        ],
        "title": "MerchantInformationInvoice",
        "type": "object"
      },
      "MicrModel": {
        "properties": {
          "raw": {
            "title": "Raw",
            "type": "string"
          },
          "account_number": {
            "title": "Account Number",
            "type": "string"
          },
          "routing_number": {
            "title": "Routing Number",
            "type": "string"
          },
          "serial_number": {
            "title": "Serial Number",
            "type": "string"
          },
          "check_number": {
            "title": "Check Number",
            "type": "string"
          }
        },
        "required": [
          "raw",
          "account_number",
          "routing_number",
          "serial_number",
          "check_number"
        ],
        "title": "MicrModel",
        "type": "object"
      },
      "MiscellaneousSubCategoryType": {
        "enum": [
          "URL",
          "IP",
          "MAC",
          "VehicleIdentificationNumber",
          "LicensePlate",
          "VoterNumber",
          "AWSKeys",
          "AzureKeys",
          "Password"
        ],
        "title": "MiscellaneousSubCategoryType",
        "type": "string"
      },
      "NestedBadRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/FieldError"
          }
        },
        "required": [
          "message",
          "type"
        ]
      },
      "NestedError": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "type"
        ]
      },
      "NotFoundResponse": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "default": "Not Found"
          }
        }
      },
      "NullEnum": {
        "enum": [
          null
        ]
      },
      "ObjectFrame": {
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoObjectBoundingBox"
          }
        },
        "required": [
          "timestamp",
          "bounding_box"
        ],
        "title": "ObjectFrame",
        "type": "object"
      },
      "ObjectItem": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "x_min": {
            "title": "X Min",
            "type": "integer"
          },
          "x_max": {
            "title": "X Max",
            "type": "integer"
          },
          "y_min": {
            "title": "Y Min",
            "type": "integer"
          },
          "y_max": {
            "title": "Y Max",
            "type": "integer"
          }
        },
        "required": [
          "label",
          "confidence",
          "x_min",
          "x_max",
          "y_min",
          "y_max"
        ],
        "title": "ObjectItem",
        "type": "object"
      },
      "ObjectTrack": {
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "frames": {
            "items": {
              "$ref": "#/components/schemas/ObjectFrame"
            },
            "title": "Frames",
            "type": "array"
          }
        },
        "required": [
          "description",
          "confidence"
        ],
        "title": "ObjectTrack",
        "type": "object"
      },
      "OcrTablesAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          }
        },
        "required": [
          "providers"
        ]
      },
      "OptionEnum": {
        "enum": [
          "FEMALE",
          "MALE"
        ],
        "type": "string",
        "description": "* `FEMALE` - Female\n* `MALE` - Male"
      },
      "OrganizationSubCategoryType": {
        "enum": [
          "CompanyName",
          "CompanyNumber",
          "BuisnessNumber"
        ],
        "title": "OrganizationSubCategoryType",
        "type": "string"
      },
      "OtherSubCategoryType": {
        "enum": [
          "Spoof",
          "Religion",
          "Offensive",
          "Other"
        ],
        "title": "OtherSubCategoryType",
        "type": "string"
      },
      "Page": {
        "description": "Page of a document\n\n    Attributes:\n        lines (Sequence[Line]): List of lines of the page\n    ",
        "properties": {
          "lines": {
            "description": "List of lines",
            "items": {
              "$ref": "#/components/schemas/Line"
            },
            "title": "Lines",
            "type": "array"
          }
        },
        "title": "Page",
        "type": "object"
      },
      "PaginatedBatchResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total requests made"
          },
          "current_page": {
            "type": "integer",
            "description": "Current page number"
          },
          "last_page": {
            "type": "integer"
          },
          "per_page": {
            "type": "integer",
            "description": "Number of requests per page"
          },
          "From": {
            "type": "integer"
          },
          "to": {
            "type": "integer"
          },
          "prev_page_url": {
            "type": "string",
            "format": "uri"
          },
          "next_page_url": {
            "type": "string",
            "format": "uri"
          },
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchResponseRequest"
            }
          },
          "status": {
            "$ref": "#/components/schemas/StatusE80Enum"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "From",
          "created",
          "current_page",
          "last_page",
          "per_page",
          "requests",
          "to",
          "total",
          "updated"
        ]
      },
      "PatchedAskYodaProjectUpdateRequest": {
        "type": "object",
        "properties": {
          "llm_provider": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default LLM provider to use in your project."
          },
          "llm_model": {
            "type": "string",
            "minLength": 1,
            "description": "Select a default Model for LLM provider to use in your project"
          }
        }
      },
      "PatchedAssetUpdateRequest": {
        "type": "object",
        "properties": {
          "sub_resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "PatchedDocParserUpdateRequest": {
        "type": "object",
        "properties": {
          "structure_providers": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "PatchedPromptTextRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1
          },
          "feature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        }
      },
      "PatchedResourceUpdateRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        }
      },
      "PatchedUniversalTranslatorCreatetRequest": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code from which the text will be translated",
            "maxLength": 10
          },
          "target_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code in which the text will be translated",
            "maxLength": 10
          },
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "The project name",
            "maxLength": 200
          },
          "fall_back_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            }
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        }
      },
      "PatchedWorkflowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "output_node": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          }
        }
      },
      "PaymentInformation": {
        "properties": {
          "card_type": {
            "default": null,
            "title": "Card Type",
            "type": "string"
          },
          "card_number": {
            "default": null,
            "title": "Card Number",
            "type": "string"
          },
          "cash": {
            "default": null,
            "title": "Cash",
            "type": "string"
          },
          "tip": {
            "default": null,
            "title": "Tip",
            "type": "string"
          },
          "discount": {
            "default": null,
            "title": "Discount",
            "type": "string"
          },
          "change": {
            "default": null,
            "title": "Change",
            "type": "string"
          }
        },
        "title": "PaymentInformation",
        "type": "object"
      },
      "PersonAttributes": {
        "properties": {
          "upper_cloths": {
            "items": {
              "$ref": "#/components/schemas/UpperCloth"
            },
            "title": "Upper Cloths",
            "type": "array"
          },
          "lower_cloths": {
            "items": {
              "$ref": "#/components/schemas/LowerCloth"
            },
            "title": "Lower Cloths",
            "type": "array"
          }
        },
        "title": "PersonAttributes",
        "type": "object"
      },
      "PersonLandmarks": {
        "properties": {
          "eye_left": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Left",
            "type": "array"
          },
          "eye_right": {
            "items": {
              "type": "integer"
            },
            "title": "Eye Right",
            "type": "array"
          },
          "nose": {
            "items": {
              "type": "integer"
            },
            "title": "Nose",
            "type": "array"
          },
          "ear_left": {
            "items": {
              "type": "integer"
            },
            "title": "Ear Left",
            "type": "array"
          },
          "ear_right": {
            "items": {
              "type": "integer"
            },
            "title": "Ear Right",
            "type": "array"
          },
          "shoulder_left": {
            "items": {
              "type": "integer"
            },
            "title": "Shoulder Left",
            "type": "array"
          },
          "shoulder_right": {
            "items": {
              "type": "integer"
            },
            "title": "Shoulder Right",
            "type": "array"
          },
          "elbow_left": {
            "items": {
              "type": "integer"
            },
            "title": "Elbow Left",
            "type": "array"
          },
          "elbow_right": {
            "items": {
              "type": "integer"
            },
            "title": "Elbow Right",
            "type": "array"
          },
          "wrist_left": {
            "items": {
              "type": "integer"
            },
            "title": "Wrist Left",
            "type": "array"
          },
          "wrist_right": {
            "items": {
              "type": "integer"
            },
            "title": "Wrist Right",
            "type": "array"
          },
          "hip_left": {
            "items": {
              "type": "integer"
            },
            "title": "Hip Left",
            "type": "array"
          },
          "hip_right": {
            "items": {
              "type": "integer"
            },
            "title": "Hip Right",
            "type": "array"
          },
          "knee_left": {
            "items": {
              "type": "integer"
            },
            "title": "Knee Left",
            "type": "array"
          },
          "knee_right": {
            "items": {
              "type": "integer"
            },
            "title": "Knee Right",
            "type": "array"
          },
          "ankle_left": {
            "items": {
              "type": "integer"
            },
            "title": "Ankle Left",
            "type": "array"
          },
          "ankle_right": {
            "items": {
              "type": "integer"
            },
            "title": "Ankle Right",
            "type": "array"
          },
          "mouth_left": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Left",
            "type": "array"
          },
          "mouth_right": {
            "items": {
              "type": "integer"
            },
            "title": "Mouth Right",
            "type": "array"
          }
        },
        "title": "PersonLandmarks",
        "type": "object"
      },
      "PersonTracking": {
        "properties": {
          "offset": {
            "title": "Offset",
            "type": "integer"
          },
          "attributes": {
            "$ref": "#/components/schemas/PersonAttributes"
          },
          "landmarks": {
            "$ref": "#/components/schemas/PersonLandmarks"
          },
          "poses": {
            "$ref": "#/components/schemas/VideoPersonPoses"
          },
          "quality": {
            "$ref": "#/components/schemas/VideoPersonQuality"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoTrackingBoundingBox"
          }
        },
        "required": [
          "offset",
          "bounding_box"
        ],
        "title": "PersonTracking",
        "type": "object"
      },
      "PersonalInformationSubCategoryType": {
        "enum": [
          "Name",
          "Age",
          "Email",
          "Phone",
          "PersonType"
        ],
        "title": "PersonalInformationSubCategoryType",
        "type": "string"
      },
      "PipelineRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "minLength": 1
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "The input text for the first feature of the pipeline"
          },
          "texts": {
            "type": "string",
            "minLength": 1,
            "description": "List of texts for the first feature of the pipeline"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "The input file for the first feature of the pipeline"
          },
          "return_only_last": {
            "type": "boolean",
            "default": true,
            "description": "This parameter allows user to choose to output only the final result or all the intermediate results."
          }
        },
        "required": [
          "description"
        ]
      },
      "PlagiaDetectionCandidate": {
        "properties": {
          "url": {
            "title": "Url",
            "type": "string"
          },
          "plagia_score": {
            "title": "Plagia Score",
            "type": "integer"
          },
          "prediction": {
            "title": "Prediction",
            "type": "string"
          },
          "plagiarized_text": {
            "title": "Plagiarized Text",
            "type": "string"
          }
        },
        "required": [
          "url",
          "plagia_score",
          "prediction",
          "plagiarized_text"
        ],
        "title": "PlagiaDetectionCandidate",
        "type": "object"
      },
      "PlagiaDetectionItem": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "candidates": {
            "items": {
              "$ref": "#/components/schemas/PlagiaDetectionCandidate"
            },
            "title": "Candidates",
            "type": "array"
          }
        },
        "required": [
          "text"
        ],
        "title": "PlagiaDetectionItem",
        "type": "object"
      },
      "PriceUnitTypeEnum": {
        "enum": [
          "file",
          "image",
          "page",
          "size",
          "request",
          "seconde",
          "minute",
          "free",
          "hour",
          "char",
          "token",
          "exec_time",
          "unknown"
        ],
        "type": "string",
        "description": "* `file` - File\n* `image` - Image\n* `page` - Page\n* `size` - Size\n* `request` - Request\n* `seconde` - Second\n* `minute` - Minute\n* `free` - Free\n* `hour` - Hour\n* `char` - Characters\n* `token` - Token\n* `exec_time` - Execution Time\n* `unknown` - Unknown"
      },
      "PricingSerialzier": {
        "type": "object",
        "properties": {
          "model_name": {
            "type": "string",
            "description": "Model name, default to 'default' if no models to chose from",
            "maxLength": 255
          },
          "price": {
            "type": "string",
            "format": "decimal",
            "pattern": "^-?\\d{0,6}(?:\\.\\d{0,9})?$"
          },
          "price_unit_quantity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0
          },
          "min_price_quantity": {
            "type": "integer",
            "maximum": 2147483647,
            "minimum": 0,
            "nullable": true
          },
          "price_unit_type": {
            "$ref": "#/components/schemas/PriceUnitTypeEnum"
          },
          "detail_type": {
            "nullable": true,
            "description": "(Optional) type of extra value, MUST be the same name as the feature parameter name. eg: resolution\n\n* `resolution` - Resolution\n* `document_type` - Document Type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DetailTypeEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              },
              {
                "$ref": "#/components/schemas/NullEnum"
              }
            ]
          },
          "detail_value": {
            "type": "string",
            "nullable": true,
            "description": "(Optional) extra value for detailed pricing, eg: 250x250 for resolution",
            "maxLength": 255
          },
          "get_detail_type_display": {
            "type": "string",
            "readOnly": true
          },
          "is_post_call": {
            "type": "boolean"
          }
        },
        "required": [
          "get_detail_type_display"
        ]
      },
      "Prompt": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "text": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "feature",
          "name",
          "provider",
          "subfeature",
          "text",
          "updated_at"
        ]
      },
      "PromptDataClass": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "required": [
          "text"
        ],
        "title": "PromptDataClass",
        "type": "object"
      },
      "PromptHistory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "text": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "readOnly": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "provider": {
            "type": "string",
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "feature",
          "name",
          "provider",
          "subfeature",
          "text",
          "updated_at"
        ]
      },
      "PromptRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "text": {
            "type": "string",
            "minLength": 1
          },
          "feature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "feature",
          "name",
          "provider",
          "subfeature",
          "text"
        ]
      },
      "PromptText": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "text": {
            "type": "string"
          },
          "feature": {
            "type": "string",
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "required": [
          "created_at",
          "feature",
          "name",
          "provider",
          "subfeature",
          "text",
          "updated_at"
        ]
      },
      "PromptTextRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1
          },
          "feature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "subfeature": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "model": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "params": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          }
        },
        "required": [
          "feature",
          "provider",
          "subfeature",
          "text"
        ]
      },
      "Provider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "fullname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "ProviderSubfeature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "readOnly": true
          },
          "pricings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingSerialzier"
            }
          },
          "is_working": {
            "type": "boolean"
          },
          "description_title": {
            "type": "string",
            "nullable": true,
            "maxLength": 100
          },
          "description_content": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          },
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "feature": {
            "$ref": "#/components/schemas/Feature"
          },
          "subfeature": {
            "$ref": "#/components/schemas/Subfeature"
          },
          "constraints": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "models": {
            "type": "object",
            "additionalProperties": {},
            "readOnly": true
          },
          "languages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "language_name": {
                  "type": "string"
                },
                "language_code": {
                  "type": "string"
                }
              }
            },
            "readOnly": true
          },
          "phase": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "constraints",
          "feature",
          "languages",
          "models",
          "name",
          "phase",
          "pricings",
          "provider",
          "subfeature",
          "version"
        ]
      },
      "RepresentationEnum": {
        "enum": [
          "document",
          "query",
          "symetric"
        ],
        "type": "string",
        "description": "* `document` - document\n* `query` - query\n* `symetric` - symetric"
      },
      "ResolutionEnum": {
        "enum": [
          "256x256",
          "512x512",
          "1024x1024"
        ],
        "type": "string",
        "description": "* `256x256` - 256x256\n* `512x512` - 512x512\n* `1024x1024` - 1024x1024"
      },
      "ResourceCreate": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceCreateRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceList": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "string",
            "format": "byte",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "maxLength": 100
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetList"
            }
          }
        },
        "required": [
          "assets",
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceUpdate": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "maxLength": 100
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetList"
            },
            "readOnly": true
          }
        },
        "required": [
          "assets",
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResourceUpdateRequest": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "additionalProperties": {}
          },
          "type": {
            "$ref": "#/components/schemas/TypeEnum"
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          }
        },
        "required": [
          "data",
          "provider",
          "resource",
          "type"
        ]
      },
      "ResumeEducation": {
        "properties": {
          "total_years_education": {
            "title": "Total Years Education",
            "type": "integer"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/ResumeEducationEntry"
            },
            "title": "Entries",
            "type": "array"
          }
        },
        "required": [
          "total_years_education"
        ],
        "title": "ResumeEducation",
        "type": "object"
      },
      "ResumeEducationEntry": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/ResumeLocation"
          },
          "establishment": {
            "title": "Establishment",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "gpa": {
            "title": "Gpa",
            "type": "string"
          },
          "accreditation": {
            "title": "Accreditation",
            "type": "string"
          }
        },
        "required": [
          "title",
          "start_date",
          "end_date",
          "location",
          "establishment",
          "description",
          "gpa",
          "accreditation"
        ],
        "title": "ResumeEducationEntry",
        "type": "object"
      },
      "ResumeExtractedData": {
        "properties": {
          "personal_infos": {
            "$ref": "#/components/schemas/ResumePersonalInfo"
          },
          "education": {
            "$ref": "#/components/schemas/ResumeEducation"
          },
          "work_experience": {
            "$ref": "#/components/schemas/ResumeWorkExp"
          },
          "languages": {
            "items": {
              "$ref": "#/components/schemas/ResumeLang"
            },
            "title": "Languages",
            "type": "array"
          },
          "skills": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Skills",
            "type": "array"
          },
          "certifications": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Certifications",
            "type": "array"
          },
          "courses": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Courses",
            "type": "array"
          },
          "publications": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Publications",
            "type": "array"
          },
          "interests": {
            "items": {
              "$ref": "#/components/schemas/ResumeSkill"
            },
            "title": "Interests",
            "type": "array"
          }
        },
        "required": [
          "personal_infos",
          "education",
          "work_experience"
        ],
        "title": "ResumeExtractedData",
        "type": "object"
      },
      "ResumeLang": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "code": {
            "title": "Code",
            "type": "string"
          }
        },
        "required": [
          "name",
          "code"
        ],
        "title": "ResumeLang",
        "type": "object"
      },
      "ResumeLocation": {
        "properties": {
          "formatted_location": {
            "title": "Formatted Location",
            "type": "string"
          },
          "postal_code": {
            "title": "Postal Code",
            "type": "string"
          },
          "region": {
            "title": "Region",
            "type": "string"
          },
          "country": {
            "title": "Country",
            "type": "string"
          },
          "country_code": {
            "title": "Country Code",
            "type": "string"
          },
          "raw_input_location": {
            "title": "Raw Input Location",
            "type": "string"
          },
          "street": {
            "title": "Street",
            "type": "string"
          },
          "street_number": {
            "title": "Street Number",
            "type": "string"
          },
          "appartment_number": {
            "title": "Appartment Number",
            "type": "string"
          },
          "city": {
            "title": "City",
            "type": "string"
          }
        },
        "required": [
          "formatted_location",
          "postal_code",
          "region",
          "country",
          "country_code",
          "raw_input_location",
          "street",
          "street_number",
          "appartment_number",
          "city"
        ],
        "title": "ResumeLocation",
        "type": "object"
      },
      "ResumePersonalInfo": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ResumePersonalName"
          },
          "address": {
            "$ref": "#/components/schemas/ResumeLocation"
          },
          "self_summary": {
            "title": "Self Summary",
            "type": "string"
          },
          "objective": {
            "title": "Objective",
            "type": "string"
          },
          "date_of_birth": {
            "title": "Date Of Birth",
            "type": "string"
          },
          "place_of_birth": {
            "title": "Place Of Birth",
            "type": "string"
          },
          "phones": {
            "items": {
              "type": "string"
            },
            "title": "Phones",
            "type": "array"
          },
          "mails": {
            "items": {
              "type": "string"
            },
            "title": "Mails",
            "type": "array"
          },
          "urls": {
            "items": {
              "type": "string"
            },
            "title": "Urls",
            "type": "array"
          },
          "fax": {
            "items": {
              "type": "string"
            },
            "title": "Fax",
            "type": "array"
          },
          "current_profession": {
            "title": "Current Profession",
            "type": "string"
          },
          "gender": {
            "title": "Gender",
            "type": "string"
          },
          "nationality": {
            "title": "Nationality",
            "type": "string"
          },
          "martial_status": {
            "title": "Martial Status",
            "type": "string"
          },
          "current_salary": {
            "title": "Current Salary",
            "type": "string"
          }
        },
        "required": [
          "name",
          "address",
          "self_summary",
          "objective",
          "date_of_birth",
          "place_of_birth",
          "current_profession",
          "gender",
          "nationality",
          "martial_status",
          "current_salary"
        ],
        "title": "ResumePersonalInfo",
        "type": "object"
      },
      "ResumePersonalName": {
        "properties": {
          "first_name": {
            "title": "First Name",
            "type": "string"
          },
          "last_name": {
            "title": "Last Name",
            "type": "string"
          },
          "raw_name": {
            "title": "Raw Name",
            "type": "string"
          },
          "middle": {
            "title": "Middle",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "prefix": {
            "title": "Prefix",
            "type": "string"
          },
          "sufix": {
            "title": "Sufix",
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "raw_name",
          "middle",
          "title",
          "prefix",
          "sufix"
        ],
        "title": "ResumePersonalName",
        "type": "object"
      },
      "ResumeSkill": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "title": "ResumeSkill",
        "type": "object"
      },
      "ResumeWorkExp": {
        "properties": {
          "total_years_experience": {
            "title": "Total Years Experience",
            "type": "string"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/ResumeWorkExpEntry"
            },
            "title": "Entries",
            "type": "array"
          }
        },
        "required": [
          "total_years_experience"
        ],
        "title": "ResumeWorkExp",
        "type": "object"
      },
      "ResumeWorkExpEntry": {
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "company": {
            "title": "Company",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/ResumeLocation"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "industry": {
            "title": "Industry",
            "type": "string"
          }
        },
        "required": [
          "title",
          "start_date",
          "end_date",
          "company",
          "location",
          "description",
          "industry"
        ],
        "title": "ResumeWorkExpEntry",
        "type": "object"
      },
      "Row": {
        "properties": {
          "cells": {
            "items": {
              "$ref": "#/components/schemas/Cell"
            },
            "title": "Cells",
            "type": "array"
          }
        },
        "title": "Row",
        "type": "object"
      },
      "SafeSubCategoryType": {
        "enum": [
          "Safe",
          "NotSafe"
        ],
        "title": "SafeSubCategoryType",
        "type": "string"
      },
      "SegmentSentimentAnalysisDataClass": {
        "description": "This class is used in SentimentAnalysisDataClass to describe each segment analyzed.\n\n    Args:\n        - segment (str): The segment analyzed\n        - sentiment (Literal['Positve', 'Negative', 'Neutral']) (Case is ignore): Sentiment of segment\n        - sentiment_rate (float between 0 and 1): Rate of sentiment\n    ",
        "properties": {
          "segment": {
            "title": "Segment",
            "type": "string"
          },
          "sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SentimentB6eEnum"
              }
            ],
            "title": "Sentiment"
          },
          "sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "Sentiment Rate",
            "type": "integer"
          }
        },
        "required": [
          "segment",
          "sentiment",
          "sentiment_rate"
        ],
        "title": "SegmentSentimentAnalysisDataClass",
        "type": "object"
      },
      "SentimentB6eEnum": {
        "enum": [
          "Positive",
          "Negative",
          "Neutral"
        ],
        "type": "string"
      },
      "SexualSubCategoryType": {
        "enum": [
          "SexualActivity",
          "SexualSituations",
          "Nudity",
          "PartialNudity",
          "Suggestive",
          "AdultToys",
          "RevealingClothes",
          "Sexual"
        ],
        "title": "SexualSubCategoryType",
        "type": "string"
      },
      "SimilarityMetricEnum": {
        "enum": [
          "cosine",
          "manhattan",
          "euclidean"
        ],
        "type": "string",
        "description": "* `cosine` - cosine\n* `manhattan` - manhattan\n* `euclidean` - euclidean"
      },
      "SpeechDiarization": {
        "properties": {
          "total_speakers": {
            "title": "Total Speakers",
            "type": "integer"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/SpeechDiarizationEntry"
            },
            "title": "Entries",
            "type": "array"
          },
          "error_message": {
            "default": null,
            "title": "Error Message",
            "type": "string"
          }
        },
        "required": [
          "total_speakers"
        ],
        "title": "SpeechDiarization",
        "type": "object"
      },
      "SpeechDiarizationEntry": {
        "properties": {
          "segment": {
            "title": "Segment",
            "type": "string"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string"
          },
          "end_time": {
            "title": "End Time",
            "type": "string"
          },
          "speaker": {
            "title": "Speaker",
            "type": "integer"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "segment",
          "start_time",
          "end_time",
          "speaker",
          "confidence"
        ],
        "title": "SpeechDiarizationEntry",
        "type": "object"
      },
      "SpeechToTextAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "provider_params": {
            "type": "string",
            "description": "\nParameters specific to the provider that you want to send along the request.\n\nit should take a *provider* name as key and an object of parameters as value.\n\nExample:\n\n    {\n      \"deepgram\": {\n        \"filler_words\": true,\n        \"smart_format\": true,\n        \"callback\": \"https://webhook.site/0000\"\n      },\n      \"assembly\": {\n        \"webhook_url\": \"https://webhook.site/0000\"\n      }\n    }\n\nPlease refer to the documentation of each provider to see which parameters to send.\n"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code expected (ex: en, fr)"
          },
          "speakers": {
            "type": "integer",
            "nullable": true,
            "default": 2,
            "description": "Number of speakers in the file audio"
          },
          "profanity_filter": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather or not the service will filter profanity and replace inappropriate words with a series of asterisks"
          },
          "custom_vocabulary": {
            "type": "string",
            "default": "",
            "description": "List of words or composed words to be detected by the speech to text engine. (Ex: Word, Mike, Draw, Los Angeles,...)"
          },
          "convert_to_wav": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the audio/video file to wav format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "SpellCheckItem": {
        "description": "Represents a spell check item with suggestions.\n\n    Args:\n        text (str): The text to spell check.\n        type (str, optional): The type of the text.\n        offset (int): The offset of the text.\n        length (int): The length of the text.\n        suggestions (Sequence[SuggestionItem], optional): The list of suggestions for the misspelled text.\n\n    Raises:\n        ValueError: If the offset or length is not positive.\n\n    Returns:\n        SpellCheckItem: An instance of the SpellCheckItem class.\n    ",
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "type": "string"
          },
          "offset": {
            "minimum": 0,
            "title": "Offset",
            "type": "integer"
          },
          "length": {
            "minimum": 0,
            "title": "Length",
            "type": "integer"
          },
          "suggestions": {
            "items": {
              "$ref": "#/components/schemas/SuggestionItem"
            },
            "title": "Suggestions",
            "type": "array"
          }
        },
        "required": [
          "text",
          "type",
          "offset",
          "length"
        ],
        "title": "SpellCheckItem",
        "type": "object"
      },
      "StateEnum": {
        "enum": [
          "finished",
          "failed",
          "Timeout error",
          "processing"
        ],
        "type": "string",
        "description": "* `finished` - finished\n* `failed` - failed\n* `Timeout error` - Timeout error\n* `processing` - processing"
      },
      "StatusE80Enum": {
        "enum": [
          "succeeded",
          "failed",
          "finished",
          "processing"
        ],
        "type": "string",
        "description": "* `succeeded` - Status Succeeded\n* `failed` - Status Failed\n* `finished` - Status Finished\n* `processing` - Status Processing"
      },
      "StatusF43Enum": {
        "enum": [
          "sucess",
          "fail"
        ],
        "type": "string"
      },
      "Subfeature": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "fullname": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "nullable": true,
            "maxLength": 1000
          }
        },
        "required": [
          "name"
        ]
      },
      "SuggestionItem": {
        "description": "\n    Represents a suggestion for a misspelled word.\n\n    Args:\n        suggestion (str): The suggested text.\n        score (float, optional): The score of the suggested text (between 0 and 1).\n\n    Raises:\n        ValueError: If the score is not between 0 and 1.\n\n    Returns:\n        SuggestionItem: An instance of the SuggestionItem class.\n    ",
        "properties": {
          "suggestion": {
            "title": "Suggestion",
            "type": "string"
          },
          "score": {
            "maximum": 1,
            "minimum": 0,
            "title": "Score",
            "type": "integer"
          }
        },
        "required": [
          "suggestion",
          "score"
        ],
        "title": "SuggestionItem",
        "type": "object"
      },
      "Table": {
        "properties": {
          "rows": {
            "items": {
              "$ref": "#/components/schemas/Row"
            },
            "title": "Rows",
            "type": "array"
          },
          "num_rows": {
            "title": "Num Rows",
            "type": "integer"
          },
          "num_cols": {
            "title": "Num Cols",
            "type": "integer"
          }
        },
        "required": [
          "num_rows",
          "num_cols"
        ],
        "title": "Table",
        "type": "object"
      },
      "TargetProviderEnum": {
        "enum": [
          "google",
          "openai",
          "cohere"
        ],
        "type": "string",
        "description": "* `google` - google\n* `openai` - openai\n* `cohere` - cohere"
      },
      "Taxes": {
        "properties": {
          "taxes": {
            "default": null,
            "title": "Taxes",
            "type": "integer"
          },
          "rate": {
            "default": null,
            "title": "Rate",
            "type": "integer"
          }
        },
        "title": "Taxes",
        "type": "object"
      },
      "TaxesInvoice": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "integer"
          },
          "rate": {
            "title": "Rate",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "rate"
        ],
        "title": "TaxesInvoice",
        "type": "object"
      },
      "TextModerationItem": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "likelihood": {
            "title": "Likelihood",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "subcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToxicSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ContentSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SexualSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/ViolenceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/DrugAndAlcoholSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/FinanceSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/HateAndExtremismSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/SafeSubCategoryType"
              },
              {
                "$ref": "#/components/schemas/OtherSubCategoryType"
              }
            ],
            "title": "Subcategory"
          },
          "likelihood_score": {
            "title": "Likelihood Score",
            "type": "integer"
          }
        },
        "required": [
          "label",
          "likelihood",
          "category",
          "subcategory",
          "likelihood_score"
        ],
        "title": "TextModerationItem",
        "type": "object"
      },
      "TextToSpeechAsyncRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "webhook_receiver": {
            "type": "string",
            "format": "uri",
            "minLength": 1,
            "description": "Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result."
          },
          "users_webhook_parameters": {
            "type": "object",
            "additionalProperties": {},
            "description": "Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Language code expected (ex: en, fr)"
          },
          "option": {
            "default": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OptionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              }
            ]
          },
          "rate": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "nullable": true,
            "default": 0,
            "description": "Increase or decrease the speaking rate by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "pitch": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "nullable": true,
            "default": 0,
            "description": "Increase or decrease the speaking pitch by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "volume": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "nullable": true,
            "default": 0,
            "description": "Increase or decrease the audio volume by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "audio_format": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Optional parameter to specify the audio format in which the audio will be generated. By default,             audios are encoded in MP3, except for lovoai which use the wav container."
          },
          "sampling_rate": {
            "type": "integer",
            "maximum": 200000,
            "minimum": 0,
            "nullable": true,
            "default": 0,
            "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified, the audio will be converted             either to the right passed value, or to a the nearest value acceptable by the provider"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "ToxicSubCategoryType": {
        "enum": [
          "Insult",
          "Obscene",
          "Derogatory",
          "Profanity",
          "Threat",
          "Toxic"
        ],
        "title": "ToxicSubCategoryType",
        "type": "string"
      },
      "TypeEnum": {
        "enum": [
          "db",
          "bucket",
          "db_vector",
          "ai"
        ],
        "type": "string",
        "description": "* `db` - Db\n* `bucket` - Bucket\n* `db_vector` - Db Vector\n* `ai` - Ai"
      },
      "TypeOfDataEnum": {
        "enum": [
          "TRAINING",
          "TEST"
        ],
        "type": "string",
        "description": "* `TRAINING` - TRAINING\n* `TEST` - TEST"
      },
      "UniversalTranslatorCallRequest": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "Source language code (ex: en, fr)"
          },
          "target_language": {
            "type": "string",
            "minLength": 1,
            "description": "Target language code (ex: en, fr)"
          }
        },
        "required": [
          "target_language",
          "text"
        ]
      },
      "UniversalTranslatorCreatet": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "The language code from which the text will be translated",
            "maxLength": 10
          },
          "target_language": {
            "type": "string",
            "nullable": true,
            "description": "The language code in which the text will be translated",
            "maxLength": 10
          },
          "project_name": {
            "type": "string",
            "description": "The project name",
            "maxLength": 200
          },
          "fall_back_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 30
            }
          },
          "provider": {
            "type": "string",
            "maxLength": 50
          }
        },
        "required": [
          "project_name",
          "provider"
        ]
      },
      "UniversalTranslatorCreatetRequest": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code from which the text will be translated",
            "maxLength": 10
          },
          "target_language": {
            "type": "string",
            "nullable": true,
            "minLength": 1,
            "description": "The language code in which the text will be translated",
            "maxLength": 10
          },
          "project_name": {
            "type": "string",
            "minLength": 1,
            "description": "The project name",
            "maxLength": 200
          },
          "fall_back_providers": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 30
            }
          },
          "provider": {
            "type": "string",
            "minLength": 1,
            "maxLength": 50
          }
        },
        "required": [
          "project_name",
          "provider"
        ]
      },
      "UniversalTranslatorList": {
        "type": "object",
        "properties": {
          "source_language": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The language code from which the text will be translated"
          },
          "target_language": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "The language code in which the text will be translated"
          },
          "project_name": {
            "type": "string",
            "readOnly": true,
            "description": "The project name"
          },
          "fall_back_providers": {
            "type": "string",
            "readOnly": true,
            "nullable": true,
            "description": "Providers to use in case of an error"
          },
          "provider": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "fall_back_providers",
          "project_id",
          "project_name",
          "provider",
          "source_language",
          "target_language"
        ]
      },
      "UpperCloth": {
        "properties": {
          "value": {
            "title": "Value",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "value",
          "confidence"
        ],
        "title": "UpperCloth",
        "type": "object"
      },
      "VideoBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoBoundingBox",
        "type": "object"
      },
      "VideoFace": {
        "properties": {
          "offset": {
            "title": "Offset",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoBoundingBox"
          },
          "attributes": {
            "$ref": "#/components/schemas/FaceAttributes"
          },
          "landmarks": {
            "$ref": "#/components/schemas/LandmarksVideo"
          }
        },
        "required": [
          "offset",
          "bounding_box",
          "attributes",
          "landmarks"
        ],
        "title": "VideoFace",
        "type": "object"
      },
      "VideoFacePoses": {
        "properties": {
          "pitch": {
            "title": "Pitch",
            "type": "integer"
          },
          "roll": {
            "title": "Roll",
            "type": "integer"
          },
          "yawn": {
            "title": "Yawn",
            "type": "integer"
          }
        },
        "required": [
          "pitch",
          "roll",
          "yawn"
        ],
        "title": "VideoFacePoses",
        "type": "object"
      },
      "VideoLabel": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "timestamp": {
            "items": {
              "$ref": "#/components/schemas/VideoLabelTimeStamp"
            },
            "title": "Timestamp",
            "type": "array"
          },
          "category": {
            "items": {
              "type": "string"
            },
            "title": "Category",
            "type": "array"
          },
          "bounding_box": {
            "items": {
              "$ref": "#/components/schemas/VideoLabelBoundingBox"
            },
            "title": "Bounding Box",
            "type": "array"
          }
        },
        "required": [
          "name",
          "confidence"
        ],
        "title": "VideoLabel",
        "type": "object"
      },
      "VideoLabelBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoLabelBoundingBox",
        "type": "object"
      },
      "VideoLabelTimeStamp": {
        "properties": {
          "start": {
            "title": "Start",
            "type": "integer"
          },
          "end": {
            "title": "End",
            "type": "integer"
          }
        },
        "required": [
          "start",
          "end"
        ],
        "title": "VideoLabelTimeStamp",
        "type": "object"
      },
      "VideoLogo": {
        "properties": {
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoLogoBoundingBox"
          },
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "timestamp",
          "bounding_box",
          "confidence"
        ],
        "title": "VideoLogo",
        "type": "object"
      },
      "VideoLogoBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoLogoBoundingBox",
        "type": "object"
      },
      "VideoObjectBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoObjectBoundingBox",
        "type": "object"
      },
      "VideoPersonPoses": {
        "properties": {
          "pitch": {
            "title": "Pitch",
            "type": "integer"
          },
          "roll": {
            "title": "Roll",
            "type": "integer"
          },
          "yaw": {
            "title": "Yaw",
            "type": "integer"
          }
        },
        "required": [
          "pitch",
          "roll",
          "yaw"
        ],
        "title": "VideoPersonPoses",
        "type": "object"
      },
      "VideoPersonQuality": {
        "properties": {
          "brightness": {
            "title": "Brightness",
            "type": "integer"
          },
          "sharpness": {
            "title": "Sharpness",
            "type": "integer"
          }
        },
        "required": [
          "brightness",
          "sharpness"
        ],
        "title": "VideoPersonQuality",
        "type": "object"
      },
      "VideoText": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "frames": {
            "items": {
              "$ref": "#/components/schemas/VideoTextFrames"
            },
            "title": "Frames",
            "type": "array"
          }
        },
        "required": [
          "text"
        ],
        "title": "VideoText",
        "type": "object"
      },
      "VideoTextBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoTextBoundingBox",
        "type": "object"
      },
      "VideoTextFrames": {
        "properties": {
          "confidence": {
            "title": "Confidence",
            "type": "integer"
          },
          "timestamp": {
            "title": "Timestamp",
            "type": "integer"
          },
          "bounding_box": {
            "$ref": "#/components/schemas/VideoTextBoundingBox"
          }
        },
        "required": [
          "confidence",
          "timestamp",
          "bounding_box"
        ],
        "title": "VideoTextFrames",
        "type": "object"
      },
      "VideoTrackingBoundingBox": {
        "properties": {
          "top": {
            "title": "Top",
            "type": "integer"
          },
          "left": {
            "title": "Left",
            "type": "integer"
          },
          "height": {
            "title": "Height",
            "type": "integer"
          },
          "width": {
            "title": "Width",
            "type": "integer"
          }
        },
        "required": [
          "top",
          "left",
          "height",
          "width"
        ],
        "title": "VideoTrackingBoundingBox",
        "type": "object"
      },
      "VideoTrackingPerson": {
        "properties": {
          "tracked": {
            "items": {
              "$ref": "#/components/schemas/PersonTracking"
            },
            "title": "Tracked",
            "type": "array"
          }
        },
        "title": "VideoTrackingPerson",
        "type": "object"
      },
      "ViolenceSubCategoryType": {
        "enum": [
          "GraphicViolenceOrGore",
          "PhysicalViolence",
          "WeaponViolence",
          "Violence"
        ],
        "title": "ViolenceSubCategoryType",
        "type": "string"
      },
      "Word": {
        "description": "Word of a document\n\n    Attributes:\n        text (str): Text detected in the word\n        bounding_boxes (Sequence[BoundingBox]): Bounding boxes of the words in the word\n        confidence (float): Confidence score of the word\n    ",
        "properties": {
          "text": {
            "description": "Text detected in the word",
            "title": "Text",
            "type": "string"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Bounding boxes of the words in the word"
          },
          "confidence": {
            "description": "Confidence score of the word",
            "title": "Confidence",
            "type": "integer"
          }
        },
        "required": [
          "text",
          "bounding_box",
          "confidence"
        ],
        "title": "Word",
        "type": "object"
      },
      "Workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "output_node": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          }
        },
        "required": [
          "content",
          "created_at",
          "id",
          "updated_at"
        ]
      },
      "WorkflowRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "content": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            }
          },
          "output_node": {
            "type": "string",
            "nullable": true,
            "maxLength": 200
          }
        },
        "required": [
          "content"
        ]
      },
      "WorklowResponseType": {
        "oneOf": [],
        "discriminator": {
          "propertyName": "type",
          "mapping": {}
        }
      },
      "XMergeList": {
        "type": "object",
        "properties": {
          "project_name": {
            "type": "string",
            "readOnly": true
          },
          "project_type": {
            "$ref": "#/components/schemas/XMergeListProjectTypeEnum"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "subfeature": {
            "type": "string",
            "readOnly": true
          },
          "project_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "created",
          "project_id",
          "project_name",
          "project_type",
          "subfeature"
        ]
      },
      "XMergeListProjectTypeEnum": {
        "enum": [
          "DOC_PARSER",
          "TEXT"
        ],
        "type": "string",
        "description": "* `DOC_PARSER` - Doc Parser\n* `TEXT` - Text"
      },
      "YodaAskLlmResponse": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "llm_provider": {
            "title": "Llm Provider",
            "type": "string"
          },
          "llm_model": {
            "title": "Llm Model",
            "type": "string"
          }
        },
        "required": [
          "result",
          "llm_provider",
          "llm_model"
        ],
        "title": "YodaAskLlmResponse",
        "type": "object"
      },
      "YodaCreateProjectResponse": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "title": "Project Id",
            "type": "string"
          }
        },
        "required": [
          "project_id"
        ],
        "title": "YodaCreateProjectResponse",
        "type": "object"
      },
      "YodaDeleteResponse": {
        "properties": {
          "result": {
            "default": "Done!",
            "title": "Result",
            "type": "string"
          }
        },
        "title": "YodaDeleteResponse",
        "type": "object"
      },
      "YodaInfoResponse": {
        "properties": {
          "db_provider": {
            "title": "Db Provider",
            "type": "string"
          },
          "embeddings_provider": {
            "title": "Embeddings Provider",
            "type": "string"
          },
          "llm_provider": {
            "title": "Llm Provider",
            "type": "string"
          },
          "llm_model": {
            "title": "Llm Model",
            "type": "string"
          },
          "collection_size": {
            "title": "Collection Size",
            "type": "integer"
          }
        },
        "required": [
          "db_provider",
          "embeddings_provider",
          "llm_provider",
          "llm_model",
          "collection_size"
        ],
        "title": "YodaInfoResponse",
        "type": "object"
      },
      "YodaQueryResponse": {
        "properties": {
          "result": {
            "items": {
              "$ref": "#/components/schemas/YodaQueryResponseItem"
            },
            "title": "Result",
            "type": "array"
          }
        },
        "required": [
          "result"
        ],
        "title": "YodaQueryResponse",
        "type": "object"
      },
      "YodaQueryResponseItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "integer"
          },
          "score": {
            "title": "Score",
            "type": "integer"
          },
          "payload": {
            "$ref": "#/components/schemas/YodaQueryResponsePayload"
          },
          "vector": {
            "title": "Vector"
          }
        },
        "required": [
          "id",
          "version",
          "score",
          "payload",
          "vector"
        ],
        "title": "YodaQueryResponseItem",
        "type": "object"
      },
      "YodaQueryResponsePayload": {
        "properties": {
          "metadata": {
            "title": "Metadata",
            "type": "object"
          },
          "page_content": {
            "title": "Page Content",
            "type": "string"
          }
        },
        "required": [
          "metadata",
          "page_content"
        ],
        "title": "YodaQueryResponsePayload",
        "type": "object"
      },
      "asyncaudiospeech_to_text_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/audiospeech_to_text_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncaudiospeech_to_text_asyncResponseModel",
        "type": "object"
      },
      "asyncaudiotext_to_speech_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/audiotext_to_speech_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncaudiotext_to_speech_asyncResponseModel",
        "type": "object"
      },
      "asyncocranonymization_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocranonymization_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocranonymization_asyncResponseModel",
        "type": "object"
      },
      "asyncocrcustom_document_parsing_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocrcustom_document_parsing_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocrcustom_document_parsing_asyncResponseModel",
        "type": "object"
      },
      "asyncocrocr_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocrocr_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocrocr_asyncResponseModel",
        "type": "object"
      },
      "asyncocrocr_tables_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/ocrocr_tables_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncocrocr_tables_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoexplicit_content_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoexplicit_content_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoexplicit_content_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoface_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoface_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoface_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideolabel_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videolabel_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideolabel_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideologo_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videologo_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideologo_detection_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoobject_tracking_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoobject_tracking_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoobject_tracking_asyncResponseModel",
        "type": "object"
      },
      "asyncvideoperson_tracking_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videoperson_tracking_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideoperson_tracking_asyncResponseModel",
        "type": "object"
      },
      "asyncvideotext_detection_asyncResponseModel": {
        "properties": {
          "results": {
            "$ref": "#/components/schemas/videotext_detection_asyncModel"
          },
          "error": {
            "title": "Error",
            "type": "string"
          },
          "public_id": {
            "format": "uuid",
            "title": "Public Id",
            "type": "string"
          },
          "status": {
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "results",
          "error",
          "public_id",
          "status"
        ],
        "title": "asyncvideotext_detection_asyncResponseModel",
        "type": "object"
      },
      "audiospeech_to_text_asyncModel": {
        "properties": {
          "deepgram": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839481056"
              }
            ],
            "default": null
          },
          "revai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839889456"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298837206192"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298833190400"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845390192"
              }
            ],
            "default": null
          },
          "speechmatics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839918240"
              }
            ],
            "default": null
          },
          "faker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845378320"
              }
            ],
            "default": null
          },
          "assembly": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839915120"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845332816"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839417168"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839421056"
              }
            ],
            "default": null
          },
          "symbl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839423152"
              }
            ],
            "default": null
          },
          "voci": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845470704"
              }
            ],
            "default": null
          },
          "gladia": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839482784"
              }
            ],
            "default": null
          },
          "voxist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839486128"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845200832"
              }
            ],
            "default": null
          }
        },
        "title": "audiospeech_to_text_asyncModel",
        "type": "object"
      },
      "audiotext_to_speechResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839115888"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839114848"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839113808"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839112768"
              }
            ],
            "default": null
          },
          "elevenlabs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839111728"
              }
            ],
            "default": null
          },
          "lovoai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839110688"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839227376"
              }
            ],
            "default": null
          }
        },
        "title": "audiotext_to_speechResponseModel",
        "type": "object"
      },
      "audiotext_to_speechTextToSpeechRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Language code expected (ex: en, fr)"
          },
          "option": {
            "default": "",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OptionEnum"
              },
              {
                "$ref": "#/components/schemas/BlankEnum"
              }
            ]
          },
          "rate": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "default": 0,
            "description": "Increase or decrease the speaking rate by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "pitch": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "default": 0,
            "description": "Increase or decrease the speaking pitch by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "volume": {
            "type": "integer",
            "maximum": 100,
            "minimum": -100,
            "default": 0,
            "description": "Increase or decrease the audio volume by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%)"
          },
          "audio_format": {
            "type": "string",
            "default": "",
            "description": "Optional parameter to specify the audio format in which the audio will be generated. By default,             audios are encoded in MP3, except for lovoai which use the wav container."
          },
          "sampling_rate": {
            "type": "integer",
            "maximum": 200000,
            "minimum": 0,
            "default": 0,
            "description": "Optional. The synthesis sample rate (in hertz) for this audio. When this is specified, the audio will be converted             either to the right passed value, or to a the nearest value acceptable by the provider"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "audiotext_to_speech_asyncModel": {
        "properties": {
          "lovoai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845117472"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845118416"
              }
            ],
            "default": null
          }
        },
        "title": "audiotext_to_speech_asyncModel",
        "type": "object"
      },
      "imageanonymizationAnonymizationDataClass": {
        "properties": {
          "image": {
            "title": "Image",
            "type": "string"
          },
          "image_resource_url": {
            "title": "Image Resource Url",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image",
          "image_resource_url",
          "status"
        ],
        "title": "imageanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "imageanonymizationResponseModel": {
        "properties": {
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/imageanonymizationAnonymizationDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "imageanonymizationResponseModel",
        "type": "object"
      },
      "imageanonymizationimagelandmark_detectionimageexplicit_contentImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageautoml_classificationAutomlClassificationCreateProjectDataClass": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "project_id": {
            "title": "Project Id",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "name",
          "project_id",
          "status"
        ],
        "title": "imageautoml_classificationAutomlClassificationCreateProjectDataClass",
        "type": "object"
      },
      "imageautoml_classificationResponseModel": {
        "properties": {
          "nyckel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/imageautoml_classificationAutomlClassificationCreateProjectDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "imageautoml_classificationResponseModel",
        "type": "object"
      },
      "imageautoml_classificationcreate_projectAutomlClassificationCreateProjectRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Name of your project",
            "maxLength": 250
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageautoml_classificationdelete_projectAutomlClassificationDeleteRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "project_id": {
            "type": "string",
            "minLength": 1,
            "description": "The id of project",
            "maxLength": 250
          }
        },
        "required": [
          "project_id",
          "providers"
        ]
      },
      "imagebackground_removalBackgroundRemovalRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "provider_params": {
            "type": "string",
            "default": {},
            "description": "Provider specific parameters"
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagebackground_removalResponseModel": {
        "properties": {
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844865376"
              }
            ],
            "default": null
          },
          "stabilityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844863184"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844874864"
              }
            ],
            "default": null
          },
          "photoroom": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844875808"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844869024"
              }
            ],
            "default": null
          }
        },
        "title": "imagebackground_removalResponseModel",
        "type": "object"
      },
      "imageembeddingsEmbeddingsDataClass": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "imageembeddingsEmbeddingsRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "representation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RepresentationEnum"
              }
            ],
            "description": "The type of embedding representation to embed the image with\n\n* `document` - document\n* `query` - query\n* `symetric` - symetric"
          }
        },
        "required": [
          "providers",
          "representation"
        ]
      },
      "imageembeddingsResponseModel": {
        "properties": {
          "alephalpha": {
            "allOf": [
              {
                "$ref": "#/components/schemas/imageembeddingsEmbeddingsDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "imageembeddingsResponseModel",
        "type": "object"
      },
      "imageexplicit_contentResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845288352"
              }
            ],
            "default": null
          },
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845292720"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298839469312"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840244848"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840266080"
              }
            ],
            "default": null
          },
          "picpurify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840275136"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840284192"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840291376"
              }
            ],
            "default": null
          }
        },
        "title": "imageexplicit_contentResponseModel",
        "type": "object"
      },
      "imageface_compareFaceCompareRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file1": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file1_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file2": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file2_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageface_compareResponseModel": {
        "properties": {
          "facepp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_compareFaceCompareDataClass_94298844720224"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_compareFaceCompareDataClass_94298844702784"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_compareFaceCompareDataClass_94298844703728"
              }
            ],
            "default": null
          }
        },
        "title": "imageface_compareResponseModel",
        "type": "object"
      },
      "imageface_detectionFaceDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageface_detectionResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839908320"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845132480"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845054992"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839858384"
              }
            ],
            "default": null
          },
          "skybiometry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845061024"
              }
            ],
            "default": null
          },
          "picpurify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298845317744"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839454304"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_detectionFaceDetectionDataClass_94298839873520"
              }
            ],
            "default": null
          }
        },
        "title": "imageface_detectionResponseModel",
        "type": "object"
      },
      "imageface_recognitionResponseModel": {
        "properties": {
          "facepp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844687504"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844699968"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844689792"
              }
            ],
            "default": null
          }
        },
        "title": "imageface_recognitionResponseModel",
        "type": "object"
      },
      "imageface_recognitiondelete_faceFaceRecognitionDeleteFaceRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "face_id": {
            "type": "string",
            "minLength": 1,
            "description": "ID of face to delete"
          }
        },
        "required": [
          "face_id",
          "providers"
        ]
      },
      "imageface_recognitionrecognizeimageface_recognitionadd_faceFaceRecognitionDetectFaceRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|bmp)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagegenerationGenerationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Description of the desired image(s). The maximum length is 1000 characters",
            "maxLength": 1000
          },
          "resolution": {
            "$ref": "#/components/schemas/ResolutionEnum"
          },
          "num_images": {
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "default": 1,
            "description": "The number of images to generate. Must be between 1 and 10."
          }
        },
        "required": [
          "providers",
          "resolution",
          "text"
        ]
      },
      "imagegenerationResponseModel": {
        "properties": {
          "replicate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844751248"
              }
            ],
            "default": null
          },
          "stabilityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844775808"
              }
            ],
            "default": null
          },
          "deepai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844764064"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844768368"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagegenerationGenerationDataClass_94298844783328"
              }
            ],
            "default": null
          }
        },
        "title": "imagegenerationResponseModel",
        "type": "object"
      },
      "imagelandmark_detectionResponseModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298840305136"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298843639776"
              }
            ],
            "default": null
          }
        },
        "title": "imagelandmark_detectionResponseModel",
        "type": "object"
      },
      "imagelogo_detectionLogoDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagelogo_detectionResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843678848"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843679792"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843671904"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843686208"
              }
            ],
            "default": null
          },
          "smartclick": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843689376"
              }
            ],
            "default": null
          }
        },
        "title": "imagelogo_detectionResponseModel",
        "type": "object"
      },
      "imageobject_detectionObjectDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imageobject_detectionResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298839225760"
              }
            ],
            "default": null
          },
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845333760"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845543616"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845547920"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845087168"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845092080"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845095248"
              }
            ],
            "default": null
          }
        },
        "title": "imageobject_detectionResponseModel",
        "type": "object"
      },
      "imagequestion_answerQuestionAnswerRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "question": {
            "type": "string",
            "minLength": 1,
            "description": "Question about the image"
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 2048,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagequestion_answerResponseModel": {
        "properties": {
          "alephalpha": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844842592"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844822496"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844826800"
              }
            ],
            "default": null
          }
        },
        "title": "imagequestion_answerResponseModel",
        "type": "object"
      },
      "imagesearchResponseModel": {
        "properties": {
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagesearchSearchDeleteImageDataClass_94298843754592"
              }
            ],
            "default": null
          },
          "nyckel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__imagesearchSearchDeleteImageDataClass_94298843751472"
              }
            ],
            "default": null
          }
        },
        "title": "imagesearchResponseModel",
        "type": "object"
      },
      "imagesearchdelete_imageDeleteImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "image_name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "image_name",
          "providers"
        ]
      },
      "imagesearchlaunch_similaritySearchImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          }
        },
        "required": [
          "providers"
        ]
      },
      "imagesearchupload_imageUploadImageRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**",
            "pattern": "(?:jpg|jpeg|png|tiff)$"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "image_name": {
            "type": "string",
            "minLength": 1,
            "description": "The image name need to have the extension of the file."
          }
        },
        "required": [
          "image_name",
          "providers"
        ]
      },
      "ocranonymization_asyncModel": {
        "properties": {
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844311232"
              }
            ],
            "default": null
          },
          "privateai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298848301136"
              }
            ],
            "default": null
          },
          "readyredact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844336272"
              }
            ],
            "default": null
          }
        },
        "title": "ocranonymization_asyncModel",
        "type": "object"
      },
      "ocrbank_check_parsingBankCheckParsingRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrbank_check_parsingResponseModel": {
        "properties": {
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844728656"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844949824"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844988352"
              }
            ],
            "default": null
          },
          "extracta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844008032"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844024768"
              }
            ],
            "default": null
          }
        },
        "title": "ocrbank_check_parsingResponseModel",
        "type": "object"
      },
      "ocrcustom_document_parsing_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844288368"
              }
            ],
            "default": null
          },
          "extracta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844306784"
              }
            ],
            "default": null
          }
        },
        "title": "ocrcustom_document_parsing_asyncModel",
        "type": "object"
      },
      "ocrdata_extractionDataExtractionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrdata_extractionResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848270944"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848274704"
              }
            ],
            "default": null
          }
        },
        "title": "ocrdata_extractionResponseModel",
        "type": "object"
      },
      "ocrfinancial_parserFinancialParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          },
          "document_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentTypeEnum"
              }
            ],
            "default": "invoice",
            "description": "Specify the type of your document. Can be Set to 'auto-detect' for automatic detection if the provider supports it. Otherwise, the default is 'invoice'.\n\n* `auto-detect` - auto-detect\n* `invoice` - invoice\n* `receipt` - receipt"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrfinancial_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848721216"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848704768"
              }
            ],
            "default": null
          },
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848717936"
              }
            ],
            "default": null
          },
          "dataleon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848364176"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848694960"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848375584"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848402640"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848388816"
              }
            ],
            "default": null
          },
          "tabscanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848389760"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848590304"
              }
            ],
            "default": null
          }
        },
        "title": "ocrfinancial_parserResponseModel",
        "type": "object"
      },
      "ocridentity_parserIdentityParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocridentity_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844123024"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844246800"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844235456"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844379456"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844255440"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844262112"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocridentity_parserIdentityParserDataClass_94298844265872"
              }
            ],
            "default": null
          }
        },
        "title": "ocridentity_parserResponseModel",
        "type": "object"
      },
      "ocrinvoice_parserInvoiceParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrinvoice_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298844917760"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843835248"
              }
            ],
            "default": null
          },
          "rossum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843882080"
              }
            ],
            "default": null
          },
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843874432"
              }
            ],
            "default": null
          },
          "dataleon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843901776"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843920288"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843913232"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843934656"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843953168"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843907904"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843967536"
              }
            ],
            "default": null
          }
        },
        "title": "ocrinvoice_parserResponseModel",
        "type": "object"
      },
      "ocrocrOcrRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrocrResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298843655008"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298839917200"
              }
            ],
            "default": null
          },
          "sentisight": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298844818144"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298843729184"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298845006480"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298845010784"
              }
            ],
            "default": null
          },
          "api4ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocrOcrDataClass_94298845015088"
              }
            ],
            "default": null
          }
        },
        "title": "ocrocrResponseModel",
        "type": "object"
      },
      "ocrocr_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844316224"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844372512"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844369168"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844322000"
              }
            ],
            "default": null
          }
        },
        "title": "ocrocr_asyncModel",
        "type": "object"
      },
      "ocrocr_tables_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844035072"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844005984"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844006928"
              }
            ],
            "default": null
          }
        },
        "title": "ocrocr_tables_asyncModel",
        "type": "object"
      },
      "ocrreceipt_parserReceiptParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code of the language the document is written in (ex: fr (French), en (English), es (Spanish))"
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "ocrreceipt_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844148672"
              }
            ],
            "default": null
          },
          "base64": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844103664"
              }
            ],
            "default": null
          },
          "veryfi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844132736"
              }
            ],
            "default": null
          },
          "dataleon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844192272"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844196576"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844154400"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844161664"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844176864"
              }
            ],
            "default": null
          },
          "tabscanner": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844181168"
              }
            ],
            "default": null
          },
          "mindee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844188432"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844205440"
              }
            ],
            "default": null
          }
        },
        "title": "ocrreceipt_parserResponseModel",
        "type": "object"
      },
      "ocrresume_parserResponseModel": {
        "properties": {
          "klippa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298844060400"
              }
            ],
            "default": null
          },
          "extracta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298844049904"
              }
            ],
            "default": null
          },
          "affinda": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298844075136"
              }
            ],
            "default": null
          },
          "senseloaf": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298845178144"
              }
            ],
            "default": null
          },
          "hireability": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298845171232"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__ocrresume_parserResumeParserDataClass_94298845176416"
              }
            ],
            "default": null
          }
        },
        "title": "ocrresume_parserResponseModel",
        "type": "object"
      },
      "ocrresume_parserResumeParserRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "convert_to_pdf": {
            "type": "boolean",
            "nullable": true,
            "default": false,
            "description": "Boolean value to specify weather to convert the doc/docx files to pdf format to be accepted by a majority of the providers"
          }
        },
        "required": [
          "providers"
        ]
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298833190400": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298837206192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839417168": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839421056": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839423152": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839481056": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839482784": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839486128": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839889456": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839915120": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298839918240": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845200832": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845332816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845378320": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845390192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiospeech_to_text_asyncSpeechToTextAsyncDataClass_94298845470704": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "diarization": {
            "$ref": "#/components/schemas/SpeechDiarization"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "text",
          "diarization",
          "id",
          "final_status"
        ],
        "title": "audiospeech_to_text_asyncSpeechToTextAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839110688": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839111728": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839112768": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839113808": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839114848": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839115888": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speechTextToSpeechDataClass_94298839227376": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "status"
        ],
        "title": "audiotext_to_speechTextToSpeechDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845117472": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "id",
          "final_status"
        ],
        "title": "audiotext_to_speech_asyncTextToSpeechAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__audiotext_to_speech_asyncTextToSpeechAsyncDataClass_94298845118416": {
        "properties": {
          "audio": {
            "title": "Audio",
            "type": "string"
          },
          "voice_type": {
            "title": "Voice Type",
            "type": "integer"
          },
          "audio_resource_url": {
            "title": "Audio Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "audio",
          "voice_type",
          "audio_resource_url",
          "id",
          "final_status"
        ],
        "title": "audiotext_to_speech_asyncTextToSpeechAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844863184": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844865376": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844869024": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844874864": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imagebackground_removalBackgroundRemovalDataClass_94298844875808": {
        "properties": {
          "image_b64": {
            "description": "The image in base64 format.",
            "title": "Image B64",
            "type": "string"
          },
          "image_resource_url": {
            "description": "The image url.",
            "title": "Image Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "image_b64",
          "image_resource_url",
          "status"
        ],
        "title": "imagebackground_removalBackgroundRemovalDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298839469312": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840244848": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840266080": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840275136": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840284192": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298840291376": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845288352": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageexplicit_contentExplicitContentDataClass_94298845292720": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExplicitItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "imageexplicit_contentExplicitContentDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_compareFaceCompareDataClass_94298844702784": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceMatch"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_compareFaceCompareDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_compareFaceCompareDataClass_94298844703728": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceMatch"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_compareFaceCompareDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_compareFaceCompareDataClass_94298844720224": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceMatch"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_compareFaceCompareDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839454304": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839858384": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839873520": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298839908320": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845054992": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845061024": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845132480": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_detectionFaceDetectionDataClass_94298845317744": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FaceItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageface_detectionFaceDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844687504": {
        "properties": {
          "face_ids": {
            "items": {
              "type": "string"
            },
            "title": "Face Ids",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "face_ids",
          "status"
        ],
        "title": "imageface_recognitionFaceRecognitionAddFaceDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844689792": {
        "properties": {
          "face_ids": {
            "items": {
              "type": "string"
            },
            "title": "Face Ids",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "face_ids",
          "status"
        ],
        "title": "imageface_recognitionFaceRecognitionAddFaceDataClass",
        "type": "object"
      },
      "pydantic__main__imageface_recognitionFaceRecognitionAddFaceDataClass_94298844699968": {
        "properties": {
          "face_ids": {
            "items": {
              "type": "string"
            },
            "title": "Face Ids",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "face_ids",
          "status"
        ],
        "title": "imageface_recognitionFaceRecognitionAddFaceDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844751248": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844764064": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844768368": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844775808": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagegenerationGenerationDataClass_94298844783328": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/GeneratedImageDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagegenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298840305136": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LandmarkItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelandmark_detectionLandmarkDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelandmark_detectionLandmarkDetectionDataClass_94298843639776": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LandmarkItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelandmark_detectionLandmarkDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843671904": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843678848": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843679792": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843686208": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagelogo_detectionLogoDetectionDataClass_94298843689376": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LogoItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagelogo_detectionLogoDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298839225760": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845087168": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845092080": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845095248": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845333760": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845543616": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imageobject_detectionObjectDetectionDataClass_94298845547920": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ObjectItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imageobject_detectionObjectDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844822496": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagequestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844826800": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagequestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__imagequestion_answerQuestionAnswerDataClass_94298844842592": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagequestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__imagesearchSearchDeleteImageDataClass_94298843751472": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagesearchSearchDeleteImageDataClass",
        "type": "object"
      },
      "pydantic__main__imagesearchSearchDeleteImageDataClass_94298843754592": {
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          }
        },
        "required": [
          "status"
        ],
        "title": "imagesearchSearchDeleteImageDataClass",
        "type": "object"
      },
      "pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844311232": {
        "properties": {
          "document": {
            "title": "Document",
            "type": "string"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "document",
          "document_url",
          "id",
          "final_status"
        ],
        "title": "ocranonymization_asyncAnonymizationAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298844336272": {
        "properties": {
          "document": {
            "title": "Document",
            "type": "string"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "document",
          "document_url",
          "id",
          "final_status"
        ],
        "title": "ocranonymization_asyncAnonymizationAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocranonymization_asyncAnonymizationAsyncDataClass_94298848301136": {
        "properties": {
          "document": {
            "title": "Document",
            "type": "string"
          },
          "document_url": {
            "title": "Document Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "document",
          "document_url",
          "id",
          "final_status"
        ],
        "title": "ocranonymization_asyncAnonymizationAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844008032": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844024768": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844728656": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844949824": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrbank_check_parsingBankCheckParsingDataClass_94298844988352": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/ItemBankCheckParsingDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrbank_check_parsingBankCheckParsingDataClass",
        "type": "object"
      },
      "pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844288368": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CustomDocumentParsingAsyncItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass_94298844306784": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CustomDocumentParsingAsyncItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "ocrcustom_document_parsing_asyncCustomDocumentParsingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848270944": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ItemDataExtraction"
            },
            "title": "Fields",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrdata_extractionDataExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__ocrdata_extractionDataExtractionDataClass_94298848274704": {
        "properties": {
          "fields": {
            "items": {
              "$ref": "#/components/schemas/ItemDataExtraction"
            },
            "title": "Fields",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrdata_extractionDataExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848364176": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848375584": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848388816": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848389760": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848402640": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848590304": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848694960": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848704768": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848717936": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrfinancial_parserFinancialParserDataClass_94298848721216": {
        "properties": {
          "extracted_data": {
            "description": "List of parsed financial data objects (per page).",
            "items": {
              "$ref": "#/components/schemas/FinancialParserObjectDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrfinancial_parserFinancialParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844123024": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844235456": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844246800": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844255440": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844262112": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844265872": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocridentity_parserIdentityParserDataClass_94298844379456": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosIdentityParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocridentity_parserIdentityParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843835248": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843874432": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843882080": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843901776": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843907904": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843913232": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843920288": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843934656": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843953168": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298843967536": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrinvoice_parserInvoiceParserDataClass_94298844917760": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosInvoiceParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrinvoice_parserInvoiceParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298839917200": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298843655008": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298843729184": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298844818144": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298845006480": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298845010784": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocrOcrDataClass_94298845015088": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "bounding_boxes": {
            "items": {
              "$ref": "#/components/schemas/Bounding_box"
            },
            "title": "Bounding Boxes",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "ocrocrOcrDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844316224": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844322000": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844369168": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_asyncOcrAsyncDataClass_94298844372512": {
        "properties": {
          "raw_text": {
            "title": "Raw Text",
            "type": "string"
          },
          "pages": {
            "description": "List of pages",
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "number_of_pages": {
            "description": "Number of pages in the document",
            "title": "Number Of Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "raw_text",
          "number_of_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_asyncOcrAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844005984": {
        "properties": {
          "pages": {
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "num_pages": {
            "title": "Num Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "num_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_tables_asyncOcrTablesAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844006928": {
        "properties": {
          "pages": {
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "num_pages": {
            "title": "Num Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "num_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_tables_asyncOcrTablesAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrocr_tables_asyncOcrTablesAsyncDataClass_94298844035072": {
        "properties": {
          "pages": {
            "items": {
              "$ref": "#/components/schemas/Page"
            },
            "title": "Pages",
            "type": "array"
          },
          "num_pages": {
            "title": "Num Pages",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "num_pages",
          "id",
          "final_status"
        ],
        "title": "ocrocr_tables_asyncOcrTablesAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844103664": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844132736": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844148672": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844154400": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844161664": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844176864": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844181168": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844188432": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844192272": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844196576": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrreceipt_parserReceiptParserDataClass_94298844205440": {
        "properties": {
          "extracted_data": {
            "items": {
              "$ref": "#/components/schemas/InfosReceiptParserDataClass"
            },
            "title": "Extracted Data",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "ocrreceipt_parserReceiptParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298844049904": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298844060400": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298844075136": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298845171232": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298845176416": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__ocrresume_parserResumeParserDataClass_94298845178144": {
        "properties": {
          "extracted_data": {
            "$ref": "#/components/schemas/ResumeExtractedData"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "extracted_data",
          "status"
        ],
        "title": "ocrresume_parserResumeParserDataClass",
        "type": "object"
      },
      "pydantic__main__textai_detectionAiDetectionDataClass_94298849793920": {
        "properties": {
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AiDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "ai_score",
          "status"
        ],
        "title": "textai_detectionAiDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textai_detectionAiDetectionDataClass_94298849859616": {
        "properties": {
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AiDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "ai_score",
          "status"
        ],
        "title": "textai_detectionAiDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textai_detectionAiDetectionDataClass_94298849860560": {
        "properties": {
          "ai_score": {
            "title": "Ai Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/AiDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "ai_score",
          "status"
        ],
        "title": "textai_detectionAiDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298848351488": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298848365712": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298848410368": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298849569760": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textanonymizationAnonymizationDataClass_94298849579280": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "entities": {
            "items": {
              "$ref": "#/components/schemas/AnonymizationEntity"
            },
            "title": "Entities",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textanonymizationAnonymizationDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849719376": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849720432": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849809152": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849818992": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849819936": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849822160": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textchatChatDataClass_94298849835104": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/ChatMessageDataClass"
            },
            "title": "Message",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textchatChatDataClass",
        "type": "object"
      },
      "pydantic__main__textcode_generationCodeGenerationDataClass_94298849609568": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textcode_generationCodeGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textcode_generationCodeGenerationDataClass_94298849610512": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textcode_generationCodeGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textcode_generationCodeGenerationDataClass_94298849664528": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textcode_generationCodeGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849705808": {
        "properties": {
          "classifications": {
            "items": {
              "$ref": "#/components/schemas/ItemCustomClassificationDataClass"
            },
            "title": "Classifications",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_classificationCustomClassificationDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849714720": {
        "properties": {
          "classifications": {
            "items": {
              "$ref": "#/components/schemas/ItemCustomClassificationDataClass"
            },
            "title": "Classifications",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_classificationCustomClassificationDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298844098480": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosCustomNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849633584": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosCustomNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849634528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosCustomNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849775920": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849780224": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849784528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849797840": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849798784": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textembeddingsEmbeddingsDataClass_94298849912528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmbeddingDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textembeddingsEmbeddingsDataClass",
        "type": "object"
      },
      "pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298843986192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmotionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textemotion_detectionEmotionDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298850634960": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/EmotionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textemotion_detectionEmotionDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textentity_sentimentEntitySentimentDataClass_94298849904960": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "items",
          "status"
        ],
        "title": "textentity_sentimentEntitySentimentDataClass",
        "type": "object"
      },
      "pydantic__main__textentity_sentimentEntitySentimentDataClass_94298850605232": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "items",
          "status"
        ],
        "title": "textentity_sentimentEntitySentimentDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298848404528": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849617920": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849618864": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849621952": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849622896": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849623840": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849625664": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849635600": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textgenerationGenerationDataClass_94298849636544": {
        "properties": {
          "generated_text": {
            "title": "Generated Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "generated_text",
          "status"
        ],
        "title": "textgenerationGenerationDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849365664": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849393104": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849394048": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849407344": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849411616": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849415920": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849420224": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849425136": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849429440": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849433744": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosKeywordExtractionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textkeyword_extractionKeywordExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849387792": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849505728": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849513040": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textmoderationModerationDataClass_94298849526560": {
        "properties": {
          "nsfw_likelihood": {
            "title": "Nsfw Likelihood",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TextModerationItem"
            },
            "title": "Items",
            "type": "array"
          },
          "nsfw_likelihood_score": {
            "title": "Nsfw Likelihood Score",
            "type": "integer"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "nsfw_likelihood",
          "nsfw_likelihood_score",
          "status"
        ],
        "title": "textmoderationModerationDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849447392": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849452304": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849461152": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849466672": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849470992": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849477040": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849481344": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849485648": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849493664": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849495392": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849499696": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosNamedEntityRecognitionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textnamed_entity_recognitionNamedEntityRecognitionDataClass",
        "type": "object"
      },
      "pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298849892560": {
        "properties": {
          "plagia_score": {
            "title": "Plagia Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PlagiaDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "plagia_score",
          "status"
        ],
        "title": "textplagia_detectionPlagiaDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298850613760": {
        "properties": {
          "plagia_score": {
            "title": "Plagia Score",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PlagiaDetectionItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "plagia_score",
          "status"
        ],
        "title": "textplagia_detectionPlagiaDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298840306624": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298844680048": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849554064": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849581824": {
        "properties": {
          "answers": {
            "items": {
              "type": "string"
            },
            "title": "Answers",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textquestion_answerQuestionAnswerDataClass",
        "type": "object"
      },
      "pydantic__main__textsearchSearchDataClass_94298844722160": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSearchDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsearchSearchDataClass",
        "type": "object"
      },
      "pydantic__main__textsearchSearchDataClass_94298848399744": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSearchDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsearchSearchDataClass",
        "type": "object"
      },
      "pydantic__main__textsearchSearchDataClass_94298848587408": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSearchDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsearchSearchDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844319616": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844349104": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844354976": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848357856": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848376528": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848428944": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848600544": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848622160": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848623104": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848636272": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848670192": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848718880": {
        "properties": {
          "general_sentiment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralSentimentEnum"
              }
            ],
            "title": "General Sentiment"
          },
          "general_sentiment_rate": {
            "maximum": 1,
            "minimum": 0,
            "title": "General Sentiment Rate",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SegmentSentimentAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "general_sentiment",
          "general_sentiment_rate",
          "status"
        ],
        "title": "textsentiment_analysisSentimentAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849674736": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849726656": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849730960": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849733184": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849738816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849754512": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textspell_checkSpellCheckDataClass_94298849758816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/SpellCheckItem"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "textspell_checkSpellCheckDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843792544": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843850736": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843877392": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843880304": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843887616": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843925824": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843958704": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298843981952": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298844743520": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298845024272": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298845036048": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298848589120": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsummarizeSummarizeDataClass_94298849535008": {
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "result",
          "status"
        ],
        "title": "textsummarizeSummarizeDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298848615840": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849350544": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849352912": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849367088": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849373152": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849381776": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosSyntaxAnalysisDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "textsyntax_analysisSyntaxAnalysisDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298843973664": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848408320": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848409264": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848598208": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__texttopic_extractionTopicExtractionDataClass_94298849608080": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtractedTopic"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "texttopic_extractionTopicExtractionDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850676352": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850677296": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850685056": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850687872": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850688816": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850691584": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850692528": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850695888": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850696832": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850700192": {
        "properties": {
          "text": {
            "title": "Text",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "text",
          "status"
        ],
        "title": "translationautomatic_translationAutomaticTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850655600": {
        "properties": {
          "file": {
            "title": "File",
            "type": "string"
          },
          "document_resource_url": {
            "title": "Document Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "file",
          "document_resource_url",
          "status"
        ],
        "title": "translationdocument_translationDocumentTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850740176": {
        "properties": {
          "file": {
            "title": "File",
            "type": "string"
          },
          "document_resource_url": {
            "title": "Document Resource Url",
            "type": "string"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "file",
          "document_resource_url",
          "status"
        ],
        "title": "translationdocument_translationDocumentTranslationDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850609536": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850611552": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850624416": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850663200": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850706560": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850709632": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850716528": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850727152": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850731456": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/InfosLanguageDetectionDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "status"
        ],
        "title": "translationlanguage_detectionLanguageDetectionDataClass",
        "type": "object"
      },
      "pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851358336": {
        "properties": {
          "moderation": {
            "items": {
              "$ref": "#/components/schemas/ContentNSFW"
            },
            "title": "Moderation",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851409072": {
        "properties": {
          "moderation": {
            "items": {
              "$ref": "#/components/schemas/ContentNSFW"
            },
            "title": "Moderation",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298839188672": {
        "properties": {
          "faces": {
            "items": {
              "$ref": "#/components/schemas/VideoFace"
            },
            "title": "Faces",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoface_detection_asyncFaceDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298850854608": {
        "properties": {
          "faces": {
            "items": {
              "$ref": "#/components/schemas/VideoFace"
            },
            "title": "Faces",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoface_detection_asyncFaceDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298845461120": {
        "properties": {
          "labels": {
            "items": {
              "$ref": "#/components/schemas/VideoLabel"
            },
            "title": "Labels",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videolabel_detection_asyncLabelDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298850764256": {
        "properties": {
          "labels": {
            "items": {
              "$ref": "#/components/schemas/VideoLabel"
            },
            "title": "Labels",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videolabel_detection_asyncLabelDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850902704": {
        "properties": {
          "persons": {
            "items": {
              "$ref": "#/components/schemas/VideoTrackingPerson"
            },
            "title": "Persons",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoperson_tracking_asyncPersonTrackingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850916240": {
        "properties": {
          "persons": {
            "items": {
              "$ref": "#/components/schemas/VideoTrackingPerson"
            },
            "title": "Persons",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoperson_tracking_asyncPersonTrackingAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850781920": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/VideoText"
            },
            "title": "Texts",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videotext_detection_asyncTextDetectionAsyncDataClass",
        "type": "object"
      },
      "pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850838128": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/VideoText"
            },
            "title": "Texts",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videotext_detection_asyncTextDetectionAsyncDataClass",
        "type": "object"
      },
      "textai_detectionAiDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          },
          "provider_params": {
            "type": "string",
            "description": "\nParameters specific to the provider that you want to send along the request.\n\nit should take a *provider* name as key and an object of parameters as value.\n\nExample:\n\n    {\n      \"deepgram\": {\n        \"filler_words\": true,\n        \"smart_format\": true,\n        \"callback\": \"https://webhook.site/0000\"\n      },\n      \"assembly\": {\n        \"webhook_url\": \"https://webhook.site/0000\"\n      }\n    }\n\nPlease refer to the documentation of each provider to see which parameters to send.\n"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textai_detectionResponseModel": {
        "properties": {
          "sapling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textai_detectionAiDetectionDataClass_94298849793920"
              }
            ],
            "default": null
          },
          "originalityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textai_detectionAiDetectionDataClass_94298849859616"
              }
            ],
            "default": null
          },
          "winstonai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textai_detectionAiDetectionDataClass_94298849860560"
              }
            ],
            "default": null
          }
        },
        "title": "textai_detectionResponseModel",
        "type": "object"
      },
      "textanonymizationResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298848410368"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298848365712"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298849579280"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298849569760"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textanonymizationAnonymizationDataClass_94298848351488"
              }
            ],
            "default": null
          }
        },
        "title": "textanonymizationResponseModel",
        "type": "object"
      },
      "textchatChatRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Start your conversation here..."
          },
          "chatbot_global_action": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "A system message that helps set the behavior of the assistant. For example, 'You are a helpful assistant'."
          },
          "previous_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {},
              "description": "A dictionary representing a single conversation in the previous history. Must contain 'role' and 'message' fields."
            },
            "description": "A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'role' and 'message'. The 'role' key specifies the role of the speaker and can have the values 'user' or 'assistant'. The 'message' key contains the text of the conversation from the respective role. For example: [{'role': 'user', 'message': 'Hello'}, {'role': 'assistant', 'message': 'Hi, how can I help you?'}, ...]. This format allows easy identification of the speaker's role and their corresponding message."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 2,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 16385,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "providers"
        ]
      },
      "textchatChatStreamRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Start your conversation here..."
          },
          "chatbot_global_action": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "A system message that helps set the behavior of the assistant. For example, 'You are a helpful assistant'."
          },
          "previous_history": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {},
              "description": "A dictionary representing a single conversation in the previous history. Must contain 'role' and 'message' fields."
            },
            "description": "A list containing all the previous conversations between the user and the chatbot AI. Each item in the list should be a dictionary with two keys: 'role' and 'message'. The 'role' key specifies the role of the speaker and can have the values 'user' or 'assistant'. The 'message' key contains the text of the conversation from the respective role. For example: [{'role': 'user', 'message': 'Hello'}, {'role': 'assistant', 'message': 'Hi, how can I help you?'}, ...]. This format allows easy identification of the speaker's role and their corresponding message."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 2,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 16385,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          },
          "fallback_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FallbackTypeEnum"
              }
            ],
            "default": "continue"
          }
        },
        "required": [
          "providers"
        ]
      },
      "textchatResponseModel": {
        "properties": {
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849720432"
              }
            ],
            "default": null
          },
          "perplexityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849719376"
              }
            ],
            "default": null
          },
          "replicate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849822160"
              }
            ],
            "default": null
          },
          "mistral": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849809152"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849818992"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849819936"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textchatChatDataClass_94298849835104"
              }
            ],
            "default": null
          }
        },
        "title": "textchatResponseModel",
        "type": "object"
      },
      "textcode_generationCodeGenerationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "prompt": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Entrer the source code that will be used as a context."
          },
          "instruction": {
            "type": "string",
            "minLength": 1,
            "description": "Entrer the instruction you want to be followed."
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 4096,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "instruction",
          "providers"
        ]
      },
      "textcode_generationResponseModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcode_generationCodeGenerationDataClass_94298849664528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcode_generationCodeGenerationDataClass_94298849609568"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcode_generationCodeGenerationDataClass_94298849610512"
              }
            ],
            "default": null
          }
        },
        "title": "textcode_generationResponseModel",
        "type": "object"
      },
      "textcustom_classificationCustomClassificationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of texts to classify"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of the labels (classes) you want the texts to be classified as."
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "maxItems": 2,
              "minItems": 2
            },
            "description": "List of text/label pairs (eg: [['I need help please wire me $1000 right now', 'spam'],]"
          }
        },
        "required": [
          "examples",
          "labels",
          "providers",
          "texts"
        ]
      },
      "textcustom_classificationResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849705808"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_classificationCustomClassificationDataClass_94298849714720"
              }
            ],
            "default": null
          }
        },
        "title": "textcustom_classificationResponseModel",
        "type": "object"
      },
      "textcustom_named_entity_recognitionCustomNamedEntityRecognitionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Enter your input text."
          },
          "entities": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of entities (at least two) to extract from your text eg : ['job', 'country'].",
            "minItems": 2
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "description": "List of examples eg : [{'text': 'an input text', 'entities' : [{'entity':'entity_1', 'category':'category_1'}, ...]}, ...]"
          }
        },
        "required": [
          "entities",
          "providers",
          "text"
        ]
      },
      "textcustom_named_entity_recognitionResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298844098480"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849633584"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textcustom_named_entity_recognitionCustomNamedEntityRecognitionDataClass_94298849634528"
              }
            ],
            "default": null
          }
        },
        "title": "textcustom_named_entity_recognitionResponseModel",
        "type": "object"
      },
      "textembeddingsEmbeddingsRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of texts to transform into embeddings."
          }
        },
        "required": [
          "providers",
          "texts"
        ]
      },
      "textembeddingsResponseModel": {
        "properties": {
          "jina": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849798784"
              }
            ],
            "default": null
          },
          "mistral": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849797840"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849775920"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849780224"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849784528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textembeddingsEmbeddingsDataClass_94298849912528"
              }
            ],
            "default": null
          }
        },
        "title": "textembeddingsResponseModel",
        "type": "object"
      },
      "textemotion_detectionEmotionDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textemotion_detectionResponseModel": {
        "properties": {
          "vernai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298843986192"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textemotion_detectionEmotionDetectionDataClass_94298850634960"
              }
            ],
            "default": null
          }
        },
        "title": "textemotion_detectionResponseModel",
        "type": "object"
      },
      "textentity_sentimentEntitySentimentRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textentity_sentimentResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textentity_sentimentEntitySentimentDataClass_94298849904960"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textentity_sentimentEntitySentimentDataClass_94298850605232"
              }
            ],
            "default": null
          }
        },
        "title": "textentity_sentimentResponseModel",
        "type": "object"
      },
      "textgenerationGenerationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Enter your prompt"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 4048,
            "minimum": 1,
            "default": 1000,
            "description": "The maximum number of tokens to generate in the completion. The token count of your prompt plus max_tokens cannot exceed the model's context length."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textgenerationResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298848404528"
              }
            ],
            "default": null
          },
          "meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849617920"
              }
            ],
            "default": null
          },
          "mistral": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849618864"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849635600"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849636544"
              }
            ],
            "default": null
          },
          "anthropic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849621952"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849622896"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849623840"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textgenerationGenerationDataClass_94298849625664"
              }
            ],
            "default": null
          }
        },
        "title": "textgenerationResponseModel",
        "type": "object"
      },
      "textkeyword_extractionResponseModel": {
        "properties": {
          "corticalio": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849407344"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849393104"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849394048"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849365664"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849411616"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849415920"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849420224"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849425136"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849429440"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textkeyword_extractionKeywordExtractionDataClass_94298849433744"
              }
            ],
            "default": null
          }
        },
        "title": "textkeyword_extractionResponseModel",
        "type": "object"
      },
      "textmoderationResponseModel": {
        "properties": {
          "clarifai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849387792"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849513040"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849505728"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textmoderationModerationDataClass_94298849526560"
              }
            ],
            "default": null
          }
        },
        "title": "textmoderationResponseModel",
        "type": "object"
      },
      "textnamed_entity_recognitionResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849493664"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849447392"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849470992"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849452304"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849466672"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849461152"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849477040"
              }
            ],
            "default": null
          },
          "lettria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849481344"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849485648"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849495392"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textnamed_entity_recognitionNamedEntityRecognitionDataClass_94298849499696"
              }
            ],
            "default": null
          }
        },
        "title": "textnamed_entity_recognitionResponseModel",
        "type": "object"
      },
      "textplagia_detectionPlagiaDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "A text content on which a plagiarism detection analysis will be run"
          },
          "title": {
            "type": "string",
            "nullable": true,
            "default": "",
            "description": "Content title"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textplagia_detectionResponseModel": {
        "properties": {
          "originalityai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298849892560"
              }
            ],
            "default": null
          },
          "winstonai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textplagia_detectionPlagiaDetectionDataClass_94298850613760"
              }
            ],
            "default": null
          }
        },
        "title": "textplagia_detectionResponseModel",
        "type": "object"
      },
      "textprompt_optimizationPromptOptimizationDataClass": {
        "properties": {
          "missing_information": {
            "title": "Missing Information",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PromptDataClass"
            },
            "title": "Items",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/StatusF43Enum"
              }
            ],
            "title": "Status"
          }
        },
        "required": [
          "missing_information",
          "status"
        ],
        "title": "textprompt_optimizationPromptOptimizationDataClass",
        "type": "object"
      },
      "textprompt_optimizationPromptOptimizationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Description of the desired prompt."
          },
          "target_provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TargetProviderEnum"
              }
            ],
            "description": "Select the provider for the prompt optimization\n\n* `google` - google\n* `openai` - openai\n* `cohere` - cohere"
          }
        },
        "required": [
          "providers",
          "target_provider",
          "text"
        ]
      },
      "textprompt_optimizationResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/textprompt_optimizationPromptOptimizationDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "textprompt_optimizationResponseModel",
        "type": "object"
      },
      "textquestion_answerQuestionAnswerRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "List of texts to analyze"
          },
          "question": {
            "type": "string",
            "minLength": 1,
            "description": "Question about the text content"
          },
          "temperature": {
            "type": "number",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "default": 0.0,
            "description": "Higher values mean the model will take more risks and value 0 (argmax sampling) works better for scenarios with a well-defined answer."
          },
          "examples_context": {
            "type": "string",
            "minLength": 1,
            "description": "example text serving as context"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "maxItems": 2,
              "minItems": 2
            },
            "description": "List of question/answer pairs (eg: [['When was Barack Obama elected president?', 'in 2009.'],]"
          }
        },
        "required": [
          "examples",
          "examples_context",
          "providers",
          "question",
          "texts"
        ]
      },
      "textquestion_answerResponseModel": {
        "properties": {
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849581824"
              }
            ],
            "default": null
          },
          "huggingface": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298849554064"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298840306624"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textquestion_answerQuestionAnswerDataClass_94298844680048"
              }
            ],
            "default": null
          }
        },
        "title": "textquestion_answerResponseModel",
        "type": "object"
      },
      "textsearchResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsearchSearchDataClass_94298848399744"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsearchSearchDataClass_94298848587408"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsearchSearchDataClass_94298844722160"
              }
            ],
            "default": null
          }
        },
        "title": "textsearchResponseModel",
        "type": "object"
      },
      "textsearchSearchRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "texts": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "description": "A list of texts to search in.",
            "minItems": 2
          },
          "query": {
            "type": "string",
            "minLength": 1,
            "description": "Your text query."
          },
          "similarity_metric": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SimilarityMetricEnum"
              }
            ],
            "default": "cosine",
            "description": "Is used to specify the similarity function that calculates the similarity between embedding vectors when performing text searches. This parameter allows you to customize how text similarity is measured, which can be crucial in various natural language processing tasks such as document retrieval, recommendation systems, and clustering.\n\n* `cosine` - cosine\n* `manhattan` - manhattan\n* `euclidean` - euclidean"
          }
        },
        "required": [
          "providers",
          "query",
          "texts"
        ]
      },
      "textsentiment_analysisResponseModel": {
        "properties": {
          "connexun": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844349104"
              }
            ],
            "default": null
          },
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848670192"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844354976"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298844319616"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848622160"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848718880"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848376528"
              }
            ],
            "default": null
          },
          "lettria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848428944"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848623104"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848636272"
              }
            ],
            "default": null
          },
          "sapling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848600544"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsentiment_analysisSentimentAnalysisDataClass_94298848357856"
              }
            ],
            "default": null
          }
        },
        "title": "textsentiment_analysisResponseModel",
        "type": "object"
      },
      "textspell_checkResponseModel": {
        "properties": {
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849733184"
              }
            ],
            "default": null
          },
          "prowritingaid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849674736"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849738816"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849726656"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849730960"
              }
            ],
            "default": null
          },
          "sapling": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849754512"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textspell_checkSpellCheckDataClass_94298849758816"
              }
            ],
            "default": null
          }
        },
        "title": "textspell_checkResponseModel",
        "type": "object"
      },
      "textspell_checkSpellCheckRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textsummarizeResponseModel": {
        "properties": {
          "connexun": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843958704"
              }
            ],
            "default": null
          },
          "alephalpha": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843981952"
              }
            ],
            "default": null
          },
          "huggingface": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298848589120"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843850736"
              }
            ],
            "default": null
          },
          "anthropic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843877392"
              }
            ],
            "default": null
          },
          "cohere": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843925824"
              }
            ],
            "default": null
          },
          "ai21labs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843880304"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843887616"
              }
            ],
            "default": null
          },
          "writesonic": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298845024272"
              }
            ],
            "default": null
          },
          "meaningcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298844743520"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298843792544"
              }
            ],
            "default": null
          },
          "nlpcloud": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298849535008"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsummarizeSummarizeDataClass_94298845036048"
              }
            ],
            "default": null
          }
        },
        "title": "textsummarizeResponseModel",
        "type": "object"
      },
      "textsummarizeSummarizeRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          },
          "settings": {
            "type": "string",
            "default": {},
            "description": "A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {\"google\" : \"google_model\", \"ibm\": \"ibm_model\"...}.\n                     **Caution**: setting models can be done only with `Content-Type` : `application/json`.\n                     "
          },
          "output_sentences": {
            "type": "integer",
            "minimum": 1,
            "default": 1
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "textsyntax_analysisResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849367088"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849381776"
              }
            ],
            "default": null
          },
          "lettria": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298848615840"
              }
            ],
            "default": null
          },
          "emvista": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849350544"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849373152"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__textsyntax_analysisSyntaxAnalysisDataClass_94298849352912"
              }
            ],
            "default": null
          }
        },
        "title": "textsyntax_analysisResponseModel",
        "type": "object"
      },
      "texttopic_extractionResponseModel": {
        "properties": {
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848598208"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298843973664"
              }
            ],
            "default": null
          },
          "tenstorrent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848408320"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298848409264"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__texttopic_extractionTopicExtractionDataClass_94298849608080"
              }
            ],
            "default": null
          }
        },
        "title": "texttopic_extractionResponseModel",
        "type": "object"
      },
      "texttopic_extractiontextanonymizationtextmoderationtextnamed_entity_recognitiontextkeyword_extractiontextsyntax_analysistextsentiment_analysisTextAnalysisRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "language": {
            "type": "string",
            "nullable": true,
            "description": "Language code for the language the input text is written in (eg: en, fr)."
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "translationautomatic_translationAutomaticTranslationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          },
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "Source language code (ex: en, fr)"
          },
          "target_language": {
            "type": "string",
            "minLength": 1,
            "description": "Target language code (ex: en, fr)"
          }
        },
        "required": [
          "providers",
          "target_language",
          "text"
        ]
      },
      "translationautomatic_translationResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850676352"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850677296"
              }
            ],
            "default": null
          },
          "huggingface": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850685056"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850687872"
              }
            ],
            "default": null
          },
          "modernmt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850688816"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850691584"
              }
            ],
            "default": null
          },
          "deepl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850692528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850695888"
              }
            ],
            "default": null
          },
          "phedone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850696832"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationautomatic_translationAutomaticTranslationDataClass_94298850700192"
              }
            ],
            "default": null
          }
        },
        "title": "translationautomatic_translationResponseModel",
        "type": "object"
      },
      "translationdocument_translationDocumentTranslationRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "file": {
            "type": "string",
            "format": "binary",
            "description": "File to analyse in binary format to be used with *content-type*: **multipart/form-data** <br> **Does not work with application/json !**"
          },
          "file_url": {
            "type": "string",
            "format": "uri",
            "nullable": true,
            "description": "File **URL** to analyse to be used with with *content-type*: **application/json**."
          },
          "file_password": {
            "type": "string",
            "nullable": true,
            "description": "If your PDF file has a password, you can pass it here!",
            "maxLength": 200
          },
          "source_language": {
            "type": "string",
            "nullable": true,
            "description": "Source language code (ex: en, fr)"
          },
          "target_language": {
            "type": "string",
            "minLength": 1,
            "description": "Target language code (ex: en, fr)"
          }
        },
        "required": [
          "providers",
          "target_language"
        ]
      },
      "translationdocument_translationResponseModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850740176"
              }
            ],
            "default": null
          },
          "deepl": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationdocument_translationDocumentTranslationDataClass_94298850655600"
              }
            ],
            "default": null
          }
        },
        "title": "translationdocument_translationResponseModel",
        "type": "object"
      },
      "translationlanguage_detectionLanguageDetectionRequest": {
        "type": "object",
        "properties": {
          "providers": {
            "type": "string",
            "minLength": 1,
            "description": "It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results."
          },
          "fallback_providers": {
            "type": "string",
            "nullable": true,
            "description": "Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.\n    To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.\n\nThey will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.\n\n\n*Doesn't work with async subfeatures.*\n    "
          },
          "response_as_dict": {
            "type": "boolean",
            "default": true,
            "description": "Optional : When set to **true** (default), the response is an object of responses with providers names as keys : <br> \n                  ``` {\"google\" : { \"status\": \"success\", ... }, } ``` <br>\n                When set to **false** the response structure is a list of response objects : <br> \n                   ``` [{\"status\": \"success\", \"provider\": \"google\" ... }, ] ```. <br>\n                  "
          },
          "attributes_as_list": {
            "type": "boolean",
            "default": false,
            "description": "Optional : When set to **false** (default) the structure of the extracted items is list of objects having different attributes : <br>\n     ```{'items': [{\"attribute_1\": \"x1\",\"attribute_2\": \"y2\"}, ... ]}``` <br>\n     When it is set to **true**, the response contains an object with each attribute as a list : <br>\n     ```{ \"attribute_1\": [\"x1\",\"x2\", ...], \"attribute_2\": [y1, y2, ...]}``` "
          },
          "show_original_response": {
            "type": "boolean",
            "default": false,
            "description": "Optional : Shows the original response of the provider.<br>\n        When set to **true**, a new attribute *original_response* will appear in the response object."
          },
          "text": {
            "type": "string",
            "minLength": 1,
            "description": "Text to analyze"
          }
        },
        "required": [
          "providers",
          "text"
        ]
      },
      "translationlanguage_detectionResponseModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850663200"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850709632"
              }
            ],
            "default": null
          },
          "modernmt": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850706560"
              }
            ],
            "default": null
          },
          "microsoft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850624416"
              }
            ],
            "default": null
          },
          "neuralspace": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850716528"
              }
            ],
            "default": null
          },
          "openai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850609536"
              }
            ],
            "default": null
          },
          "oneai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850611552"
              }
            ],
            "default": null
          },
          "ibm": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850727152"
              }
            ],
            "default": null
          },
          "eden-ai": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__translationlanguage_detectionLanguageDetectionDataClass_94298850731456"
              }
            ],
            "default": null
          }
        },
        "title": "translationlanguage_detectionResponseModel",
        "type": "object"
      },
      "videoexplicit_content_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851358336"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoexplicit_content_detection_asyncExplicitContentDetectionAsyncDataClass_94298851409072"
              }
            ],
            "default": null
          }
        },
        "title": "videoexplicit_content_detection_asyncModel",
        "type": "object"
      },
      "videoface_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298839188672"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoface_detection_asyncFaceDetectionAsyncDataClass_94298850854608"
              }
            ],
            "default": null
          }
        },
        "title": "videoface_detection_asyncModel",
        "type": "object"
      },
      "videolabel_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298845461120"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videolabel_detection_asyncLabelDetectionAsyncDataClass_94298850764256"
              }
            ],
            "default": null
          }
        },
        "title": "videolabel_detection_asyncModel",
        "type": "object"
      },
      "videologo_detection_asyncLogoDetectionAsyncDataClass": {
        "properties": {
          "logos": {
            "items": {
              "$ref": "#/components/schemas/LogoTrack"
            },
            "title": "Logos",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videologo_detection_asyncLogoDetectionAsyncDataClass",
        "type": "object"
      },
      "videologo_detection_asyncModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/videologo_detection_asyncLogoDetectionAsyncDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "videologo_detection_asyncModel",
        "type": "object"
      },
      "videoobject_tracking_asyncModel": {
        "properties": {
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/videoobject_tracking_asyncObjectTrackingAsyncDataClass"
              }
            ],
            "default": null
          }
        },
        "title": "videoobject_tracking_asyncModel",
        "type": "object"
      },
      "videoobject_tracking_asyncObjectTrackingAsyncDataClass": {
        "properties": {
          "objects": {
            "items": {
              "$ref": "#/components/schemas/ObjectTrack"
            },
            "title": "Objects",
            "type": "array"
          },
          "original_response": {
            "default": null,
            "description": "original response sent by the provider, hidden by default, show it by passing the `show_original_response` field to `true` in your request",
            "title": "Original Response"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "final_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinalStatusEnum"
              }
            ],
            "title": "Final Status"
          },
          "error": {
            "default": null,
            "title": "Error",
            "type": "object"
          }
        },
        "required": [
          "id",
          "final_status"
        ],
        "title": "videoobject_tracking_asyncObjectTrackingAsyncDataClass",
        "type": "object"
      },
      "videoperson_tracking_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850902704"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videoperson_tracking_asyncPersonTrackingAsyncDataClass_94298850916240"
              }
            ],
            "default": null
          }
        },
        "title": "videoperson_tracking_asyncModel",
        "type": "object"
      },
      "videotext_detection_asyncModel": {
        "properties": {
          "amazon": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850781920"
              }
            ],
            "default": null
          },
          "google": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pydantic__main__videotext_detection_asyncTextDetectionAsyncDataClass_94298850838128"
              }
            ],
            "default": null
          }
        },
        "title": "videotext_detection_asyncModel",
        "type": "object"
      }
    },
    "securitySchemes": {
      "FeatureApiAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "jwtAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}