Here is a Python client SDK for the given API:

```python
import requests
from typing import TypedDict, Literal, Optional

class BatchJob(TypedDict):
    path: str
    opid: str
    sum: str

class Batch:
    def __init__(self, base_url: str, api_key: Optional[str] = None):
        self.base_url = base_url
        self.api_key = api_key

    def _make_request(self, method: Literal['GET', 'POST', 'PUT', 'DELETE'], path: str, data: Optional[dict] = None) -> requests.Response:
        url = self.base_url + path
        return requests.request(method, url, json=data)

    def _make_authenticated_request(self, method: Literal['GET', 'POST', 'PUT', 'DELETE'], path: str, data: Optional[dict] = None) -> requests.Response:
        url = self.base_url + path
        headers = {'Authorization': 'Bearer ' + self.api_key} if self.api_key else {}
        return requests.request(method, url, headers=headers, json=data)

    def batch_batch_list(self) -> BatchJob:
        path = '/batch'
        response = self._make_authenticated_request('GET', path)
        response.raise_for_status()
        return response.json()
```

This SDK includes a class `Batch` with methods for each endpoint in the API. The `_make_request` method is used for making unauthenticated requests, while `_make_authenticated_request` is used for making authenticated requests. The `batch_batch_list` method is used to list batch jobs. The `BatchJob` TypedDict is used to type the response from the `batch_batch_list` method. The `Literal` type is used to restrict the `method` argument to the `_make_request` and `_make_authenticated_request` methods to the HTTP methods 'GET', 'POST', 'PUT', and 'DELETE'.