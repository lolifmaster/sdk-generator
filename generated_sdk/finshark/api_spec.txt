##IMPORTANT: base_url:api.finshark.io
---
##SECURITY SCHEMES
-Bearer
desc: Please enter into field the word 'Bearer' following by space and JWT
type: apiKey
name: Authorization
in: header
---
##SECURITY SCOPES
Bearer: []
---
##ENDPOINTS
---
-method:get
path: /v1/accounts
opid: Accounts_list
params
name: sessionId
in: header
schema
type: str
format: uuid
req: False
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
sum: Get list of accounts.
---
-method:get
path: /v1/accounts/accountId
opid: Accounts_getDetails
params
name: sessionId
in: header
schema
type: str
format: uuid
req: False
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
name: accountId
in: path
req: True
schema
type: str
sum: Detailed information about an account.
---
-method:get
path: /v1/accounts/accountId/balances
opid: Accounts_getBalances
params
name: accountId
in: path
req: True
schema
type: str
name: sessionId
in: header
schema
type: str
format: uuid
req: False
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
sum: Get all types of balances for the selected account.
---
-method:get
path: /v1/cards
opid: Cards_getList
params
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
sum: Get list of cards.
---
-method:get
path: /v1/cards/cardId
opid: Cards_getDetails
params
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
name: cardId
in: path
req: True
schema
type: str
sum: Detailed information about an card.
---
-method:get
path: /v1/cards/cardId/cardtransactions
opid: CardTransactions_getList
params
name: cardId
in: path
req: True
schema
type: str
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
name: bookingStatus
in: query
schema
ref: #/components/schemas/BookingStatusType
req: False
name: dateFrom
in: query
schema
type: int
format: int64
req: False
name: dateTo
in: query
schema
type: int
format: int64
req: False
name: sequenceNumber
in: query
schema
type: str
req: False
name: hash
in: query
schema
type: str
req: False
sum: Get a list of transactions for the selected account.
---
-method:get
path: /v1/cards/cardId/cardtransactions/transactionId
opid: CardTransactions_getByTransactionId
params
name: cardId
in: path
req: True
schema
type: str
name: transactionId
in: path
req: True
schema
type: str
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
sum: Get a transaction by transaction identifier.
---
-method:get
path: /v1/accounts/accountId/transactions
opid: Transactions_listForAccount
params
name: accountId
in: path
req: True
schema
type: str
name: sessionId
in: header
schema
type: str
format: uuid
req: False
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
name: bookingStatus
in: query
schema
ref: #/components/schemas/BookingStatusType
req: False
name: dateFrom
in: query
schema
type: int
format: int64
req: False
name: dateTo
in: query
schema
type: int
format: int64
req: False
name: sequenceNumber
in: query
schema
type: str
req: False
name: hash
in: query
schema
type: str
req: False
sum: Get a list of transactions for the selected account.
---
-method:get
path: /v1/accounts/accountId/transactions/transactionId
opid: Transactions_getById
params
name: accountId
in: path
req: True
schema
type: str
name: transactionId
in: path
req: True
schema
type: str
name: sessionId
in: header
schema
type: str
format: uuid
req: False
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
sum: Get a transaction by transaction identifier.
---
-method:post
path: /v1/bankId/identify
opid: BankId_initiateAuthenticationOrder
sum: Initiates an authentication order.
ref: #/components/schemas/BankIdIdentifyDto
---
-method:get
path: /v1/bankId/orderRef
opid: BankId_collectOrderResult
params
name: orderRef
in: path
req: True
schema
type: str
name: userIdentification
in: query
schema
type: bool
req: False
sum: Collects the result of a sign or auth order using orderRef as reference.
---
-method:post
path: /v1/bankId/qr
opid: BankId_getQrCodeData
sum: Retrieves QR code data based on the provided QR data request.
ref: #/components/schemas/QrDataRequest
---
-method:get
path: /v1/compliance/dk/ssn/cpr
opid: CentralPersonRegisterDenmark_getMappedResponse
params
name: ssn
in: path
req: True
schema
type: str
sum: Gets a mapped response from CPR Service for provider person id.
---
-method:get
path: /v1/compliance-data
opid: ComplianceData_getBasedParameters
params
name: filterParam
in: query
schema
type: str
req: False
name: pageSize
in: query
schema
type: int
format: int32
def: 100
req: False
name: pageNumber
in: query
schema
type: int
format: int32
def: 1
req: False
sum: Retrieves compliance data based on specified parameters.
---
-method:post
path: /v1/kyc
opid: Kyc_submitReport
params
name: authorizationId
in: query
schema
type: str
req: False
name: ssn
in: query
schema
type: str
req: False
sum: Create a KYC report.
---
-method:get
path: /v1/kyc/id
opid: Kyc_reportFetch
params
name: id
in: path
req: True
schema
type: str
sum: Get a KYC report.
---
-method:get
path: /v1/tra-result
opid: Tra_getRecommendationValue
params
name: authorizationId
in: query
schema
type: str
req: False
name: paymentId
in: query
schema
type: str
req: False
sum: Returns TRA recommendation value from cache.
---
-method:post
path: /v1/user-identification
opid: UserIdentification_postData
sum: Post user data.
ref: #/components/schemas/UserDataDto
---
-method:post
path: /v1/user-identity-verification/user-authentication
opid: UserIdentityVerification_startFtnAuthenticationFlow
sum: Starts FTN authentication flow for given user.
ref: #/components/schemas/UserIdentityVerificationDto
---
-method:get
path: /v1/user-identity-verification/session-details
opid: UserIdentityVerification_getSessionDetails
params
name: sessionId
in: query
schema
type: str
req: False
sum: Gets details of FTN authentication flow.
---
-method:post
path: /v1/insights/request
opid: Insights_createRequest
params
name: sessionId
in: header
schema
type: str
format: uuid
req: False
name: authorizationId
in: header
schema
type: str
format: uuid
req: False
name: sandbox
in: query
schema
type: bool
def: False
req: False
name: callbackUri
in: query
schema
type: str
req: False
sum: Creating an insights request.
ref: #/components/schemas/CreateInsightsRequest
---
-method:get
path: /v1/insights/requestId
opid: Insights_getReport
params
name: requestId
in: path
req: True
schema
type: str
format: uuid
sum: Get an insights report.
---
-method:post
path: /v1/payments
opid: PaymentRequests_createRequest
sum: Creating a Payment Request.
ref: #/components/schemas/PaymentRequestsCreateRequestRequest
---
-method:get
path: /v1/payments
opid: PaymentRequests_getAll
params
name: searchClientId
in: query
schema
type: str
req: False
name: searchRecipient
in: query
schema
type: str
req: False
name: searchStatus
in: query
schema
type: str
req: False
name: searchClientAccess
in: query
schema
type: str
req: False
name: sortBy
in: query
schema
type: str
req: False
name: sortDirection
in: query
schema
type: str
req: False
name: pageIndex
in: query
schema
type: int
format: int32
def: 0
req: False
name: pageSize
in: query
schema
type: int
format: int32
def: 10
req: False
sum: Get all Payment Requests for selected organizationId.
---
-method:get
path: /v1/payments/id
opid: PaymentRequests_getDetailsById
params
name: id
in: path
req: True
schema
type: str
sum: Get Payment Request details by id.
---
-method:delete
path: /v1/payments/id
opid: PaymentRequests_deleteRequest
params
name: id
in: path
req: True
schema
type: str
sum: Delete Payment Request.
---
-method:get
path: /v1/payments/id/details
opid: PaymentRequests_getDetailsById
params
name: id
in: path
req: True
schema
type: str
sum: Get Payment Request details and authorization information by payment request id.
---
-method:post
path: /v1/payments/id/refund
opid: PaymentRequests_createRefundRequest
params
name: id
in: path
req: True
schema
type: str
sum: Create a payment refund request.
ref: #/components/schemas/CreatePaymentRefundRequest
---
-method:post
path: /v1/payments/templates
opid: PaymentTemplates_createTemplate
sum: Creating a payment template.
ref: #/components/schemas/CreatePaymentTemplate
---
-method:get
path: /v1/payments/templates
opid: PaymentTemplates_getAllTemplates
sum: Get all templates.
---
-method:get
path: /v1/payments/templates/id
opid: PaymentTemplates_getById
params
name: id
in: path
req: True
schema
type: str
sum: Get payment template by id.
---
-method:put
path: /v1/payments/templates/id
opid: PaymentTemplates_updateRequest
params
name: id
in: path
req: True
schema
type: str
sum: Creating a request to update a Payment template.
ref: #/components/schemas/UpdatePaymentTemplate
---
-method:delete
path: /v1/payments/templates/id
opid: PaymentTemplates_removeTemplate
params
name: id
in: path
req: True
schema
type: str
sum: Delete payment template.
---
-method:post
path: /v1/payments/templates/id/initiate
opid: PaymentTemplates_initiateRequest
params
name: id
in: path
req: True
schema
type: str
sum: Creating a payment request from a template.
ref: #/components/schemas/PaymentRequestInit
---
-method:post
path: /v1/payouts
opid: Payouts_createPayout
sum: Create a payout.
ref: #/components/schemas/CreatePayout
---
-method:get
path: /v1/payouts
opid: Payouts_getAllPayouts
params
name: dateFrom
in: query
schema
type: int
format: int64
req: False
name: dateTo
in: query
schema
type: int
format: int64
req: False
name: status
in: query
schema
ref: #/components/schemas/PayoutStatus
req: False
name: paymentId
in: query
schema
type: str
req: False
sum: Get all payouts.
---
-method:post
path: /v1/payouts/id/authorization
opid: Payouts_authorizePayout
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Authorizes a payout.
---
-method:get
path: /v1/payouts/id
opid: Payouts_getById
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Get payout by id.
---
-method:post
path: /v1/recurring-payments
opid: RecurringPayments_createNewRecurringPayment
sum: Create a new recurring payment.
ref: #/components/schemas/RecurringPaymentCreateRequest
---
-method:get
path: /v1/recurring-payments/id
opid: RecurringPayments_getRecurringPayment
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Get the recurring payment.
---
-method:delete
path: /v1/recurring-payments/id
opid: RecurringPayments_cancelRecurringPayment
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Delete/cancel the recurring payment.
---
-method:post
path: /v1/signing-baskets
opid: SigningBaskets_createNewBasket
params
name: ignoreSizeLimit
in: query
schema
type: bool
def: False
req: False
sum: Create a new signing basket.
ref: #/components/schemas/SigningBasketCreateRequest
---
-method:get
path: /v1/signing-baskets/id
opid: SigningBaskets_getDetails
params
name: id
in: path
req: True
schema
type: str
sum: Get Signing Basket details.
---
-method:delete
path: /v1/signing-baskets/id
opid: SigningBaskets_cancel
params
name: id
in: path
req: True
schema
type: str
sum: Delete/cancel the signing basket.
---
-method:get
path: /v1/consent-authorizations/id
opid: ConsentAuthorizations_getStatusWithExpiryTime
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Getting consent authorization status with expiry time.
---
-method:post
path: /v1/providers/authorizations/authorizationId/validation
opid: ProviderAuthorizations_validatePsuAuthorizationData
params
name: authorizationId
in: path
req: True
schema
type: str
format: uuid
sum: Validate the PSU authorization data.
ref: #/components/schemas/AuthorizationValidationRequest
---
-method:get
path: /v1/Webhooks
opid: Webhooks_getAll
sum: Gets a list of all webhooks.
---
-method:post
path: /v1/Webhooks
opid: Webhooks_createNewWebhook
sum: Creates a new webhook.
ref: #/components/schemas/CreateWebhookRequest
---
-method:put
path: /v1/Webhooks/id
opid: Webhooks_updateWebhook
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Updates an existing webhook.
ref: #/components/schemas/UpdateWebhookRequest
---
-method:get
path: /v1/Webhooks/id
opid: Webhooks_getSingleById
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Gets a single webhook by id.
---
-method:delete
path: /v1/Webhooks/id
opid: Webhooks_deleteWebhook
params
name: id
in: path
req: True
schema
type: str
format: uuid
sum: Deletes an existing webhook.
---
