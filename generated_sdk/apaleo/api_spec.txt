###IMPORTANT: base_url:api.apaleo.com
---
---
###ENDPOINTS
##path: /inventory/v1/properties
#method:get
-security
oauth2: []
-
opid: Property_listGet
params
in: query
name: status
style: form
explode: False
schema
type: arr
items
enum
Test
Live
type: str
req: False
in: query
name: includeArchived
schema
type: bool
req: False
in: query
name: countryCode
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: pageNumber
schema
type: int
def: 1
req: False
in: query
name: pageSize
schema
type: int
format: int64
req: False
in: query
name: expand
style: form
explode: False
schema
type: arr
items
enum
actions
type: str
req: False
#method:post
-security
oauth2: ['properties.create', 'setup.manage', 'admin']
-
opid: Property_create
params
in: header
name: Idempotency-Key
schema
type: str
req: False
ref: #CreatePropertyModel
---
##path: /inventory/v1/properties/$count
#method:get
-security
oauth2: []
-
opid: Property_getTotalCount
---
##path: /inventory/v1/properties/{id}
#method:get
-security
oauth2: []
-
opid: Property_getById
params
in: path
name: id
req: True
schema
type: str
in: query
name: languages
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: expand
style: form
explode: False
schema
type: arr
items
enum
actions
type: str
req: False
#method:patch
-security
oauth2: ['properties.manage', 'setup.manage', 'admin']
-
opid: Property_modifyDetails
params
in: path
name: id
req: True
schema
type: str
ref: #PropertyModifyDetailsRequest
---
##path: /inventory/v1/property-actions/{id}/clone
#method:post
-security
oauth2: ['properties.create', 'setup.manage', 'admin']
-
opid: PropertyActions_cloneProperty
params
in: path
name: id
req: True
schema
type: str
in: header
name: Idempotency-Key
schema
type: str
req: False
ref: #CreatePropertyModel
---
##path: /inventory/v1/property-actions/{id}/archive
#method:put
-security
oauth2: ['properties.manage', 'setup.manage', 'admin']
-
opid: PropertyActions_archiveProperty
params
in: path
name: id
req: True
schema
type: str
---
##path: /inventory/v1/property-actions/{id}/set-live
#method:put
-security
oauth2: ['properties.manage', 'setup.manage', 'admin']
-
opid: PropertyActions_moveToLive
params
in: path
name: id
req: True
schema
type: str
---
##path: /inventory/v1/property-actions/{id}/reset
#method:put
-security
oauth2: ['properties.manage', 'setup.manage', 'admin']
-
opid: PropertyActions_resetPropertyData
params
in: path
name: id
req: True
schema
type: str
---
##path: /inventory/v1/types/countries
#method:get
-security
oauth2: []
-
opid: Types_supportedCountriesList
---
##path: /inventory/v1/units/{id}
#method:patch
-security
oauth2: ['units.manage', 'setup.manage', 'admin']
-
opid: Unit_updateProperties
params
in: path
name: id
req: True
schema
type: str
ref: #PropertyModifyDetailsRequest
#method:get
-security
oauth2: ['units.read', 'setup.read', 'setup.manage', 'admin']
-
opid: Unit_getById
params
in: path
name: id
req: True
schema
type: str
in: query
name: languages
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: expand
style: form
explode: False
schema
type: arr
items
enum
property
unitGroup
connectedUnits
type: str
req: False
#method:delete
-security
oauth2: ['units.delete', 'setup.manage', 'admin']
-
opid: Unit_deleteById
params
in: path
name: id
req: True
schema
type: str
---
##path: /inventory/v1/units
#method:patch
-security
oauth2: ['units.manage', 'setup.manage', 'admin']
-
opid: Unit_updateUnitsAttributes
params
in: query
name: unitIds
req: True
style: form
explode: False
schema
type: arr
items
type: str
ref: #PropertyModifyDetailsRequest
#method:get
-security
oauth2: ['units.read', 'setup.read', 'setup.manage', 'admin']
-
opid: Unit_listUnits
params
in: query
name: propertyId
schema
type: str
req: False
in: query
name: unitGroupId
schema
type: str
req: False
in: query
name: unitGroupIds
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: unitAttributeIds
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: isOccupied
schema
type: bool
req: False
in: query
name: maintenanceType
schema
type: str
enum
OutOfService
OutOfOrder
OutOfInventory
req: False
in: query
name: condition
schema
type: str
enum
Clean
CleanToBeInspected
Dirty
req: False
in: query
name: textSearch
schema
type: str
req: False
in: query
name: pageNumber
schema
type: int
def: 1
req: False
in: query
name: pageSize
schema
type: int
format: int64
req: False
in: query
name: expand
style: form
explode: False
schema
type: arr
items
enum
property
unitGroup
connectedUnits
type: str
req: False
#method:post
-security
oauth2: ['units.create', 'setup.manage', 'admin']
-
opid: Unit_create
params
in: header
name: Idempotency-Key
schema
type: str
req: False
ref: #CreateUnitModel
---
##path: /inventory/v1/units/$count
#method:get
-security
oauth2: ['units.read', 'setup.read', 'setup.manage', 'admin']
-
opid: Unit_getCount
params
in: query
name: propertyId
schema
type: str
req: False
in: query
name: unitGroupId
schema
type: str
req: False
in: query
name: unitGroupIds
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: unitAttributeIds
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: isOccupied
schema
type: bool
req: False
in: query
name: maintenanceType
schema
type: str
enum
OutOfService
OutOfOrder
OutOfInventory
req: False
in: query
name: condition
schema
type: str
enum
Clean
CleanToBeInspected
Dirty
req: False
in: query
name: textSearch
schema
type: str
req: False
---
##path: /inventory/v1/units/bulk
#method:post
-security
oauth2: ['units.create', 'setup.manage', 'admin']
-
opid: Unit_bulkCreateUnits
params
in: header
name: Idempotency-Key
schema
type: str
req: False
ref: #BulkCreateUnitsModel
---
##path: /inventory/v1/unit-attributes/{id}
#method:get
-security
oauth2: ['unitattributes.read', 'setup.read', 'setup.manage', 'admin']
-
opid: UnitAttribute_getById
params
in: path
name: id
req: True
schema
type: str
#method:patch
-security
oauth2: ['unitattributes.manage', 'setup.manage', 'admin']
-
opid: UnitAttribute_modifyDescription
params
in: path
name: id
req: True
schema
type: str
ref: #PropertyModifyDetailsRequest
#method:delete
-security
oauth2: ['unitattributes.delete', 'setup.manage', 'admin']
-
opid: UnitAttribute_deleteById
params
in: path
name: id
req: True
schema
type: str
---
##path: /inventory/v1/unit-attributes
#method:get
-security
oauth2: ['unitattributes.read', 'setup.read', 'setup.manage', 'admin']
-
opid: UnitAttribute_listAttributes
params
in: query
name: pageNumber
schema
type: int
def: 1
req: False
in: query
name: pageSize
schema
type: int
format: int64
req: False
#method:post
-security
oauth2: ['unitattributes.create', 'setup.manage', 'admin']
-
opid: UnitAttribute_createNewAttribute
params
in: header
name: Idempotency-Key
schema
type: str
req: False
ref: #CreateUnitAttributeDefinitionModel
---
##path: /inventory/v1/unit-groups
#method:post
-security
oauth2: ['unitgroups.create', 'setup.manage', 'admin']
-
opid: UnitGroup_createNewGroup
params
in: header
name: Idempotency-Key
schema
type: str
req: False
ref: #CreateUnitGroupModel
#method:get
-security
oauth2: ['unitgroups.read', 'setup.read', 'setup.manage', 'admin']
-
opid: UnitGroup_getAll
params
in: query
name: propertyId
schema
type: str
req: False
in: query
name: unitGroupTypes
style: form
explode: False
schema
type: arr
items
enum
BedRoom
MeetingRoom
EventSpace
ParkingLot
Other
type: str
req: False
in: query
name: pageNumber
schema
type: int
def: 1
req: False
in: query
name: pageSize
schema
type: int
format: int64
req: False
in: query
name: expand
style: form
explode: False
schema
type: arr
items
enum
property
connectedUnitGroups
type: str
req: False
---
##path: /inventory/v1/unit-groups/$count
#method:get
-security
oauth2: ['unitgroups.read', 'setup.read', 'setup.manage', 'admin']
-
opid: UnitGroup_getCount
params
in: query
name: propertyId
schema
type: str
req: False
in: query
name: unitGroupTypes
style: form
explode: False
schema
type: arr
items
enum
BedRoom
MeetingRoom
EventSpace
ParkingLot
Other
type: str
req: False
---
##path: /inventory/v1/unit-groups/{id}
#method:get
-security
oauth2: ['unitgroups.read', 'setup.read', 'setup.manage', 'admin']
-
opid: UnitGroup_getById
params
in: path
name: id
req: True
schema
type: str
in: query
name: languages
style: form
explode: False
schema
type: arr
items
type: str
req: False
in: query
name: expand
style: form
explode: False
schema
type: arr
items
enum
property
connectedUnitGroups
type: str
req: False
#method:put
-security
oauth2: ['unitgroups.manage', 'setup.manage', 'admin']
-
opid: UnitGroup_updateGroup
params
in: path
name: id
req: True
schema
type: str
ref: #ReplaceUnitGroupModel
#method:delete
-security
oauth2: ['unitgroups.delete', 'setup.manage', 'admin']
-
opid: UnitGroup_deleteById
params
in: path
name: id
req: True
schema
type: str
---
